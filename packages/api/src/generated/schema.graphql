### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AggregateBlog {
  count: Int!
}

type AggregateBlogComment {
  count: Int!
}

type AggregateBlogPost {
  count: Int!
}

type AggregatePage {
  count: Int!
}

type AggregatePostImage {
  count: Int!
}

type AggregateSpeciality {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Appointment {
  apointmentDate: String!
  apointmentFulldate: Int!
  apointmentTime: String!
  diseaseId: Disease
  doctorArabic: String!
  doctorId: Doctor
  doctorName: String!
  dtId: DoctorSheduleTime
  gender: String!
  hospitalId: Hospital
  id: Int!
  isRead: Int!
  optId: OptTime
  patientId: Patient
  phone: String!
  phoneCode: String
  scheduleTimeId: SheduleTime
  status: Int
}

enum AppointmentOrderByInput {
  apointmentDate_ASC
  apointmentDate_DESC
  apointmentFulldate_ASC
  apointmentFulldate_DESC
  apointmentTime_ASC
  apointmentTime_DESC
  createdAt_ASC
  createdAt_DESC
  doctorArabic_ASC
  doctorArabic_DESC
  doctorName_ASC
  doctorName_DESC
  gender_ASC
  gender_DESC
  id_ASC
  id_DESC
  isRead_ASC
  isRead_DESC
  phone_ASC
  phone_DESC
  phoneCode_ASC
  phoneCode_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input AppointmentWhereInput {
  AND: [AppointmentWhereInput!]
  apointmentDate: String
  apointmentDate_contains: String
  apointmentDate_ends_with: String
  apointmentDate_gt: String
  apointmentDate_gte: String
  apointmentDate_in: [String!]
  apointmentDate_lt: String
  apointmentDate_lte: String
  apointmentDate_not: String
  apointmentDate_not_contains: String
  apointmentDate_not_ends_with: String
  apointmentDate_not_in: [String!]
  apointmentDate_not_starts_with: String
  apointmentDate_starts_with: String
  apointmentFulldate: Int
  apointmentFulldate_gt: Int
  apointmentFulldate_gte: Int
  apointmentFulldate_in: [Int!]
  apointmentFulldate_lt: Int
  apointmentFulldate_lte: Int
  apointmentFulldate_not: Int
  apointmentFulldate_not_in: [Int!]
  apointmentTime: String
  apointmentTime_contains: String
  apointmentTime_ends_with: String
  apointmentTime_gt: String
  apointmentTime_gte: String
  apointmentTime_in: [String!]
  apointmentTime_lt: String
  apointmentTime_lte: String
  apointmentTime_not: String
  apointmentTime_not_contains: String
  apointmentTime_not_ends_with: String
  apointmentTime_not_in: [String!]
  apointmentTime_not_starts_with: String
  apointmentTime_starts_with: String
  diseaseId: DiseaseWhereInput
  doctorArabic: String
  doctorArabic_contains: String
  doctorArabic_ends_with: String
  doctorArabic_gt: String
  doctorArabic_gte: String
  doctorArabic_in: [String!]
  doctorArabic_lt: String
  doctorArabic_lte: String
  doctorArabic_not: String
  doctorArabic_not_contains: String
  doctorArabic_not_ends_with: String
  doctorArabic_not_in: [String!]
  doctorArabic_not_starts_with: String
  doctorArabic_starts_with: String
  doctorId: DoctorWhereInput
  doctorName: String
  doctorName_contains: String
  doctorName_ends_with: String
  doctorName_gt: String
  doctorName_gte: String
  doctorName_in: [String!]
  doctorName_lt: String
  doctorName_lte: String
  doctorName_not: String
  doctorName_not_contains: String
  doctorName_not_ends_with: String
  doctorName_not_in: [String!]
  doctorName_not_starts_with: String
  doctorName_starts_with: String
  dtId: DoctorSheduleTimeWhereInput
  gender: String
  gender_contains: String
  gender_ends_with: String
  gender_gt: String
  gender_gte: String
  gender_in: [String!]
  gender_lt: String
  gender_lte: String
  gender_not: String
  gender_not_contains: String
  gender_not_ends_with: String
  gender_not_in: [String!]
  gender_not_starts_with: String
  gender_starts_with: String
  hospitalId: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  isRead: Int
  isRead_gt: Int
  isRead_gte: Int
  isRead_in: [Int!]
  isRead_lt: Int
  isRead_lte: Int
  isRead_not: Int
  isRead_not_in: [Int!]
  NOT: [AppointmentWhereInput!]
  optId: OptTimeWhereInput
  OR: [AppointmentWhereInput!]
  patientId: PatientWhereInput
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  phoneCode: String
  phoneCode_contains: String
  phoneCode_ends_with: String
  phoneCode_gt: String
  phoneCode_gte: String
  phoneCode_in: [String!]
  phoneCode_lt: String
  phoneCode_lte: String
  phoneCode_not: String
  phoneCode_not_contains: String
  phoneCode_not_ends_with: String
  phoneCode_not_in: [String!]
  phoneCode_not_starts_with: String
  phoneCode_starts_with: String
  scheduleTimeId: SheduleTimeWhereInput
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
}

type AuthPayload {
  token: String
  user: User
}

type Blog {
  bannerImage: String!
  createdDate: DateTime!
  hospitalId: Hospital
  id: Int!
  name: String!
  status: Int!
  updatedAt: DateTime
}

type BlogComment {
  commentator: Int!
  commentatorName: String!
  comments: String!
  id: Int!
  logCreated: DateTime!
  postId: BlogPost
  updatedAt: DateTime
}

type BlogCommentConnection {
  aggregate: AggregateBlogComment!
  edges: [BlogCommentEdge!]!
  pageInfo: PageInfo!
}

type BlogCommentEdge {
  cursor: String!
  node: BlogComment!
}

enum BlogCommentOrderByInput {
  commentator_ASC
  commentator_DESC
  commentatorName_ASC
  commentatorName_DESC
  comments_ASC
  comments_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  logCreated_ASC
  logCreated_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input BlogCommentWhereInput {
  AND: [BlogCommentWhereInput!]
  commentator: Int
  commentator_gt: Int
  commentator_gte: Int
  commentator_in: [Int!]
  commentator_lt: Int
  commentator_lte: Int
  commentator_not: Int
  commentator_not_in: [Int!]
  commentatorName: String
  commentatorName_contains: String
  commentatorName_ends_with: String
  commentatorName_gt: String
  commentatorName_gte: String
  commentatorName_in: [String!]
  commentatorName_lt: String
  commentatorName_lte: String
  commentatorName_not: String
  commentatorName_not_contains: String
  commentatorName_not_ends_with: String
  commentatorName_not_in: [String!]
  commentatorName_not_starts_with: String
  commentatorName_starts_with: String
  comments: String
  comments_contains: String
  comments_ends_with: String
  comments_gt: String
  comments_gte: String
  comments_in: [String!]
  comments_lt: String
  comments_lte: String
  comments_not: String
  comments_not_contains: String
  comments_not_ends_with: String
  comments_not_in: [String!]
  comments_not_starts_with: String
  comments_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  logCreated: DateTime
  logCreated_gt: DateTime
  logCreated_gte: DateTime
  logCreated_in: [DateTime!]
  logCreated_lt: DateTime
  logCreated_lte: DateTime
  logCreated_not: DateTime
  logCreated_not_in: [DateTime!]
  NOT: [BlogCommentWhereInput!]
  OR: [BlogCommentWhereInput!]
  postId: BlogPostWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input BlogCommentWhereUniqueInput {
  id: Int
}

type BlogConnection {
  aggregate: AggregateBlog!
  edges: [BlogEdge!]!
  pageInfo: PageInfo!
}

type BlogEdge {
  cursor: String!
  node: Blog!
}

enum BlogOrderByInput {
  bannerImage_ASC
  bannerImage_DESC
  createdAt_ASC
  createdAt_DESC
  createdDate_ASC
  createdDate_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BlogPost {
  blogId: Blog
  hospitalId: Hospital
  id: Int!
  images(after: String, before: String, first: Int, last: Int, orderBy: PostImageOrderByInput, skip: Int, where: PostImageWhereInput): [PostImage!]
  logCreated: DateTime!
  postContent: String!
  postTitle: String!
  status: Int!
  totalViewers: Int!
  updatedAt: DateTime
}

type BlogPostConnection {
  aggregate: AggregateBlogPost!
  edges: [BlogPostEdge!]!
  pageInfo: PageInfo!
}

type BlogPostEdge {
  cursor: String!
  node: BlogPost!
}

enum BlogPostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  logCreated_ASC
  logCreated_DESC
  postContent_ASC
  postContent_DESC
  postTitle_ASC
  postTitle_DESC
  status_ASC
  status_DESC
  totalViewers_ASC
  totalViewers_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input BlogPostWhereInput {
  AND: [BlogPostWhereInput!]
  blogId: BlogWhereInput
  hospitalId: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  images_every: PostImageWhereInput
  images_none: PostImageWhereInput
  images_some: PostImageWhereInput
  logCreated: DateTime
  logCreated_gt: DateTime
  logCreated_gte: DateTime
  logCreated_in: [DateTime!]
  logCreated_lt: DateTime
  logCreated_lte: DateTime
  logCreated_not: DateTime
  logCreated_not_in: [DateTime!]
  NOT: [BlogPostWhereInput!]
  OR: [BlogPostWhereInput!]
  postContent: String
  postContent_contains: String
  postContent_ends_with: String
  postContent_gt: String
  postContent_gte: String
  postContent_in: [String!]
  postContent_lt: String
  postContent_lte: String
  postContent_not: String
  postContent_not_contains: String
  postContent_not_ends_with: String
  postContent_not_in: [String!]
  postContent_not_starts_with: String
  postContent_starts_with: String
  postTitle: String
  postTitle_contains: String
  postTitle_ends_with: String
  postTitle_gt: String
  postTitle_gte: String
  postTitle_in: [String!]
  postTitle_lt: String
  postTitle_lte: String
  postTitle_not: String
  postTitle_not_contains: String
  postTitle_not_ends_with: String
  postTitle_not_in: [String!]
  postTitle_not_starts_with: String
  postTitle_starts_with: String
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  totalViewers: Int
  totalViewers_gt: Int
  totalViewers_gte: Int
  totalViewers_in: [Int!]
  totalViewers_lt: Int
  totalViewers_lte: Int
  totalViewers_not: Int
  totalViewers_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input BlogPostWhereUniqueInput {
  id: Int
}

input BlogWhereInput {
  AND: [BlogWhereInput!]
  bannerImage: String
  bannerImage_contains: String
  bannerImage_ends_with: String
  bannerImage_gt: String
  bannerImage_gte: String
  bannerImage_in: [String!]
  bannerImage_lt: String
  bannerImage_lte: String
  bannerImage_not: String
  bannerImage_not_contains: String
  bannerImage_not_ends_with: String
  bannerImage_not_in: [String!]
  bannerImage_not_starts_with: String
  bannerImage_starts_with: String
  createdDate: DateTime
  createdDate_gt: DateTime
  createdDate_gte: DateTime
  createdDate_in: [DateTime!]
  createdDate_lt: DateTime
  createdDate_lte: DateTime
  createdDate_not: DateTime
  createdDate_not_in: [DateTime!]
  hospitalId: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [BlogWhereInput!]
  OR: [BlogWhereInput!]
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input BlogWhereUniqueInput {
  id: Int
}

type City {
  city: String
  cityArabic: String!
  countryId: Int
  createdAt: DateTime!
  hospital(after: String, before: String, first: Int, last: Int, orderBy: HospitalOrderByInput, skip: Int, where: HospitalWhereInput): [Hospital!]
  id: Int!
  updatedAt: DateTime!
}

input CityWhereInput {
  AND: [CityWhereInput!]
  city: String
  city_contains: String
  city_ends_with: String
  city_gt: String
  city_gte: String
  city_in: [String!]
  city_lt: String
  city_lte: String
  city_not: String
  city_not_contains: String
  city_not_ends_with: String
  city_not_in: [String!]
  city_not_starts_with: String
  city_starts_with: String
  cityArabic: String
  cityArabic_contains: String
  cityArabic_ends_with: String
  cityArabic_gt: String
  cityArabic_gte: String
  cityArabic_in: [String!]
  cityArabic_lt: String
  cityArabic_lte: String
  cityArabic_not: String
  cityArabic_not_contains: String
  cityArabic_not_ends_with: String
  cityArabic_not_in: [String!]
  cityArabic_not_starts_with: String
  cityArabic_starts_with: String
  countryId: Int
  countryId_gt: Int
  countryId_gte: Int
  countryId_in: [Int!]
  countryId_lt: Int
  countryId_lte: Int
  countryId_not: Int
  countryId_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  hospital_every: HospitalWhereInput
  hospital_none: HospitalWhereInput
  hospital_some: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [CityWhereInput!]
  OR: [CityWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Country {
  country: String
  countryArabic: String!
  createdAt: DateTime!
  id: Int!
  updatedAt: DateTime!
}

input CountryWhereInput {
  AND: [CountryWhereInput!]
  country: String
  country_contains: String
  country_ends_with: String
  country_gt: String
  country_gte: String
  country_in: [String!]
  country_lt: String
  country_lte: String
  country_not: String
  country_not_contains: String
  country_not_ends_with: String
  country_not_in: [String!]
  country_not_starts_with: String
  country_starts_with: String
  countryArabic: String
  countryArabic_contains: String
  countryArabic_ends_with: String
  countryArabic_gt: String
  countryArabic_gte: String
  countryArabic_in: [String!]
  countryArabic_lt: String
  countryArabic_lte: String
  countryArabic_not: String
  countryArabic_not_contains: String
  countryArabic_not_ends_with: String
  countryArabic_not_in: [String!]
  countryArabic_not_starts_with: String
  countryArabic_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input CustomChangeUserPasswordInput {
  current_password: String!
  new_password: String!
}

input CustomUpdateUserInput {
  email: String!
  first_name: String!
  last_name: String!
}

scalar DateTime

type Disease {
  createdAt: DateTime!
  disease: String
  diseaseArabic: String!
  id: Int!
  updatedAt: DateTime!
}

input DiseaseWhereInput {
  AND: [DiseaseWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  disease: String
  disease_contains: String
  disease_ends_with: String
  disease_gt: String
  disease_gte: String
  disease_in: [String!]
  disease_lt: String
  disease_lte: String
  disease_not: String
  disease_not_contains: String
  disease_not_ends_with: String
  disease_not_in: [String!]
  disease_not_starts_with: String
  disease_starts_with: String
  diseaseArabic: String
  diseaseArabic_contains: String
  diseaseArabic_ends_with: String
  diseaseArabic_gt: String
  diseaseArabic_gte: String
  diseaseArabic_in: [String!]
  diseaseArabic_lt: String
  diseaseArabic_lte: String
  diseaseArabic_not: String
  diseaseArabic_not_contains: String
  diseaseArabic_not_ends_with: String
  diseaseArabic_not_in: [String!]
  diseaseArabic_not_starts_with: String
  diseaseArabic_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [DiseaseWhereInput!]
  OR: [DiseaseWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Doctor {
  apiKey: String!
  createdDate: DateTime!
  designation: String
  doctorCv: String!
  email: String
  fees: String
  gender: String
  hospital(after: String, before: String, first: Int, last: Int, orderBy: HospitalOrderByInput, skip: Int, where: HospitalWhereInput): [Hospital!]
  id: Int!
  mohcard: String
  mohId: String!
  name: String
  nameArabic: String
  password: String!
  phone: String
  picture: String
  specialities: Speciality
  specialityId: Int
  status: Int
  updatedAt: DateTime
}

enum DoctorOrderByInput {
  apiKey_ASC
  apiKey_DESC
  createdAt_ASC
  createdAt_DESC
  createdDate_ASC
  createdDate_DESC
  designation_ASC
  designation_DESC
  doctorCv_ASC
  doctorCv_DESC
  email_ASC
  email_DESC
  fees_ASC
  fees_DESC
  gender_ASC
  gender_DESC
  id_ASC
  id_DESC
  mohcard_ASC
  mohcard_DESC
  mohId_ASC
  mohId_DESC
  name_ASC
  name_DESC
  nameArabic_ASC
  nameArabic_DESC
  password_ASC
  password_DESC
  phone_ASC
  phone_DESC
  picture_ASC
  picture_DESC
  specialityId_ASC
  specialityId_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DoctorSheduleTime {
  createdAt: DateTime!
  drSheduleId: Int
  id: Int!
  scheduleTime: Int
  status: Int
  updatedAt: DateTime!
}

input DoctorSheduleTimeWhereInput {
  AND: [DoctorSheduleTimeWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  drSheduleId: Int
  drSheduleId_gt: Int
  drSheduleId_gte: Int
  drSheduleId_in: [Int!]
  drSheduleId_lt: Int
  drSheduleId_lte: Int
  drSheduleId_not: Int
  drSheduleId_not_in: [Int!]
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [DoctorSheduleTimeWhereInput!]
  OR: [DoctorSheduleTimeWhereInput!]
  scheduleTime: Int
  scheduleTime_gt: Int
  scheduleTime_gte: Int
  scheduleTime_in: [Int!]
  scheduleTime_lt: Int
  scheduleTime_lte: Int
  scheduleTime_not: Int
  scheduleTime_not_in: [Int!]
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input DoctorWhereInput {
  AND: [DoctorWhereInput!]
  apiKey: String
  apiKey_contains: String
  apiKey_ends_with: String
  apiKey_gt: String
  apiKey_gte: String
  apiKey_in: [String!]
  apiKey_lt: String
  apiKey_lte: String
  apiKey_not: String
  apiKey_not_contains: String
  apiKey_not_ends_with: String
  apiKey_not_in: [String!]
  apiKey_not_starts_with: String
  apiKey_starts_with: String
  createdDate: DateTime
  createdDate_gt: DateTime
  createdDate_gte: DateTime
  createdDate_in: [DateTime!]
  createdDate_lt: DateTime
  createdDate_lte: DateTime
  createdDate_not: DateTime
  createdDate_not_in: [DateTime!]
  designation: String
  designation_contains: String
  designation_ends_with: String
  designation_gt: String
  designation_gte: String
  designation_in: [String!]
  designation_lt: String
  designation_lte: String
  designation_not: String
  designation_not_contains: String
  designation_not_ends_with: String
  designation_not_in: [String!]
  designation_not_starts_with: String
  designation_starts_with: String
  doctorCv: String
  doctorCv_contains: String
  doctorCv_ends_with: String
  doctorCv_gt: String
  doctorCv_gte: String
  doctorCv_in: [String!]
  doctorCv_lt: String
  doctorCv_lte: String
  doctorCv_not: String
  doctorCv_not_contains: String
  doctorCv_not_ends_with: String
  doctorCv_not_in: [String!]
  doctorCv_not_starts_with: String
  doctorCv_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  fees: String
  fees_contains: String
  fees_ends_with: String
  fees_gt: String
  fees_gte: String
  fees_in: [String!]
  fees_lt: String
  fees_lte: String
  fees_not: String
  fees_not_contains: String
  fees_not_ends_with: String
  fees_not_in: [String!]
  fees_not_starts_with: String
  fees_starts_with: String
  gender: String
  gender_contains: String
  gender_ends_with: String
  gender_gt: String
  gender_gte: String
  gender_in: [String!]
  gender_lt: String
  gender_lte: String
  gender_not: String
  gender_not_contains: String
  gender_not_ends_with: String
  gender_not_in: [String!]
  gender_not_starts_with: String
  gender_starts_with: String
  hospital_every: HospitalWhereInput
  hospital_none: HospitalWhereInput
  hospital_some: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  mohcard: String
  mohcard_contains: String
  mohcard_ends_with: String
  mohcard_gt: String
  mohcard_gte: String
  mohcard_in: [String!]
  mohcard_lt: String
  mohcard_lte: String
  mohcard_not: String
  mohcard_not_contains: String
  mohcard_not_ends_with: String
  mohcard_not_in: [String!]
  mohcard_not_starts_with: String
  mohcard_starts_with: String
  mohId: String
  mohId_contains: String
  mohId_ends_with: String
  mohId_gt: String
  mohId_gte: String
  mohId_in: [String!]
  mohId_lt: String
  mohId_lte: String
  mohId_not: String
  mohId_not_contains: String
  mohId_not_ends_with: String
  mohId_not_in: [String!]
  mohId_not_starts_with: String
  mohId_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  nameArabic: String
  nameArabic_contains: String
  nameArabic_ends_with: String
  nameArabic_gt: String
  nameArabic_gte: String
  nameArabic_in: [String!]
  nameArabic_lt: String
  nameArabic_lte: String
  nameArabic_not: String
  nameArabic_not_contains: String
  nameArabic_not_ends_with: String
  nameArabic_not_in: [String!]
  nameArabic_not_starts_with: String
  nameArabic_starts_with: String
  NOT: [DoctorWhereInput!]
  OR: [DoctorWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  picture: String
  picture_contains: String
  picture_ends_with: String
  picture_gt: String
  picture_gte: String
  picture_in: [String!]
  picture_lt: String
  picture_lte: String
  picture_not: String
  picture_not_contains: String
  picture_not_ends_with: String
  picture_not_in: [String!]
  picture_not_starts_with: String
  picture_starts_with: String
  specialities: SpecialityWhereInput
  specialityId: Int
  specialityId_gt: Int
  specialityId_gte: Int
  specialityId_in: [Int!]
  specialityId_lt: Int
  specialityId_lte: Int
  specialityId_not: Int
  specialityId_not_in: [Int!]
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input DoctorWhereUniqueInput {
  id: Int
}

type Hospital {
  address: String!
  addressArabic: String!
  apiKey: String!
  city: City
  countryId: Country
  createdAt: DateTime!
  createdDate: DateTime!
  doctors(after: String, before: String, first: Int, last: Int, orderBy: DoctorOrderByInput, skip: Int, where: DoctorWhereInput): [Doctor!]
  email: String
  hospital: String
  hospitalArabic: String!
  id: Int!
  insurances(after: String, before: String, first: Int, last: Int, orderBy: InsuranceOrderByInput, skip: Int, where: InsuranceWhereInput): [Insurance!]
  language: String!
  latitude: String!
  location: String!
  logo: String
  longitude: String!
  password: String
  phone: String
  phone1: String!
  status: Int
  type: String
  uniqeId: String!
  updatedAt: DateTime!
}

enum HospitalOrderByInput {
  address_ASC
  address_DESC
  addressArabic_ASC
  addressArabic_DESC
  apiKey_ASC
  apiKey_DESC
  createdAt_ASC
  createdAt_DESC
  createdDate_ASC
  createdDate_DESC
  email_ASC
  email_DESC
  hospital_ASC
  hospital_DESC
  hospitalArabic_ASC
  hospitalArabic_DESC
  id_ASC
  id_DESC
  language_ASC
  language_DESC
  latitude_ASC
  latitude_DESC
  location_ASC
  location_DESC
  logo_ASC
  logo_DESC
  longitude_ASC
  longitude_DESC
  password_ASC
  password_DESC
  phone_ASC
  phone_DESC
  phone1_ASC
  phone1_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  uniqeId_ASC
  uniqeId_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input HospitalWhereInput {
  address: String
  address_contains: String
  address_ends_with: String
  address_gt: String
  address_gte: String
  address_in: [String!]
  address_lt: String
  address_lte: String
  address_not: String
  address_not_contains: String
  address_not_ends_with: String
  address_not_in: [String!]
  address_not_starts_with: String
  address_starts_with: String
  addressArabic: String
  addressArabic_contains: String
  addressArabic_ends_with: String
  addressArabic_gt: String
  addressArabic_gte: String
  addressArabic_in: [String!]
  addressArabic_lt: String
  addressArabic_lte: String
  addressArabic_not: String
  addressArabic_not_contains: String
  addressArabic_not_ends_with: String
  addressArabic_not_in: [String!]
  addressArabic_not_starts_with: String
  addressArabic_starts_with: String
  AND: [HospitalWhereInput!]
  apiKey: String
  apiKey_contains: String
  apiKey_ends_with: String
  apiKey_gt: String
  apiKey_gte: String
  apiKey_in: [String!]
  apiKey_lt: String
  apiKey_lte: String
  apiKey_not: String
  apiKey_not_contains: String
  apiKey_not_ends_with: String
  apiKey_not_in: [String!]
  apiKey_not_starts_with: String
  apiKey_starts_with: String
  city: CityWhereInput
  countryId: CountryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdDate: DateTime
  createdDate_gt: DateTime
  createdDate_gte: DateTime
  createdDate_in: [DateTime!]
  createdDate_lt: DateTime
  createdDate_lte: DateTime
  createdDate_not: DateTime
  createdDate_not_in: [DateTime!]
  doctors_every: DoctorWhereInput
  doctors_none: DoctorWhereInput
  doctors_some: DoctorWhereInput
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  hospital: String
  hospital_contains: String
  hospital_ends_with: String
  hospital_gt: String
  hospital_gte: String
  hospital_in: [String!]
  hospital_lt: String
  hospital_lte: String
  hospital_not: String
  hospital_not_contains: String
  hospital_not_ends_with: String
  hospital_not_in: [String!]
  hospital_not_starts_with: String
  hospital_starts_with: String
  hospitalArabic: String
  hospitalArabic_contains: String
  hospitalArabic_ends_with: String
  hospitalArabic_gt: String
  hospitalArabic_gte: String
  hospitalArabic_in: [String!]
  hospitalArabic_lt: String
  hospitalArabic_lte: String
  hospitalArabic_not: String
  hospitalArabic_not_contains: String
  hospitalArabic_not_ends_with: String
  hospitalArabic_not_in: [String!]
  hospitalArabic_not_starts_with: String
  hospitalArabic_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  insurances_every: InsuranceWhereInput
  insurances_none: InsuranceWhereInput
  insurances_some: InsuranceWhereInput
  language: String
  language_contains: String
  language_ends_with: String
  language_gt: String
  language_gte: String
  language_in: [String!]
  language_lt: String
  language_lte: String
  language_not: String
  language_not_contains: String
  language_not_ends_with: String
  language_not_in: [String!]
  language_not_starts_with: String
  language_starts_with: String
  latitude: String
  latitude_contains: String
  latitude_ends_with: String
  latitude_gt: String
  latitude_gte: String
  latitude_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_not: String
  latitude_not_contains: String
  latitude_not_ends_with: String
  latitude_not_in: [String!]
  latitude_not_starts_with: String
  latitude_starts_with: String
  location: String
  location_contains: String
  location_ends_with: String
  location_gt: String
  location_gte: String
  location_in: [String!]
  location_lt: String
  location_lte: String
  location_not: String
  location_not_contains: String
  location_not_ends_with: String
  location_not_in: [String!]
  location_not_starts_with: String
  location_starts_with: String
  logo: String
  logo_contains: String
  logo_ends_with: String
  logo_gt: String
  logo_gte: String
  logo_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_not: String
  logo_not_contains: String
  logo_not_ends_with: String
  logo_not_in: [String!]
  logo_not_starts_with: String
  logo_starts_with: String
  longitude: String
  longitude_contains: String
  longitude_ends_with: String
  longitude_gt: String
  longitude_gte: String
  longitude_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_not: String
  longitude_not_contains: String
  longitude_not_ends_with: String
  longitude_not_in: [String!]
  longitude_not_starts_with: String
  longitude_starts_with: String
  NOT: [HospitalWhereInput!]
  OR: [HospitalWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  phone1: String
  phone1_contains: String
  phone1_ends_with: String
  phone1_gt: String
  phone1_gte: String
  phone1_in: [String!]
  phone1_lt: String
  phone1_lte: String
  phone1_not: String
  phone1_not_contains: String
  phone1_not_ends_with: String
  phone1_not_in: [String!]
  phone1_not_starts_with: String
  phone1_starts_with: String
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  uniqeId: String
  uniqeId_contains: String
  uniqeId_ends_with: String
  uniqeId_gt: String
  uniqeId_gte: String
  uniqeId_in: [String!]
  uniqeId_lt: String
  uniqeId_lte: String
  uniqeId_not: String
  uniqeId_not_contains: String
  uniqeId_not_ends_with: String
  uniqeId_not_in: [String!]
  uniqeId_not_starts_with: String
  uniqeId_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Insurance {
  countryId: Int!
  createdAt: DateTime!
  hospitals(after: String, before: String, first: Int, last: Int, orderBy: HospitalOrderByInput, skip: Int, where: HospitalWhereInput): [Hospital!]
  id: Int!
  insurance: String
  insuranceArabic: String
  updatedAt: DateTime!
}

enum InsuranceOrderByInput {
  countryId_ASC
  countryId_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  insurance_ASC
  insurance_DESC
  insuranceArabic_ASC
  insuranceArabic_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input InsuranceWhereInput {
  AND: [InsuranceWhereInput!]
  countryId: Int
  countryId_gt: Int
  countryId_gte: Int
  countryId_in: [Int!]
  countryId_lt: Int
  countryId_lte: Int
  countryId_not: Int
  countryId_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  hospitals_every: HospitalWhereInput
  hospitals_none: HospitalWhereInput
  hospitals_some: HospitalWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  insurance: String
  insurance_contains: String
  insurance_ends_with: String
  insurance_gt: String
  insurance_gte: String
  insurance_in: [String!]
  insurance_lt: String
  insurance_lte: String
  insurance_not: String
  insurance_not_contains: String
  insurance_not_ends_with: String
  insurance_not_in: [String!]
  insurance_not_starts_with: String
  insurance_starts_with: String
  insuranceArabic: String
  insuranceArabic_contains: String
  insuranceArabic_ends_with: String
  insuranceArabic_gt: String
  insuranceArabic_gte: String
  insuranceArabic_in: [String!]
  insuranceArabic_lt: String
  insuranceArabic_lte: String
  insuranceArabic_not: String
  insuranceArabic_not_contains: String
  insuranceArabic_not_ends_with: String
  insuranceArabic_not_in: [String!]
  insuranceArabic_not_starts_with: String
  insuranceArabic_starts_with: String
  NOT: [InsuranceWhereInput!]
  OR: [InsuranceWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Mutation {
  changeHospitalPassowrd(data: CustomChangeUserPasswordInput): Hospital
  changePatientPassowrd(data: CustomChangeUserPasswordInput): Patient
  deleteDoctor(where: DoctorWhereUniqueInput!): Doctor
  login(email: String, password: String): AuthPayload
  signup(email: String, first_name: String, last_name: String, password: String): AuthPayload
  updateUser(data: CustomUpdateUserInput): User
}

type OptTime {
  createdAt: DateTime!
  fifteenMins: String
  id: Int!
  thirtyMins: String
  twentyMins: String
  updatedAt: DateTime!
}

input OptTimeWhereInput {
  AND: [OptTimeWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  fifteenMins: String
  fifteenMins_contains: String
  fifteenMins_ends_with: String
  fifteenMins_gt: String
  fifteenMins_gte: String
  fifteenMins_in: [String!]
  fifteenMins_lt: String
  fifteenMins_lte: String
  fifteenMins_not: String
  fifteenMins_not_contains: String
  fifteenMins_not_ends_with: String
  fifteenMins_not_in: [String!]
  fifteenMins_not_starts_with: String
  fifteenMins_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [OptTimeWhereInput!]
  OR: [OptTimeWhereInput!]
  thirtyMins: String
  thirtyMins_contains: String
  thirtyMins_ends_with: String
  thirtyMins_gt: String
  thirtyMins_gte: String
  thirtyMins_in: [String!]
  thirtyMins_lt: String
  thirtyMins_lte: String
  thirtyMins_not: String
  thirtyMins_not_contains: String
  thirtyMins_not_ends_with: String
  thirtyMins_not_in: [String!]
  thirtyMins_not_starts_with: String
  thirtyMins_starts_with: String
  twentyMins: String
  twentyMins_contains: String
  twentyMins_ends_with: String
  twentyMins_gt: String
  twentyMins_gte: String
  twentyMins_in: [String!]
  twentyMins_lt: String
  twentyMins_lte: String
  twentyMins_not: String
  twentyMins_not_contains: String
  twentyMins_not_ends_with: String
  twentyMins_not_in: [String!]
  twentyMins_not_starts_with: String
  twentyMins_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Page {
  content: String
  content_ar: String
  createdAt: DateTime!
  id: Int!
  slug: String
  slug_ar: String
  title: String
  title_ar: String
  updatedAt: DateTime!
}

type PageConnection {
  aggregate: AggregatePage!
  edges: [PageEdge!]!
  pageInfo: PageInfo!
}

type PageEdge {
  cursor: String!
  node: Page!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

enum PageOrderByInput {
  content_ar_ASC
  content_ar_DESC
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  slug_ar_ASC
  slug_ar_DESC
  slug_ASC
  slug_DESC
  title_ar_ASC
  title_ar_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PageWhereInput {
  AND: [PageWhereInput!]
  content: String
  content_ar: String
  content_ar_contains: String
  content_ar_ends_with: String
  content_ar_gt: String
  content_ar_gte: String
  content_ar_in: [String!]
  content_ar_lt: String
  content_ar_lte: String
  content_ar_not: String
  content_ar_not_contains: String
  content_ar_not_ends_with: String
  content_ar_not_in: [String!]
  content_ar_not_starts_with: String
  content_ar_starts_with: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [PageWhereInput!]
  OR: [PageWhereInput!]
  slug: String
  slug_ar: String
  slug_ar_contains: String
  slug_ar_ends_with: String
  slug_ar_gt: String
  slug_ar_gte: String
  slug_ar_in: [String!]
  slug_ar_lt: String
  slug_ar_lte: String
  slug_ar_not: String
  slug_ar_not_contains: String
  slug_ar_not_ends_with: String
  slug_ar_not_in: [String!]
  slug_ar_not_starts_with: String
  slug_ar_starts_with: String
  slug_contains: String
  slug_ends_with: String
  slug_gt: String
  slug_gte: String
  slug_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_not: String
  slug_not_contains: String
  slug_not_ends_with: String
  slug_not_in: [String!]
  slug_not_starts_with: String
  slug_starts_with: String
  title: String
  title_ar: String
  title_ar_contains: String
  title_ar_ends_with: String
  title_ar_gt: String
  title_ar_gte: String
  title_ar_in: [String!]
  title_ar_lt: String
  title_ar_lte: String
  title_ar_not: String
  title_ar_not_contains: String
  title_ar_not_ends_with: String
  title_ar_not_in: [String!]
  title_ar_not_starts_with: String
  title_ar_starts_with: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input PageWhereUniqueInput {
  id: Int
  slug: String
  slug_ar: String
}

type Patient {
  age: Int!
  apiKey: String!
  createdDate: DateTime!
  dob: String
  email: String
  gender: String
  id: Int!
  lastAction: String!
  lastSeen: DateTime!
  mailSubs: Int
  mobile: String
  name: String
  password: String
  status: Int!
  uniqeId: String!
}

input PatientWhereInput {
  age: Int
  age_gt: Int
  age_gte: Int
  age_in: [Int!]
  age_lt: Int
  age_lte: Int
  age_not: Int
  age_not_in: [Int!]
  AND: [PatientWhereInput!]
  apiKey: String
  apiKey_contains: String
  apiKey_ends_with: String
  apiKey_gt: String
  apiKey_gte: String
  apiKey_in: [String!]
  apiKey_lt: String
  apiKey_lte: String
  apiKey_not: String
  apiKey_not_contains: String
  apiKey_not_ends_with: String
  apiKey_not_in: [String!]
  apiKey_not_starts_with: String
  apiKey_starts_with: String
  createdDate: DateTime
  createdDate_gt: DateTime
  createdDate_gte: DateTime
  createdDate_in: [DateTime!]
  createdDate_lt: DateTime
  createdDate_lte: DateTime
  createdDate_not: DateTime
  createdDate_not_in: [DateTime!]
  dob: String
  dob_contains: String
  dob_ends_with: String
  dob_gt: String
  dob_gte: String
  dob_in: [String!]
  dob_lt: String
  dob_lte: String
  dob_not: String
  dob_not_contains: String
  dob_not_ends_with: String
  dob_not_in: [String!]
  dob_not_starts_with: String
  dob_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  gender: String
  gender_contains: String
  gender_ends_with: String
  gender_gt: String
  gender_gte: String
  gender_in: [String!]
  gender_lt: String
  gender_lte: String
  gender_not: String
  gender_not_contains: String
  gender_not_ends_with: String
  gender_not_in: [String!]
  gender_not_starts_with: String
  gender_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  lastAction: String
  lastAction_contains: String
  lastAction_ends_with: String
  lastAction_gt: String
  lastAction_gte: String
  lastAction_in: [String!]
  lastAction_lt: String
  lastAction_lte: String
  lastAction_not: String
  lastAction_not_contains: String
  lastAction_not_ends_with: String
  lastAction_not_in: [String!]
  lastAction_not_starts_with: String
  lastAction_starts_with: String
  lastSeen: DateTime
  lastSeen_gt: DateTime
  lastSeen_gte: DateTime
  lastSeen_in: [DateTime!]
  lastSeen_lt: DateTime
  lastSeen_lte: DateTime
  lastSeen_not: DateTime
  lastSeen_not_in: [DateTime!]
  mailSubs: Int
  mailSubs_gt: Int
  mailSubs_gte: Int
  mailSubs_in: [Int!]
  mailSubs_lt: Int
  mailSubs_lte: Int
  mailSubs_not: Int
  mailSubs_not_in: [Int!]
  mobile: String
  mobile_contains: String
  mobile_ends_with: String
  mobile_gt: String
  mobile_gte: String
  mobile_in: [String!]
  mobile_lt: String
  mobile_lte: String
  mobile_not: String
  mobile_not_contains: String
  mobile_not_ends_with: String
  mobile_not_in: [String!]
  mobile_not_starts_with: String
  mobile_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [PatientWhereInput!]
  OR: [PatientWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  uniqeId: String
  uniqeId_contains: String
  uniqeId_ends_with: String
  uniqeId_gt: String
  uniqeId_gte: String
  uniqeId_in: [String!]
  uniqeId_lt: String
  uniqeId_lte: String
  uniqeId_not: String
  uniqeId_not_contains: String
  uniqeId_not_ends_with: String
  uniqeId_not_in: [String!]
  uniqeId_not_starts_with: String
  uniqeId_starts_with: String
}

type PostImage {
  createdAt: DateTime
  id: Int!
  isDefault: Int!
  pic: String!
  postId: BlogPost
  updatedAt: DateTime
}

type PostImageConnection {
  aggregate: AggregatePostImage!
  edges: [PostImageEdge!]!
  pageInfo: PageInfo!
}

type PostImageEdge {
  cursor: String!
  node: PostImage!
}

enum PostImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isDefault_ASC
  isDefault_DESC
  pic_ASC
  pic_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PostImageWhereInput {
  AND: [PostImageWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  isDefault: Int
  isDefault_gt: Int
  isDefault_gte: Int
  isDefault_in: [Int!]
  isDefault_lt: Int
  isDefault_lte: Int
  isDefault_not: Int
  isDefault_not_in: [Int!]
  NOT: [PostImageWhereInput!]
  OR: [PostImageWhereInput!]
  pic: String
  pic_contains: String
  pic_ends_with: String
  pic_gt: String
  pic_gte: String
  pic_in: [String!]
  pic_lt: String
  pic_lte: String
  pic_not: String
  pic_not_contains: String
  pic_not_ends_with: String
  pic_not_in: [String!]
  pic_not_starts_with: String
  pic_starts_with: String
  postId: BlogPostWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input PostImageWhereUniqueInput {
  id: Int
}

type Query {
  appointments(after: String, before: String, first: Int, last: Int, orderBy: AppointmentOrderByInput, skip: Int, where: AppointmentWhereInput): [Appointment!]!
  blog(where: BlogWhereUniqueInput!): Blog
  blogComment(where: BlogCommentWhereUniqueInput!): BlogComment
  blogComments(after: String, before: String, first: Int, last: Int, orderBy: BlogCommentOrderByInput, skip: Int, where: BlogCommentWhereInput): [BlogComment!]!
  blogCommentsConnection(after: String, before: String, first: Int, last: Int, orderBy: BlogCommentOrderByInput, skip: Int, where: BlogCommentWhereInput): BlogCommentConnection!
  blogPost(where: BlogPostWhereUniqueInput!): BlogPost
  blogPosts(after: String, before: String, first: Int, last: Int, orderBy: BlogPostOrderByInput, skip: Int, where: BlogPostWhereInput): [BlogPost!]!
  blogPostsConnection(after: String, before: String, first: Int, last: Int, orderBy: BlogPostOrderByInput, skip: Int, where: BlogPostWhereInput): BlogPostConnection!
  blogs(after: String, before: String, first: Int, last: Int, orderBy: BlogOrderByInput, skip: Int, where: BlogWhereInput): [Blog!]!
  blogsConnection(after: String, before: String, first: Int, last: Int, orderBy: BlogOrderByInput, skip: Int, where: BlogWhereInput): BlogConnection!
  doctors(after: String, before: String, first: Int, last: Int, orderBy: DoctorOrderByInput, skip: Int, where: DoctorWhereInput): [Doctor!]!
  hospitals(after: String, before: String, first: Int, last: Int, orderBy: HospitalOrderByInput, skip: Int, where: HospitalWhereInput): [Hospital!]!
  me: User
  page(where: PageWhereUniqueInput!): Page
  pages(after: String, before: String, first: Int, last: Int, orderBy: PageOrderByInput, skip: Int, where: PageWhereInput): [Page!]!
  pagesConnection(after: String, before: String, first: Int, last: Int, orderBy: PageOrderByInput, skip: Int, where: PageWhereInput): PageConnection!
  postImage(where: PostImageWhereUniqueInput!): PostImage
  postImages(after: String, before: String, first: Int, last: Int, orderBy: PostImageOrderByInput, skip: Int, where: PostImageWhereInput): [PostImage!]!
  postImagesConnection(after: String, before: String, first: Int, last: Int, orderBy: PostImageOrderByInput, skip: Int, where: PostImageWhereInput): PostImageConnection!
  specialities(after: String, before: String, first: Int, last: Int, orderBy: SpecialityOrderByInput, skip: Int, where: SpecialityWhereInput): [Speciality!]!
  specialitiesConnection(after: String, before: String, first: Int, last: Int, orderBy: SpecialityOrderByInput, skip: Int, where: SpecialityWhereInput): SpecialityConnection!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!
}

type SheduleTime {
  createdAt: DateTime!
  drSheduleId: Int
  id: Int!
  scheduleFullDate: Int!
  sheduleTime: String
  status: Int
  updatedAt: DateTime!
}

input SheduleTimeWhereInput {
  AND: [SheduleTimeWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  drSheduleId: Int
  drSheduleId_gt: Int
  drSheduleId_gte: Int
  drSheduleId_in: [Int!]
  drSheduleId_lt: Int
  drSheduleId_lte: Int
  drSheduleId_not: Int
  drSheduleId_not_in: [Int!]
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [SheduleTimeWhereInput!]
  OR: [SheduleTimeWhereInput!]
  scheduleFullDate: Int
  scheduleFullDate_gt: Int
  scheduleFullDate_gte: Int
  scheduleFullDate_in: [Int!]
  scheduleFullDate_lt: Int
  scheduleFullDate_lte: Int
  scheduleFullDate_not: Int
  scheduleFullDate_not_in: [Int!]
  sheduleTime: String
  sheduleTime_contains: String
  sheduleTime_ends_with: String
  sheduleTime_gt: String
  sheduleTime_gte: String
  sheduleTime_in: [String!]
  sheduleTime_lt: String
  sheduleTime_lte: String
  sheduleTime_not: String
  sheduleTime_not_contains: String
  sheduleTime_not_ends_with: String
  sheduleTime_not_in: [String!]
  sheduleTime_not_starts_with: String
  sheduleTime_starts_with: String
  status: Int
  status_gt: Int
  status_gte: Int
  status_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_not: Int
  status_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Speciality {
  createdAt: DateTime
  doctors(after: String, before: String, first: Int, last: Int, orderBy: DoctorOrderByInput, skip: Int, where: DoctorWhereInput): [Doctor!]
  id: Int!
  speciality: String
  specialityArabic: String
  updatedAt: DateTime
}

type SpecialityConnection {
  aggregate: AggregateSpeciality!
  edges: [SpecialityEdge!]!
  pageInfo: PageInfo!
}

type SpecialityEdge {
  cursor: String!
  node: Speciality!
}

enum SpecialityOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  speciality_ASC
  speciality_DESC
  specialityArabic_ASC
  specialityArabic_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input SpecialityWhereInput {
  AND: [SpecialityWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  doctors_every: DoctorWhereInput
  doctors_none: DoctorWhereInput
  doctors_some: DoctorWhereInput
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  NOT: [SpecialityWhereInput!]
  OR: [SpecialityWhereInput!]
  speciality: String
  speciality_contains: String
  speciality_ends_with: String
  speciality_gt: String
  speciality_gte: String
  speciality_in: [String!]
  speciality_lt: String
  speciality_lte: String
  speciality_not: String
  speciality_not_contains: String
  speciality_not_ends_with: String
  speciality_not_in: [String!]
  speciality_not_starts_with: String
  speciality_starts_with: String
  specialityArabic: String
  specialityArabic_contains: String
  specialityArabic_ends_with: String
  specialityArabic_gt: String
  specialityArabic_gte: String
  specialityArabic_in: [String!]
  specialityArabic_lt: String
  specialityArabic_lte: String
  specialityArabic_not: String
  specialityArabic_not_contains: String
  specialityArabic_not_ends_with: String
  specialityArabic_not_in: [String!]
  specialityArabic_not_starts_with: String
  specialityArabic_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
  password: String!
  rememberToken: String
  updatedAt: DateTime!
}

type UserConnection {
  aggregate: AggregateUser!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  rememberToken_ASC
  rememberToken_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: Int
  id_gt: Int
  id_gte: Int
  id_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_not: Int
  id_not_in: [Int!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  rememberToken: String
  rememberToken_contains: String
  rememberToken_ends_with: String
  rememberToken_gt: String
  rememberToken_gte: String
  rememberToken_in: [String!]
  rememberToken_lt: String
  rememberToken_lte: String
  rememberToken_not: String
  rememberToken_not_contains: String
  rememberToken_not_ends_with: String
  rememberToken_not_in: [String!]
  rememberToken_not_starts_with: String
  rememberToken_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
