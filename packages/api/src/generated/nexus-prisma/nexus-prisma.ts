/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      AboutUs: AboutUsObject
      AboutUsConnection: AboutUsConnectionObject
      PageInfo: PageInfoObject
      AboutUsEdge: AboutUsEdgeObject
      AggregateAboutUs: AggregateAboutUsObject
      Admin: AdminObject
      AdminConnection: AdminConnectionObject
      AdminEdge: AdminEdgeObject
      AggregateAdmin: AggregateAdminObject
      Appointment: AppointmentObject
      Disease: DiseaseObject
      Doctor: DoctorObject
      Speciality: SpecialityObject
      Hospital: HospitalObject
      City: CityObject
      Country: CountryObject
      Insurance: InsuranceObject
      DoctorSheduleTime: DoctorSheduleTimeObject
      OptTime: OptTimeObject
      Patient: PatientObject
      SheduleTime: SheduleTimeObject
      AppointmentConnection: AppointmentConnectionObject
      AppointmentEdge: AppointmentEdgeObject
      AggregateAppointment: AggregateAppointmentObject
      Blog: BlogObject
      BlogConnection: BlogConnectionObject
      BlogEdge: BlogEdgeObject
      AggregateBlog: AggregateBlogObject
      BlogComment: BlogCommentObject
      BlogPost: BlogPostObject
      PostImage: PostImageObject
      BlogCommentConnection: BlogCommentConnectionObject
      BlogCommentEdge: BlogCommentEdgeObject
      AggregateBlogComment: AggregateBlogCommentObject
      BlogPostConnection: BlogPostConnectionObject
      BlogPostEdge: BlogPostEdgeObject
      AggregateBlogPost: AggregateBlogPostObject
      PostImageConnection: PostImageConnectionObject
      PostImageEdge: PostImageEdgeObject
      AggregatePostImage: AggregatePostImageObject
      CityConnection: CityConnectionObject
      CityEdge: CityEdgeObject
      AggregateCity: AggregateCityObject
      ContactUs: ContactUsObject
      ContactUsConnection: ContactUsConnectionObject
      ContactUsEdge: ContactUsEdgeObject
      AggregateContactUs: AggregateContactUsObject
      CountryConnection: CountryConnectionObject
      CountryEdge: CountryEdgeObject
      AggregateCountry: AggregateCountryObject
      DiseaseConnection: DiseaseConnectionObject
      DiseaseEdge: DiseaseEdgeObject
      AggregateDisease: AggregateDiseaseObject
      DiseaseCovered: DiseaseCoveredObject
      DiseaseCoveredConnection: DiseaseCoveredConnectionObject
      DiseaseCoveredEdge: DiseaseCoveredEdgeObject
      AggregateDiseaseCovered: AggregateDiseaseCoveredObject
      DoctorConnection: DoctorConnectionObject
      DoctorEdge: DoctorEdgeObject
      AggregateDoctor: AggregateDoctorObject
      DoctorOld: DoctorOldObject
      DoctorsRating: DoctorsRatingObject
      DoctorOldConnection: DoctorOldConnectionObject
      DoctorOldEdge: DoctorOldEdgeObject
      AggregateDoctorOld: AggregateDoctorOldObject
      DoctorShedule: DoctorSheduleObject
      DoctorSheduleConnection: DoctorSheduleConnectionObject
      DoctorSheduleEdge: DoctorSheduleEdgeObject
      AggregateDoctorShedule: AggregateDoctorSheduleObject
      DoctorSheduleTimeConnection: DoctorSheduleTimeConnectionObject
      DoctorSheduleTimeEdge: DoctorSheduleTimeEdgeObject
      AggregateDoctorSheduleTime: AggregateDoctorSheduleTimeObject
      DoctorSpeciality: DoctorSpecialityObject
      DoctorSpecialityConnection: DoctorSpecialityConnectionObject
      DoctorSpecialityEdge: DoctorSpecialityEdgeObject
      AggregateDoctorSpeciality: AggregateDoctorSpecialityObject
      DoctorsRatingConnection: DoctorsRatingConnectionObject
      DoctorsRatingEdge: DoctorsRatingEdgeObject
      AggregateDoctorsRating: AggregateDoctorsRatingObject
      DrShedule: DrSheduleObject
      DrSheduleConnection: DrSheduleConnectionObject
      DrSheduleEdge: DrSheduleEdgeObject
      AggregateDrShedule: AggregateDrSheduleObject
      Facility: FacilityObject
      FacilityConnection: FacilityConnectionObject
      FacilityEdge: FacilityEdgeObject
      AggregateFacility: AggregateFacilityObject
      HospitalConnection: HospitalConnectionObject
      HospitalEdge: HospitalEdgeObject
      AggregateHospital: AggregateHospitalObject
      HospitalDoctor: HospitalDoctorObject
      HospitalDoctorConnection: HospitalDoctorConnectionObject
      HospitalDoctorEdge: HospitalDoctorEdgeObject
      AggregateHospitalDoctor: AggregateHospitalDoctorObject
      HospitalFacility: HospitalFacilityObject
      HospitalFacilityConnection: HospitalFacilityConnectionObject
      HospitalFacilityEdge: HospitalFacilityEdgeObject
      AggregateHospitalFacility: AggregateHospitalFacilityObject
      HospitalInsurance: HospitalInsuranceObject
      HospitalInsuranceConnection: HospitalInsuranceConnectionObject
      HospitalInsuranceEdge: HospitalInsuranceEdgeObject
      AggregateHospitalInsurance: AggregateHospitalInsuranceObject
      HospitalRating: HospitalRatingObject
      HospitalRatingConnection: HospitalRatingConnectionObject
      HospitalRatingEdge: HospitalRatingEdgeObject
      AggregateHospitalRating: AggregateHospitalRatingObject
      Illness: IllnessObject
      IllnessConnection: IllnessConnectionObject
      IllnessEdge: IllnessEdgeObject
      AggregateIllness: AggregateIllnessObject
      InsuranceConnection: InsuranceConnectionObject
      InsuranceEdge: InsuranceEdgeObject
      AggregateInsurance: AggregateInsuranceObject
      InsuranceCategory: InsuranceCategoryObject
      InsuranceCategoryConnection: InsuranceCategoryConnectionObject
      InsuranceCategoryEdge: InsuranceCategoryEdgeObject
      AggregateInsuranceCategory: AggregateInsuranceCategoryObject
      Job: JobObject
      JobConnection: JobConnectionObject
      JobEdge: JobEdgeObject
      AggregateJob: AggregateJobObject
      Language: LanguageObject
      LanguageConnection: LanguageConnectionObject
      LanguageEdge: LanguageEdgeObject
      AggregateLanguage: AggregateLanguageObject
      Message: MessageObject
      MessageConnection: MessageConnectionObject
      MessageEdge: MessageEdgeObject
      AggregateMessage: AggregateMessageObject
      Migration: MigrationObject
      MigrationConnection: MigrationConnectionObject
      MigrationEdge: MigrationEdgeObject
      AggregateMigration: AggregateMigrationObject
      Offer: OfferObject
      OfferConnection: OfferConnectionObject
      OfferEdge: OfferEdgeObject
      AggregateOffer: AggregateOfferObject
      OnlineAppointment: OnlineAppointmentObject
      OnlineAppointmentConnection: OnlineAppointmentConnectionObject
      OnlineAppointmentEdge: OnlineAppointmentEdgeObject
      AggregateOnlineAppointment: AggregateOnlineAppointmentObject
      OnlineDoctor: OnlineDoctorObject
      OnlineDoctorConnection: OnlineDoctorConnectionObject
      OnlineDoctorEdge: OnlineDoctorEdgeObject
      AggregateOnlineDoctor: AggregateOnlineDoctorObject
      OnlineRating: OnlineRatingObject
      OnlineRatingConnection: OnlineRatingConnectionObject
      OnlineRatingEdge: OnlineRatingEdgeObject
      AggregateOnlineRating: AggregateOnlineRatingObject
      OptTimeConnection: OptTimeConnectionObject
      OptTimeEdge: OptTimeEdgeObject
      AggregateOptTime: AggregateOptTimeObject
      PasswordReset: PasswordResetObject
      PasswordResetConnection: PasswordResetConnectionObject
      PasswordResetEdge: PasswordResetEdgeObject
      AggregatePasswordReset: AggregatePasswordResetObject
      PatientConnection: PatientConnectionObject
      PatientEdge: PatientEdgeObject
      AggregatePatient: AggregatePatientObject
      SearchDesign: SearchDesignObject
      SearchDesignConnection: SearchDesignConnectionObject
      SearchDesignEdge: SearchDesignEdgeObject
      AggregateSearchDesign: AggregateSearchDesignObject
      SheduleTimeConnection: SheduleTimeConnectionObject
      SheduleTimeEdge: SheduleTimeEdgeObject
      AggregateSheduleTime: AggregateSheduleTimeObject
      Slider: SliderObject
      SliderConnection: SliderConnectionObject
      SliderEdge: SliderEdgeObject
      AggregateSlider: AggregateSliderObject
      SpecialityConnection: SpecialityConnectionObject
      SpecialityEdge: SpecialityEdgeObject
      AggregateSpeciality: AggregateSpecialityObject
      EmailSubscription: EmailSubscriptionObject
      EmailSubscriptionConnection: EmailSubscriptionConnectionObject
      EmailSubscriptionEdge: EmailSubscriptionEdgeObject
      AggregateEmailSubscription: AggregateEmailSubscriptionObject
      User: UserObject
      UserConnection: UserConnectionObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      VideoRequest: VideoRequestObject
      VideoRequestConnection: VideoRequestConnectionObject
      VideoRequestEdge: VideoRequestEdgeObject
      AggregateVideoRequest: AggregateVideoRequestObject
      Visitor: VisitorObject
      VisitorConnection: VisitorConnectionObject
      VisitorEdge: VisitorEdgeObject
      AggregateVisitor: AggregateVisitorObject
      Translation: TranslationObject
      TranslationConnection: TranslationConnectionObject
      TranslationEdge: TranslationEdgeObject
      AggregateTranslation: AggregateTranslationObject
      Page: PageObject
      PageConnection: PageConnectionObject
      PageEdge: PageEdgeObject
      AggregatePage: AggregatePageObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      AboutUsSubscriptionPayload: AboutUsSubscriptionPayloadObject
      AboutUsPreviousValues: AboutUsPreviousValuesObject
      AdminSubscriptionPayload: AdminSubscriptionPayloadObject
      AdminPreviousValues: AdminPreviousValuesObject
      AppointmentSubscriptionPayload: AppointmentSubscriptionPayloadObject
      AppointmentPreviousValues: AppointmentPreviousValuesObject
      BlogSubscriptionPayload: BlogSubscriptionPayloadObject
      BlogPreviousValues: BlogPreviousValuesObject
      BlogCommentSubscriptionPayload: BlogCommentSubscriptionPayloadObject
      BlogCommentPreviousValues: BlogCommentPreviousValuesObject
      BlogPostSubscriptionPayload: BlogPostSubscriptionPayloadObject
      BlogPostPreviousValues: BlogPostPreviousValuesObject
      PostImageSubscriptionPayload: PostImageSubscriptionPayloadObject
      PostImagePreviousValues: PostImagePreviousValuesObject
      CitySubscriptionPayload: CitySubscriptionPayloadObject
      CityPreviousValues: CityPreviousValuesObject
      ContactUsSubscriptionPayload: ContactUsSubscriptionPayloadObject
      ContactUsPreviousValues: ContactUsPreviousValuesObject
      CountrySubscriptionPayload: CountrySubscriptionPayloadObject
      CountryPreviousValues: CountryPreviousValuesObject
      DiseaseSubscriptionPayload: DiseaseSubscriptionPayloadObject
      DiseasePreviousValues: DiseasePreviousValuesObject
      DiseaseCoveredSubscriptionPayload: DiseaseCoveredSubscriptionPayloadObject
      DiseaseCoveredPreviousValues: DiseaseCoveredPreviousValuesObject
      DoctorSubscriptionPayload: DoctorSubscriptionPayloadObject
      DoctorPreviousValues: DoctorPreviousValuesObject
      DoctorOldSubscriptionPayload: DoctorOldSubscriptionPayloadObject
      DoctorOldPreviousValues: DoctorOldPreviousValuesObject
      DoctorSheduleSubscriptionPayload: DoctorSheduleSubscriptionPayloadObject
      DoctorShedulePreviousValues: DoctorShedulePreviousValuesObject
      DoctorSheduleTimeSubscriptionPayload: DoctorSheduleTimeSubscriptionPayloadObject
      DoctorSheduleTimePreviousValues: DoctorSheduleTimePreviousValuesObject
      DoctorSpecialitySubscriptionPayload: DoctorSpecialitySubscriptionPayloadObject
      DoctorsRatingSubscriptionPayload: DoctorsRatingSubscriptionPayloadObject
      DoctorsRatingPreviousValues: DoctorsRatingPreviousValuesObject
      DrSheduleSubscriptionPayload: DrSheduleSubscriptionPayloadObject
      DrShedulePreviousValues: DrShedulePreviousValuesObject
      FacilitySubscriptionPayload: FacilitySubscriptionPayloadObject
      FacilityPreviousValues: FacilityPreviousValuesObject
      HospitalSubscriptionPayload: HospitalSubscriptionPayloadObject
      HospitalPreviousValues: HospitalPreviousValuesObject
      HospitalDoctorSubscriptionPayload: HospitalDoctorSubscriptionPayloadObject
      HospitalFacilitySubscriptionPayload: HospitalFacilitySubscriptionPayloadObject
      HospitalFacilityPreviousValues: HospitalFacilityPreviousValuesObject
      HospitalInsuranceSubscriptionPayload: HospitalInsuranceSubscriptionPayloadObject
      HospitalRatingSubscriptionPayload: HospitalRatingSubscriptionPayloadObject
      HospitalRatingPreviousValues: HospitalRatingPreviousValuesObject
      IllnessSubscriptionPayload: IllnessSubscriptionPayloadObject
      IllnessPreviousValues: IllnessPreviousValuesObject
      InsuranceSubscriptionPayload: InsuranceSubscriptionPayloadObject
      InsurancePreviousValues: InsurancePreviousValuesObject
      InsuranceCategorySubscriptionPayload: InsuranceCategorySubscriptionPayloadObject
      InsuranceCategoryPreviousValues: InsuranceCategoryPreviousValuesObject
      JobSubscriptionPayload: JobSubscriptionPayloadObject
      JobPreviousValues: JobPreviousValuesObject
      LanguageSubscriptionPayload: LanguageSubscriptionPayloadObject
      LanguagePreviousValues: LanguagePreviousValuesObject
      MessageSubscriptionPayload: MessageSubscriptionPayloadObject
      MessagePreviousValues: MessagePreviousValuesObject
      MigrationSubscriptionPayload: MigrationSubscriptionPayloadObject
      MigrationPreviousValues: MigrationPreviousValuesObject
      OfferSubscriptionPayload: OfferSubscriptionPayloadObject
      OfferPreviousValues: OfferPreviousValuesObject
      OnlineAppointmentSubscriptionPayload: OnlineAppointmentSubscriptionPayloadObject
      OnlineAppointmentPreviousValues: OnlineAppointmentPreviousValuesObject
      OnlineDoctorSubscriptionPayload: OnlineDoctorSubscriptionPayloadObject
      OnlineDoctorPreviousValues: OnlineDoctorPreviousValuesObject
      OnlineRatingSubscriptionPayload: OnlineRatingSubscriptionPayloadObject
      OnlineRatingPreviousValues: OnlineRatingPreviousValuesObject
      OptTimeSubscriptionPayload: OptTimeSubscriptionPayloadObject
      OptTimePreviousValues: OptTimePreviousValuesObject
      PasswordResetSubscriptionPayload: PasswordResetSubscriptionPayloadObject
      PasswordResetPreviousValues: PasswordResetPreviousValuesObject
      PatientSubscriptionPayload: PatientSubscriptionPayloadObject
      PatientPreviousValues: PatientPreviousValuesObject
      SearchDesignSubscriptionPayload: SearchDesignSubscriptionPayloadObject
      SearchDesignPreviousValues: SearchDesignPreviousValuesObject
      SheduleTimeSubscriptionPayload: SheduleTimeSubscriptionPayloadObject
      SheduleTimePreviousValues: SheduleTimePreviousValuesObject
      SliderSubscriptionPayload: SliderSubscriptionPayloadObject
      SliderPreviousValues: SliderPreviousValuesObject
      SpecialitySubscriptionPayload: SpecialitySubscriptionPayloadObject
      SpecialityPreviousValues: SpecialityPreviousValuesObject
      EmailSubscriptionSubscriptionPayload: EmailSubscriptionSubscriptionPayloadObject
      EmailSubscriptionPreviousValues: EmailSubscriptionPreviousValuesObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      VideoRequestSubscriptionPayload: VideoRequestSubscriptionPayloadObject
      VideoRequestPreviousValues: VideoRequestPreviousValuesObject
      VisitorSubscriptionPayload: VisitorSubscriptionPayloadObject
      VisitorPreviousValues: VisitorPreviousValuesObject
      TranslationSubscriptionPayload: TranslationSubscriptionPayloadObject
      TranslationPreviousValues: TranslationPreviousValuesObject
      PageSubscriptionPayload: PageSubscriptionPayloadObject
      PagePreviousValues: PagePreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      AboutUs: AboutUsFieldDetails
      AboutUsConnection: AboutUsConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      AboutUsEdge: AboutUsEdgeFieldDetails
      AggregateAboutUs: AggregateAboutUsFieldDetails
      Admin: AdminFieldDetails
      AdminConnection: AdminConnectionFieldDetails
      AdminEdge: AdminEdgeFieldDetails
      AggregateAdmin: AggregateAdminFieldDetails
      Appointment: AppointmentFieldDetails
      Disease: DiseaseFieldDetails
      Doctor: DoctorFieldDetails
      Speciality: SpecialityFieldDetails
      Hospital: HospitalFieldDetails
      City: CityFieldDetails
      Country: CountryFieldDetails
      Insurance: InsuranceFieldDetails
      DoctorSheduleTime: DoctorSheduleTimeFieldDetails
      OptTime: OptTimeFieldDetails
      Patient: PatientFieldDetails
      SheduleTime: SheduleTimeFieldDetails
      AppointmentConnection: AppointmentConnectionFieldDetails
      AppointmentEdge: AppointmentEdgeFieldDetails
      AggregateAppointment: AggregateAppointmentFieldDetails
      Blog: BlogFieldDetails
      BlogConnection: BlogConnectionFieldDetails
      BlogEdge: BlogEdgeFieldDetails
      AggregateBlog: AggregateBlogFieldDetails
      BlogComment: BlogCommentFieldDetails
      BlogPost: BlogPostFieldDetails
      PostImage: PostImageFieldDetails
      BlogCommentConnection: BlogCommentConnectionFieldDetails
      BlogCommentEdge: BlogCommentEdgeFieldDetails
      AggregateBlogComment: AggregateBlogCommentFieldDetails
      BlogPostConnection: BlogPostConnectionFieldDetails
      BlogPostEdge: BlogPostEdgeFieldDetails
      AggregateBlogPost: AggregateBlogPostFieldDetails
      PostImageConnection: PostImageConnectionFieldDetails
      PostImageEdge: PostImageEdgeFieldDetails
      AggregatePostImage: AggregatePostImageFieldDetails
      CityConnection: CityConnectionFieldDetails
      CityEdge: CityEdgeFieldDetails
      AggregateCity: AggregateCityFieldDetails
      ContactUs: ContactUsFieldDetails
      ContactUsConnection: ContactUsConnectionFieldDetails
      ContactUsEdge: ContactUsEdgeFieldDetails
      AggregateContactUs: AggregateContactUsFieldDetails
      CountryConnection: CountryConnectionFieldDetails
      CountryEdge: CountryEdgeFieldDetails
      AggregateCountry: AggregateCountryFieldDetails
      DiseaseConnection: DiseaseConnectionFieldDetails
      DiseaseEdge: DiseaseEdgeFieldDetails
      AggregateDisease: AggregateDiseaseFieldDetails
      DiseaseCovered: DiseaseCoveredFieldDetails
      DiseaseCoveredConnection: DiseaseCoveredConnectionFieldDetails
      DiseaseCoveredEdge: DiseaseCoveredEdgeFieldDetails
      AggregateDiseaseCovered: AggregateDiseaseCoveredFieldDetails
      DoctorConnection: DoctorConnectionFieldDetails
      DoctorEdge: DoctorEdgeFieldDetails
      AggregateDoctor: AggregateDoctorFieldDetails
      DoctorOld: DoctorOldFieldDetails
      DoctorsRating: DoctorsRatingFieldDetails
      DoctorOldConnection: DoctorOldConnectionFieldDetails
      DoctorOldEdge: DoctorOldEdgeFieldDetails
      AggregateDoctorOld: AggregateDoctorOldFieldDetails
      DoctorShedule: DoctorSheduleFieldDetails
      DoctorSheduleConnection: DoctorSheduleConnectionFieldDetails
      DoctorSheduleEdge: DoctorSheduleEdgeFieldDetails
      AggregateDoctorShedule: AggregateDoctorSheduleFieldDetails
      DoctorSheduleTimeConnection: DoctorSheduleTimeConnectionFieldDetails
      DoctorSheduleTimeEdge: DoctorSheduleTimeEdgeFieldDetails
      AggregateDoctorSheduleTime: AggregateDoctorSheduleTimeFieldDetails
      DoctorSpeciality: DoctorSpecialityFieldDetails
      DoctorSpecialityConnection: DoctorSpecialityConnectionFieldDetails
      DoctorSpecialityEdge: DoctorSpecialityEdgeFieldDetails
      AggregateDoctorSpeciality: AggregateDoctorSpecialityFieldDetails
      DoctorsRatingConnection: DoctorsRatingConnectionFieldDetails
      DoctorsRatingEdge: DoctorsRatingEdgeFieldDetails
      AggregateDoctorsRating: AggregateDoctorsRatingFieldDetails
      DrShedule: DrSheduleFieldDetails
      DrSheduleConnection: DrSheduleConnectionFieldDetails
      DrSheduleEdge: DrSheduleEdgeFieldDetails
      AggregateDrShedule: AggregateDrSheduleFieldDetails
      Facility: FacilityFieldDetails
      FacilityConnection: FacilityConnectionFieldDetails
      FacilityEdge: FacilityEdgeFieldDetails
      AggregateFacility: AggregateFacilityFieldDetails
      HospitalConnection: HospitalConnectionFieldDetails
      HospitalEdge: HospitalEdgeFieldDetails
      AggregateHospital: AggregateHospitalFieldDetails
      HospitalDoctor: HospitalDoctorFieldDetails
      HospitalDoctorConnection: HospitalDoctorConnectionFieldDetails
      HospitalDoctorEdge: HospitalDoctorEdgeFieldDetails
      AggregateHospitalDoctor: AggregateHospitalDoctorFieldDetails
      HospitalFacility: HospitalFacilityFieldDetails
      HospitalFacilityConnection: HospitalFacilityConnectionFieldDetails
      HospitalFacilityEdge: HospitalFacilityEdgeFieldDetails
      AggregateHospitalFacility: AggregateHospitalFacilityFieldDetails
      HospitalInsurance: HospitalInsuranceFieldDetails
      HospitalInsuranceConnection: HospitalInsuranceConnectionFieldDetails
      HospitalInsuranceEdge: HospitalInsuranceEdgeFieldDetails
      AggregateHospitalInsurance: AggregateHospitalInsuranceFieldDetails
      HospitalRating: HospitalRatingFieldDetails
      HospitalRatingConnection: HospitalRatingConnectionFieldDetails
      HospitalRatingEdge: HospitalRatingEdgeFieldDetails
      AggregateHospitalRating: AggregateHospitalRatingFieldDetails
      Illness: IllnessFieldDetails
      IllnessConnection: IllnessConnectionFieldDetails
      IllnessEdge: IllnessEdgeFieldDetails
      AggregateIllness: AggregateIllnessFieldDetails
      InsuranceConnection: InsuranceConnectionFieldDetails
      InsuranceEdge: InsuranceEdgeFieldDetails
      AggregateInsurance: AggregateInsuranceFieldDetails
      InsuranceCategory: InsuranceCategoryFieldDetails
      InsuranceCategoryConnection: InsuranceCategoryConnectionFieldDetails
      InsuranceCategoryEdge: InsuranceCategoryEdgeFieldDetails
      AggregateInsuranceCategory: AggregateInsuranceCategoryFieldDetails
      Job: JobFieldDetails
      JobConnection: JobConnectionFieldDetails
      JobEdge: JobEdgeFieldDetails
      AggregateJob: AggregateJobFieldDetails
      Language: LanguageFieldDetails
      LanguageConnection: LanguageConnectionFieldDetails
      LanguageEdge: LanguageEdgeFieldDetails
      AggregateLanguage: AggregateLanguageFieldDetails
      Message: MessageFieldDetails
      MessageConnection: MessageConnectionFieldDetails
      MessageEdge: MessageEdgeFieldDetails
      AggregateMessage: AggregateMessageFieldDetails
      Migration: MigrationFieldDetails
      MigrationConnection: MigrationConnectionFieldDetails
      MigrationEdge: MigrationEdgeFieldDetails
      AggregateMigration: AggregateMigrationFieldDetails
      Offer: OfferFieldDetails
      OfferConnection: OfferConnectionFieldDetails
      OfferEdge: OfferEdgeFieldDetails
      AggregateOffer: AggregateOfferFieldDetails
      OnlineAppointment: OnlineAppointmentFieldDetails
      OnlineAppointmentConnection: OnlineAppointmentConnectionFieldDetails
      OnlineAppointmentEdge: OnlineAppointmentEdgeFieldDetails
      AggregateOnlineAppointment: AggregateOnlineAppointmentFieldDetails
      OnlineDoctor: OnlineDoctorFieldDetails
      OnlineDoctorConnection: OnlineDoctorConnectionFieldDetails
      OnlineDoctorEdge: OnlineDoctorEdgeFieldDetails
      AggregateOnlineDoctor: AggregateOnlineDoctorFieldDetails
      OnlineRating: OnlineRatingFieldDetails
      OnlineRatingConnection: OnlineRatingConnectionFieldDetails
      OnlineRatingEdge: OnlineRatingEdgeFieldDetails
      AggregateOnlineRating: AggregateOnlineRatingFieldDetails
      OptTimeConnection: OptTimeConnectionFieldDetails
      OptTimeEdge: OptTimeEdgeFieldDetails
      AggregateOptTime: AggregateOptTimeFieldDetails
      PasswordReset: PasswordResetFieldDetails
      PasswordResetConnection: PasswordResetConnectionFieldDetails
      PasswordResetEdge: PasswordResetEdgeFieldDetails
      AggregatePasswordReset: AggregatePasswordResetFieldDetails
      PatientConnection: PatientConnectionFieldDetails
      PatientEdge: PatientEdgeFieldDetails
      AggregatePatient: AggregatePatientFieldDetails
      SearchDesign: SearchDesignFieldDetails
      SearchDesignConnection: SearchDesignConnectionFieldDetails
      SearchDesignEdge: SearchDesignEdgeFieldDetails
      AggregateSearchDesign: AggregateSearchDesignFieldDetails
      SheduleTimeConnection: SheduleTimeConnectionFieldDetails
      SheduleTimeEdge: SheduleTimeEdgeFieldDetails
      AggregateSheduleTime: AggregateSheduleTimeFieldDetails
      Slider: SliderFieldDetails
      SliderConnection: SliderConnectionFieldDetails
      SliderEdge: SliderEdgeFieldDetails
      AggregateSlider: AggregateSliderFieldDetails
      SpecialityConnection: SpecialityConnectionFieldDetails
      SpecialityEdge: SpecialityEdgeFieldDetails
      AggregateSpeciality: AggregateSpecialityFieldDetails
      EmailSubscription: EmailSubscriptionFieldDetails
      EmailSubscriptionConnection: EmailSubscriptionConnectionFieldDetails
      EmailSubscriptionEdge: EmailSubscriptionEdgeFieldDetails
      AggregateEmailSubscription: AggregateEmailSubscriptionFieldDetails
      User: UserFieldDetails
      UserConnection: UserConnectionFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      VideoRequest: VideoRequestFieldDetails
      VideoRequestConnection: VideoRequestConnectionFieldDetails
      VideoRequestEdge: VideoRequestEdgeFieldDetails
      AggregateVideoRequest: AggregateVideoRequestFieldDetails
      Visitor: VisitorFieldDetails
      VisitorConnection: VisitorConnectionFieldDetails
      VisitorEdge: VisitorEdgeFieldDetails
      AggregateVisitor: AggregateVisitorFieldDetails
      Translation: TranslationFieldDetails
      TranslationConnection: TranslationConnectionFieldDetails
      TranslationEdge: TranslationEdgeFieldDetails
      AggregateTranslation: AggregateTranslationFieldDetails
      Page: PageFieldDetails
      PageConnection: PageConnectionFieldDetails
      PageEdge: PageEdgeFieldDetails
      AggregatePage: AggregatePageFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      AboutUsSubscriptionPayload: AboutUsSubscriptionPayloadFieldDetails
      AboutUsPreviousValues: AboutUsPreviousValuesFieldDetails
      AdminSubscriptionPayload: AdminSubscriptionPayloadFieldDetails
      AdminPreviousValues: AdminPreviousValuesFieldDetails
      AppointmentSubscriptionPayload: AppointmentSubscriptionPayloadFieldDetails
      AppointmentPreviousValues: AppointmentPreviousValuesFieldDetails
      BlogSubscriptionPayload: BlogSubscriptionPayloadFieldDetails
      BlogPreviousValues: BlogPreviousValuesFieldDetails
      BlogCommentSubscriptionPayload: BlogCommentSubscriptionPayloadFieldDetails
      BlogCommentPreviousValues: BlogCommentPreviousValuesFieldDetails
      BlogPostSubscriptionPayload: BlogPostSubscriptionPayloadFieldDetails
      BlogPostPreviousValues: BlogPostPreviousValuesFieldDetails
      PostImageSubscriptionPayload: PostImageSubscriptionPayloadFieldDetails
      PostImagePreviousValues: PostImagePreviousValuesFieldDetails
      CitySubscriptionPayload: CitySubscriptionPayloadFieldDetails
      CityPreviousValues: CityPreviousValuesFieldDetails
      ContactUsSubscriptionPayload: ContactUsSubscriptionPayloadFieldDetails
      ContactUsPreviousValues: ContactUsPreviousValuesFieldDetails
      CountrySubscriptionPayload: CountrySubscriptionPayloadFieldDetails
      CountryPreviousValues: CountryPreviousValuesFieldDetails
      DiseaseSubscriptionPayload: DiseaseSubscriptionPayloadFieldDetails
      DiseasePreviousValues: DiseasePreviousValuesFieldDetails
      DiseaseCoveredSubscriptionPayload: DiseaseCoveredSubscriptionPayloadFieldDetails
      DiseaseCoveredPreviousValues: DiseaseCoveredPreviousValuesFieldDetails
      DoctorSubscriptionPayload: DoctorSubscriptionPayloadFieldDetails
      DoctorPreviousValues: DoctorPreviousValuesFieldDetails
      DoctorOldSubscriptionPayload: DoctorOldSubscriptionPayloadFieldDetails
      DoctorOldPreviousValues: DoctorOldPreviousValuesFieldDetails
      DoctorSheduleSubscriptionPayload: DoctorSheduleSubscriptionPayloadFieldDetails
      DoctorShedulePreviousValues: DoctorShedulePreviousValuesFieldDetails
      DoctorSheduleTimeSubscriptionPayload: DoctorSheduleTimeSubscriptionPayloadFieldDetails
      DoctorSheduleTimePreviousValues: DoctorSheduleTimePreviousValuesFieldDetails
      DoctorSpecialitySubscriptionPayload: DoctorSpecialitySubscriptionPayloadFieldDetails
      DoctorsRatingSubscriptionPayload: DoctorsRatingSubscriptionPayloadFieldDetails
      DoctorsRatingPreviousValues: DoctorsRatingPreviousValuesFieldDetails
      DrSheduleSubscriptionPayload: DrSheduleSubscriptionPayloadFieldDetails
      DrShedulePreviousValues: DrShedulePreviousValuesFieldDetails
      FacilitySubscriptionPayload: FacilitySubscriptionPayloadFieldDetails
      FacilityPreviousValues: FacilityPreviousValuesFieldDetails
      HospitalSubscriptionPayload: HospitalSubscriptionPayloadFieldDetails
      HospitalPreviousValues: HospitalPreviousValuesFieldDetails
      HospitalDoctorSubscriptionPayload: HospitalDoctorSubscriptionPayloadFieldDetails
      HospitalFacilitySubscriptionPayload: HospitalFacilitySubscriptionPayloadFieldDetails
      HospitalFacilityPreviousValues: HospitalFacilityPreviousValuesFieldDetails
      HospitalInsuranceSubscriptionPayload: HospitalInsuranceSubscriptionPayloadFieldDetails
      HospitalRatingSubscriptionPayload: HospitalRatingSubscriptionPayloadFieldDetails
      HospitalRatingPreviousValues: HospitalRatingPreviousValuesFieldDetails
      IllnessSubscriptionPayload: IllnessSubscriptionPayloadFieldDetails
      IllnessPreviousValues: IllnessPreviousValuesFieldDetails
      InsuranceSubscriptionPayload: InsuranceSubscriptionPayloadFieldDetails
      InsurancePreviousValues: InsurancePreviousValuesFieldDetails
      InsuranceCategorySubscriptionPayload: InsuranceCategorySubscriptionPayloadFieldDetails
      InsuranceCategoryPreviousValues: InsuranceCategoryPreviousValuesFieldDetails
      JobSubscriptionPayload: JobSubscriptionPayloadFieldDetails
      JobPreviousValues: JobPreviousValuesFieldDetails
      LanguageSubscriptionPayload: LanguageSubscriptionPayloadFieldDetails
      LanguagePreviousValues: LanguagePreviousValuesFieldDetails
      MessageSubscriptionPayload: MessageSubscriptionPayloadFieldDetails
      MessagePreviousValues: MessagePreviousValuesFieldDetails
      MigrationSubscriptionPayload: MigrationSubscriptionPayloadFieldDetails
      MigrationPreviousValues: MigrationPreviousValuesFieldDetails
      OfferSubscriptionPayload: OfferSubscriptionPayloadFieldDetails
      OfferPreviousValues: OfferPreviousValuesFieldDetails
      OnlineAppointmentSubscriptionPayload: OnlineAppointmentSubscriptionPayloadFieldDetails
      OnlineAppointmentPreviousValues: OnlineAppointmentPreviousValuesFieldDetails
      OnlineDoctorSubscriptionPayload: OnlineDoctorSubscriptionPayloadFieldDetails
      OnlineDoctorPreviousValues: OnlineDoctorPreviousValuesFieldDetails
      OnlineRatingSubscriptionPayload: OnlineRatingSubscriptionPayloadFieldDetails
      OnlineRatingPreviousValues: OnlineRatingPreviousValuesFieldDetails
      OptTimeSubscriptionPayload: OptTimeSubscriptionPayloadFieldDetails
      OptTimePreviousValues: OptTimePreviousValuesFieldDetails
      PasswordResetSubscriptionPayload: PasswordResetSubscriptionPayloadFieldDetails
      PasswordResetPreviousValues: PasswordResetPreviousValuesFieldDetails
      PatientSubscriptionPayload: PatientSubscriptionPayloadFieldDetails
      PatientPreviousValues: PatientPreviousValuesFieldDetails
      SearchDesignSubscriptionPayload: SearchDesignSubscriptionPayloadFieldDetails
      SearchDesignPreviousValues: SearchDesignPreviousValuesFieldDetails
      SheduleTimeSubscriptionPayload: SheduleTimeSubscriptionPayloadFieldDetails
      SheduleTimePreviousValues: SheduleTimePreviousValuesFieldDetails
      SliderSubscriptionPayload: SliderSubscriptionPayloadFieldDetails
      SliderPreviousValues: SliderPreviousValuesFieldDetails
      SpecialitySubscriptionPayload: SpecialitySubscriptionPayloadFieldDetails
      SpecialityPreviousValues: SpecialityPreviousValuesFieldDetails
      EmailSubscriptionSubscriptionPayload: EmailSubscriptionSubscriptionPayloadFieldDetails
      EmailSubscriptionPreviousValues: EmailSubscriptionPreviousValuesFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      VideoRequestSubscriptionPayload: VideoRequestSubscriptionPayloadFieldDetails
      VideoRequestPreviousValues: VideoRequestPreviousValuesFieldDetails
      VisitorSubscriptionPayload: VisitorSubscriptionPayloadFieldDetails
      VisitorPreviousValues: VisitorPreviousValuesFieldDetails
      TranslationSubscriptionPayload: TranslationSubscriptionPayloadFieldDetails
      TranslationPreviousValues: TranslationPreviousValuesFieldDetails
      PageSubscriptionPayload: PageSubscriptionPayloadFieldDetails
      PagePreviousValues: PagePreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      AboutUsWhereUniqueInput: AboutUsWhereUniqueInputInputObject
      AboutUsWhereInput: AboutUsWhereInputInputObject
      AdminWhereUniqueInput: AdminWhereUniqueInputInputObject
      AdminWhereInput: AdminWhereInputInputObject
      AppointmentWhereUniqueInput: AppointmentWhereUniqueInputInputObject
      DoctorWhereInput: DoctorWhereInputInputObject
      SpecialityWhereInput: SpecialityWhereInputInputObject
      HospitalWhereInput: HospitalWhereInputInputObject
      CityWhereInput: CityWhereInputInputObject
      CountryWhereInput: CountryWhereInputInputObject
      InsuranceWhereInput: InsuranceWhereInputInputObject
      AppointmentWhereInput: AppointmentWhereInputInputObject
      DiseaseWhereInput: DiseaseWhereInputInputObject
      DoctorSheduleTimeWhereInput: DoctorSheduleTimeWhereInputInputObject
      OptTimeWhereInput: OptTimeWhereInputInputObject
      PatientWhereInput: PatientWhereInputInputObject
      SheduleTimeWhereInput: SheduleTimeWhereInputInputObject
      BlogWhereUniqueInput: BlogWhereUniqueInputInputObject
      BlogWhereInput: BlogWhereInputInputObject
      BlogCommentWhereUniqueInput: BlogCommentWhereUniqueInputInputObject
      PostImageWhereInput: PostImageWhereInputInputObject
      BlogPostWhereInput: BlogPostWhereInputInputObject
      BlogCommentWhereInput: BlogCommentWhereInputInputObject
      BlogPostWhereUniqueInput: BlogPostWhereUniqueInputInputObject
      PostImageWhereUniqueInput: PostImageWhereUniqueInputInputObject
      CityWhereUniqueInput: CityWhereUniqueInputInputObject
      ContactUsWhereUniqueInput: ContactUsWhereUniqueInputInputObject
      ContactUsWhereInput: ContactUsWhereInputInputObject
      CountryWhereUniqueInput: CountryWhereUniqueInputInputObject
      DiseaseWhereUniqueInput: DiseaseWhereUniqueInputInputObject
      DiseaseCoveredWhereUniqueInput: DiseaseCoveredWhereUniqueInputInputObject
      DiseaseCoveredWhereInput: DiseaseCoveredWhereInputInputObject
      DoctorWhereUniqueInput: DoctorWhereUniqueInputInputObject
      DoctorOldWhereUniqueInput: DoctorOldWhereUniqueInputInputObject
      DoctorsRatingWhereInput: DoctorsRatingWhereInputInputObject
      DoctorOldWhereInput: DoctorOldWhereInputInputObject
      DoctorSheduleWhereUniqueInput: DoctorSheduleWhereUniqueInputInputObject
      DoctorSheduleWhereInput: DoctorSheduleWhereInputInputObject
      DoctorSheduleTimeWhereUniqueInput: DoctorSheduleTimeWhereUniqueInputInputObject
      DoctorSpecialityWhereInput: DoctorSpecialityWhereInputInputObject
      DoctorsRatingWhereUniqueInput: DoctorsRatingWhereUniqueInputInputObject
      DrSheduleWhereUniqueInput: DrSheduleWhereUniqueInputInputObject
      DrSheduleWhereInput: DrSheduleWhereInputInputObject
      FacilityWhereUniqueInput: FacilityWhereUniqueInputInputObject
      FacilityWhereInput: FacilityWhereInputInputObject
      HospitalWhereUniqueInput: HospitalWhereUniqueInputInputObject
      HospitalDoctorWhereInput: HospitalDoctorWhereInputInputObject
      HospitalFacilityWhereUniqueInput: HospitalFacilityWhereUniqueInputInputObject
      HospitalFacilityWhereInput: HospitalFacilityWhereInputInputObject
      HospitalInsuranceWhereInput: HospitalInsuranceWhereInputInputObject
      HospitalRatingWhereUniqueInput: HospitalRatingWhereUniqueInputInputObject
      HospitalRatingWhereInput: HospitalRatingWhereInputInputObject
      IllnessWhereUniqueInput: IllnessWhereUniqueInputInputObject
      IllnessWhereInput: IllnessWhereInputInputObject
      InsuranceWhereUniqueInput: InsuranceWhereUniqueInputInputObject
      InsuranceCategoryWhereUniqueInput: InsuranceCategoryWhereUniqueInputInputObject
      InsuranceCategoryWhereInput: InsuranceCategoryWhereInputInputObject
      JobWhereUniqueInput: JobWhereUniqueInputInputObject
      JobWhereInput: JobWhereInputInputObject
      LanguageWhereUniqueInput: LanguageWhereUniqueInputInputObject
      LanguageWhereInput: LanguageWhereInputInputObject
      MessageWhereUniqueInput: MessageWhereUniqueInputInputObject
      MessageWhereInput: MessageWhereInputInputObject
      MigrationWhereUniqueInput: MigrationWhereUniqueInputInputObject
      MigrationWhereInput: MigrationWhereInputInputObject
      OfferWhereUniqueInput: OfferWhereUniqueInputInputObject
      OfferWhereInput: OfferWhereInputInputObject
      OnlineAppointmentWhereUniqueInput: OnlineAppointmentWhereUniqueInputInputObject
      OnlineAppointmentWhereInput: OnlineAppointmentWhereInputInputObject
      OnlineDoctorWhereUniqueInput: OnlineDoctorWhereUniqueInputInputObject
      OnlineDoctorWhereInput: OnlineDoctorWhereInputInputObject
      OnlineRatingWhereUniqueInput: OnlineRatingWhereUniqueInputInputObject
      OnlineRatingWhereInput: OnlineRatingWhereInputInputObject
      OptTimeWhereUniqueInput: OptTimeWhereUniqueInputInputObject
      PasswordResetWhereUniqueInput: PasswordResetWhereUniqueInputInputObject
      PasswordResetWhereInput: PasswordResetWhereInputInputObject
      PatientWhereUniqueInput: PatientWhereUniqueInputInputObject
      SearchDesignWhereUniqueInput: SearchDesignWhereUniqueInputInputObject
      SearchDesignWhereInput: SearchDesignWhereInputInputObject
      SheduleTimeWhereUniqueInput: SheduleTimeWhereUniqueInputInputObject
      SliderWhereUniqueInput: SliderWhereUniqueInputInputObject
      SliderWhereInput: SliderWhereInputInputObject
      SpecialityWhereUniqueInput: SpecialityWhereUniqueInputInputObject
      EmailSubscriptionWhereUniqueInput: EmailSubscriptionWhereUniqueInputInputObject
      EmailSubscriptionWhereInput: EmailSubscriptionWhereInputInputObject
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      UserWhereInput: UserWhereInputInputObject
      VideoRequestWhereUniqueInput: VideoRequestWhereUniqueInputInputObject
      VideoRequestWhereInput: VideoRequestWhereInputInputObject
      VisitorWhereUniqueInput: VisitorWhereUniqueInputInputObject
      VisitorWhereInput: VisitorWhereInputInputObject
      TranslationWhereUniqueInput: TranslationWhereUniqueInputInputObject
      TranslationWhereInput: TranslationWhereInputInputObject
      PageWhereUniqueInput: PageWhereUniqueInputInputObject
      PageWhereInput: PageWhereInputInputObject
      AboutUsCreateInput: AboutUsCreateInputInputObject
      AboutUsUpdateInput: AboutUsUpdateInputInputObject
      AboutUsUpdateManyMutationInput: AboutUsUpdateManyMutationInputInputObject
      AdminCreateInput: AdminCreateInputInputObject
      AdminUpdateInput: AdminUpdateInputInputObject
      AdminUpdateManyMutationInput: AdminUpdateManyMutationInputInputObject
      AppointmentCreateInput: AppointmentCreateInputInputObject
      DiseaseCreateOneInput: DiseaseCreateOneInputInputObject
      DiseaseCreateInput: DiseaseCreateInputInputObject
      DoctorCreateOneInput: DoctorCreateOneInputInputObject
      DoctorCreateInput: DoctorCreateInputInputObject
      SpecialityCreateOneWithoutDoctorsInput: SpecialityCreateOneWithoutDoctorsInputInputObject
      SpecialityCreateWithoutDoctorsInput: SpecialityCreateWithoutDoctorsInputInputObject
      HospitalCreateManyWithoutDoctorsInput: HospitalCreateManyWithoutDoctorsInputInputObject
      HospitalCreateWithoutDoctorsInput: HospitalCreateWithoutDoctorsInputInputObject
      CityCreateOneWithoutHospitalInput: CityCreateOneWithoutHospitalInputInputObject
      CityCreateWithoutHospitalInput: CityCreateWithoutHospitalInputInputObject
      CountryCreateOneInput: CountryCreateOneInputInputObject
      CountryCreateInput: CountryCreateInputInputObject
      InsuranceCreateManyWithoutHospitalsInput: InsuranceCreateManyWithoutHospitalsInputInputObject
      InsuranceCreateWithoutHospitalsInput: InsuranceCreateWithoutHospitalsInputInputObject
      DoctorSheduleTimeCreateOneInput: DoctorSheduleTimeCreateOneInputInputObject
      DoctorSheduleTimeCreateInput: DoctorSheduleTimeCreateInputInputObject
      HospitalCreateOneInput: HospitalCreateOneInputInputObject
      HospitalCreateInput: HospitalCreateInputInputObject
      DoctorCreateManyWithoutHospitalInput: DoctorCreateManyWithoutHospitalInputInputObject
      DoctorCreateWithoutHospitalInput: DoctorCreateWithoutHospitalInputInputObject
      OptTimeCreateOneInput: OptTimeCreateOneInputInputObject
      OptTimeCreateInput: OptTimeCreateInputInputObject
      PatientCreateOneInput: PatientCreateOneInputInputObject
      PatientCreateInput: PatientCreateInputInputObject
      SheduleTimeCreateOneInput: SheduleTimeCreateOneInputInputObject
      SheduleTimeCreateInput: SheduleTimeCreateInputInputObject
      AppointmentUpdateInput: AppointmentUpdateInputInputObject
      DiseaseUpdateOneInput: DiseaseUpdateOneInputInputObject
      DiseaseUpdateDataInput: DiseaseUpdateDataInputInputObject
      DiseaseUpsertNestedInput: DiseaseUpsertNestedInputInputObject
      DoctorUpdateOneInput: DoctorUpdateOneInputInputObject
      DoctorUpdateDataInput: DoctorUpdateDataInputInputObject
      SpecialityUpdateOneWithoutDoctorsInput: SpecialityUpdateOneWithoutDoctorsInputInputObject
      SpecialityUpdateWithoutDoctorsDataInput: SpecialityUpdateWithoutDoctorsDataInputInputObject
      SpecialityUpsertWithoutDoctorsInput: SpecialityUpsertWithoutDoctorsInputInputObject
      HospitalUpdateManyWithoutDoctorsInput: HospitalUpdateManyWithoutDoctorsInputInputObject
      HospitalUpdateWithWhereUniqueWithoutDoctorsInput: HospitalUpdateWithWhereUniqueWithoutDoctorsInputInputObject
      HospitalUpdateWithoutDoctorsDataInput: HospitalUpdateWithoutDoctorsDataInputInputObject
      CityUpdateOneWithoutHospitalInput: CityUpdateOneWithoutHospitalInputInputObject
      CityUpdateWithoutHospitalDataInput: CityUpdateWithoutHospitalDataInputInputObject
      CityUpsertWithoutHospitalInput: CityUpsertWithoutHospitalInputInputObject
      CountryUpdateOneInput: CountryUpdateOneInputInputObject
      CountryUpdateDataInput: CountryUpdateDataInputInputObject
      CountryUpsertNestedInput: CountryUpsertNestedInputInputObject
      InsuranceUpdateManyWithoutHospitalsInput: InsuranceUpdateManyWithoutHospitalsInputInputObject
      InsuranceUpdateWithWhereUniqueWithoutHospitalsInput: InsuranceUpdateWithWhereUniqueWithoutHospitalsInputInputObject
      InsuranceUpdateWithoutHospitalsDataInput: InsuranceUpdateWithoutHospitalsDataInputInputObject
      InsuranceUpsertWithWhereUniqueWithoutHospitalsInput: InsuranceUpsertWithWhereUniqueWithoutHospitalsInputInputObject
      InsuranceScalarWhereInput: InsuranceScalarWhereInputInputObject
      InsuranceUpdateManyWithWhereNestedInput: InsuranceUpdateManyWithWhereNestedInputInputObject
      InsuranceUpdateManyDataInput: InsuranceUpdateManyDataInputInputObject
      HospitalUpsertWithWhereUniqueWithoutDoctorsInput: HospitalUpsertWithWhereUniqueWithoutDoctorsInputInputObject
      HospitalScalarWhereInput: HospitalScalarWhereInputInputObject
      HospitalUpdateManyWithWhereNestedInput: HospitalUpdateManyWithWhereNestedInputInputObject
      HospitalUpdateManyDataInput: HospitalUpdateManyDataInputInputObject
      DoctorUpsertNestedInput: DoctorUpsertNestedInputInputObject
      DoctorSheduleTimeUpdateOneInput: DoctorSheduleTimeUpdateOneInputInputObject
      DoctorSheduleTimeUpdateDataInput: DoctorSheduleTimeUpdateDataInputInputObject
      DoctorSheduleTimeUpsertNestedInput: DoctorSheduleTimeUpsertNestedInputInputObject
      HospitalUpdateOneInput: HospitalUpdateOneInputInputObject
      HospitalUpdateDataInput: HospitalUpdateDataInputInputObject
      DoctorUpdateManyWithoutHospitalInput: DoctorUpdateManyWithoutHospitalInputInputObject
      DoctorUpdateWithWhereUniqueWithoutHospitalInput: DoctorUpdateWithWhereUniqueWithoutHospitalInputInputObject
      DoctorUpdateWithoutHospitalDataInput: DoctorUpdateWithoutHospitalDataInputInputObject
      DoctorUpsertWithWhereUniqueWithoutHospitalInput: DoctorUpsertWithWhereUniqueWithoutHospitalInputInputObject
      DoctorScalarWhereInput: DoctorScalarWhereInputInputObject
      DoctorUpdateManyWithWhereNestedInput: DoctorUpdateManyWithWhereNestedInputInputObject
      DoctorUpdateManyDataInput: DoctorUpdateManyDataInputInputObject
      HospitalUpsertNestedInput: HospitalUpsertNestedInputInputObject
      OptTimeUpdateOneInput: OptTimeUpdateOneInputInputObject
      OptTimeUpdateDataInput: OptTimeUpdateDataInputInputObject
      OptTimeUpsertNestedInput: OptTimeUpsertNestedInputInputObject
      PatientUpdateOneInput: PatientUpdateOneInputInputObject
      PatientUpdateDataInput: PatientUpdateDataInputInputObject
      PatientUpsertNestedInput: PatientUpsertNestedInputInputObject
      SheduleTimeUpdateOneInput: SheduleTimeUpdateOneInputInputObject
      SheduleTimeUpdateDataInput: SheduleTimeUpdateDataInputInputObject
      SheduleTimeUpsertNestedInput: SheduleTimeUpsertNestedInputInputObject
      AppointmentUpdateManyMutationInput: AppointmentUpdateManyMutationInputInputObject
      BlogCreateInput: BlogCreateInputInputObject
      BlogUpdateInput: BlogUpdateInputInputObject
      BlogUpdateManyMutationInput: BlogUpdateManyMutationInputInputObject
      BlogCommentCreateInput: BlogCommentCreateInputInputObject
      BlogPostCreateOneInput: BlogPostCreateOneInputInputObject
      BlogPostCreateInput: BlogPostCreateInputInputObject
      BlogCreateOneInput: BlogCreateOneInputInputObject
      PostImageCreateManyWithoutPostIdInput: PostImageCreateManyWithoutPostIdInputInputObject
      PostImageCreateWithoutPostIdInput: PostImageCreateWithoutPostIdInputInputObject
      BlogCommentUpdateInput: BlogCommentUpdateInputInputObject
      BlogPostUpdateOneInput: BlogPostUpdateOneInputInputObject
      BlogPostUpdateDataInput: BlogPostUpdateDataInputInputObject
      BlogUpdateOneInput: BlogUpdateOneInputInputObject
      BlogUpdateDataInput: BlogUpdateDataInputInputObject
      BlogUpsertNestedInput: BlogUpsertNestedInputInputObject
      PostImageUpdateManyWithoutPostIdInput: PostImageUpdateManyWithoutPostIdInputInputObject
      PostImageUpdateWithWhereUniqueWithoutPostIdInput: PostImageUpdateWithWhereUniqueWithoutPostIdInputInputObject
      PostImageUpdateWithoutPostIdDataInput: PostImageUpdateWithoutPostIdDataInputInputObject
      PostImageUpsertWithWhereUniqueWithoutPostIdInput: PostImageUpsertWithWhereUniqueWithoutPostIdInputInputObject
      PostImageScalarWhereInput: PostImageScalarWhereInputInputObject
      PostImageUpdateManyWithWhereNestedInput: PostImageUpdateManyWithWhereNestedInputInputObject
      PostImageUpdateManyDataInput: PostImageUpdateManyDataInputInputObject
      BlogPostUpsertNestedInput: BlogPostUpsertNestedInputInputObject
      BlogCommentUpdateManyMutationInput: BlogCommentUpdateManyMutationInputInputObject
      BlogPostUpdateInput: BlogPostUpdateInputInputObject
      BlogPostUpdateManyMutationInput: BlogPostUpdateManyMutationInputInputObject
      PostImageCreateInput: PostImageCreateInputInputObject
      BlogPostCreateOneWithoutImagesInput: BlogPostCreateOneWithoutImagesInputInputObject
      BlogPostCreateWithoutImagesInput: BlogPostCreateWithoutImagesInputInputObject
      PostImageUpdateInput: PostImageUpdateInputInputObject
      BlogPostUpdateOneWithoutImagesInput: BlogPostUpdateOneWithoutImagesInputInputObject
      BlogPostUpdateWithoutImagesDataInput: BlogPostUpdateWithoutImagesDataInputInputObject
      BlogPostUpsertWithoutImagesInput: BlogPostUpsertWithoutImagesInputInputObject
      PostImageUpdateManyMutationInput: PostImageUpdateManyMutationInputInputObject
      CityCreateInput: CityCreateInputInputObject
      HospitalCreateManyWithoutCityInput: HospitalCreateManyWithoutCityInputInputObject
      HospitalCreateWithoutCityInput: HospitalCreateWithoutCityInputInputObject
      CityUpdateInput: CityUpdateInputInputObject
      HospitalUpdateManyWithoutCityInput: HospitalUpdateManyWithoutCityInputInputObject
      HospitalUpdateWithWhereUniqueWithoutCityInput: HospitalUpdateWithWhereUniqueWithoutCityInputInputObject
      HospitalUpdateWithoutCityDataInput: HospitalUpdateWithoutCityDataInputInputObject
      HospitalUpsertWithWhereUniqueWithoutCityInput: HospitalUpsertWithWhereUniqueWithoutCityInputInputObject
      CityUpdateManyMutationInput: CityUpdateManyMutationInputInputObject
      ContactUsCreateInput: ContactUsCreateInputInputObject
      ContactUsUpdateInput: ContactUsUpdateInputInputObject
      ContactUsUpdateManyMutationInput: ContactUsUpdateManyMutationInputInputObject
      CountryUpdateInput: CountryUpdateInputInputObject
      CountryUpdateManyMutationInput: CountryUpdateManyMutationInputInputObject
      DiseaseUpdateInput: DiseaseUpdateInputInputObject
      DiseaseUpdateManyMutationInput: DiseaseUpdateManyMutationInputInputObject
      DiseaseCoveredCreateInput: DiseaseCoveredCreateInputInputObject
      DiseaseCoveredUpdateInput: DiseaseCoveredUpdateInputInputObject
      DiseaseCoveredUpdateManyMutationInput: DiseaseCoveredUpdateManyMutationInputInputObject
      DoctorUpdateInput: DoctorUpdateInputInputObject
      DoctorUpdateManyMutationInput: DoctorUpdateManyMutationInputInputObject
      DoctorOldCreateInput: DoctorOldCreateInputInputObject
      DoctorsRatingCreateManyWithoutDoctorsInput: DoctorsRatingCreateManyWithoutDoctorsInputInputObject
      DoctorsRatingCreateWithoutDoctorsInput: DoctorsRatingCreateWithoutDoctorsInputInputObject
      SpecialityCreateOneInput: SpecialityCreateOneInputInputObject
      SpecialityCreateInput: SpecialityCreateInputInputObject
      DoctorCreateManyWithoutSpecialitiesInput: DoctorCreateManyWithoutSpecialitiesInputInputObject
      DoctorCreateWithoutSpecialitiesInput: DoctorCreateWithoutSpecialitiesInputInputObject
      DoctorOldUpdateInput: DoctorOldUpdateInputInputObject
      DoctorsRatingUpdateManyWithoutDoctorsInput: DoctorsRatingUpdateManyWithoutDoctorsInputInputObject
      DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInput: DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInputInputObject
      DoctorsRatingUpdateWithoutDoctorsDataInput: DoctorsRatingUpdateWithoutDoctorsDataInputInputObject
      DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInput: DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInputInputObject
      DoctorsRatingScalarWhereInput: DoctorsRatingScalarWhereInputInputObject
      DoctorsRatingUpdateManyWithWhereNestedInput: DoctorsRatingUpdateManyWithWhereNestedInputInputObject
      DoctorsRatingUpdateManyDataInput: DoctorsRatingUpdateManyDataInputInputObject
      SpecialityUpdateOneInput: SpecialityUpdateOneInputInputObject
      SpecialityUpdateDataInput: SpecialityUpdateDataInputInputObject
      DoctorUpdateManyWithoutSpecialitiesInput: DoctorUpdateManyWithoutSpecialitiesInputInputObject
      DoctorUpdateWithWhereUniqueWithoutSpecialitiesInput: DoctorUpdateWithWhereUniqueWithoutSpecialitiesInputInputObject
      DoctorUpdateWithoutSpecialitiesDataInput: DoctorUpdateWithoutSpecialitiesDataInputInputObject
      DoctorUpsertWithWhereUniqueWithoutSpecialitiesInput: DoctorUpsertWithWhereUniqueWithoutSpecialitiesInputInputObject
      SpecialityUpsertNestedInput: SpecialityUpsertNestedInputInputObject
      DoctorOldUpdateManyMutationInput: DoctorOldUpdateManyMutationInputInputObject
      DoctorSheduleCreateInput: DoctorSheduleCreateInputInputObject
      DoctorSheduleUpdateInput: DoctorSheduleUpdateInputInputObject
      DoctorSheduleUpdateManyMutationInput: DoctorSheduleUpdateManyMutationInputInputObject
      DoctorSheduleTimeUpdateInput: DoctorSheduleTimeUpdateInputInputObject
      DoctorSheduleTimeUpdateManyMutationInput: DoctorSheduleTimeUpdateManyMutationInputInputObject
      DoctorSpecialityCreateInput: DoctorSpecialityCreateInputInputObject
      DoctorsRatingCreateInput: DoctorsRatingCreateInputInputObject
      DoctorOldCreateOneWithoutDoctorsRatingInput: DoctorOldCreateOneWithoutDoctorsRatingInputInputObject
      DoctorOldCreateWithoutDoctorsRatingInput: DoctorOldCreateWithoutDoctorsRatingInputInputObject
      DoctorsRatingUpdateInput: DoctorsRatingUpdateInputInputObject
      DoctorOldUpdateOneWithoutDoctorsRatingInput: DoctorOldUpdateOneWithoutDoctorsRatingInputInputObject
      DoctorOldUpdateWithoutDoctorsRatingDataInput: DoctorOldUpdateWithoutDoctorsRatingDataInputInputObject
      DoctorOldUpsertWithoutDoctorsRatingInput: DoctorOldUpsertWithoutDoctorsRatingInputInputObject
      DoctorsRatingUpdateManyMutationInput: DoctorsRatingUpdateManyMutationInputInputObject
      DrSheduleCreateInput: DrSheduleCreateInputInputObject
      DrSheduleUpdateInput: DrSheduleUpdateInputInputObject
      DrSheduleUpdateManyMutationInput: DrSheduleUpdateManyMutationInputInputObject
      FacilityCreateInput: FacilityCreateInputInputObject
      FacilityUpdateInput: FacilityUpdateInputInputObject
      FacilityUpdateManyMutationInput: FacilityUpdateManyMutationInputInputObject
      HospitalUpdateInput: HospitalUpdateInputInputObject
      HospitalUpdateManyMutationInput: HospitalUpdateManyMutationInputInputObject
      HospitalDoctorCreateInput: HospitalDoctorCreateInputInputObject
      HospitalFacilityCreateInput: HospitalFacilityCreateInputInputObject
      HospitalFacilityUpdateInput: HospitalFacilityUpdateInputInputObject
      HospitalFacilityUpdateManyMutationInput: HospitalFacilityUpdateManyMutationInputInputObject
      HospitalInsuranceCreateInput: HospitalInsuranceCreateInputInputObject
      InsuranceCreateOneInput: InsuranceCreateOneInputInputObject
      InsuranceCreateInput: InsuranceCreateInputInputObject
      HospitalCreateManyWithoutInsurancesInput: HospitalCreateManyWithoutInsurancesInputInputObject
      HospitalCreateWithoutInsurancesInput: HospitalCreateWithoutInsurancesInputInputObject
      HospitalRatingCreateInput: HospitalRatingCreateInputInputObject
      HospitalRatingUpdateInput: HospitalRatingUpdateInputInputObject
      HospitalRatingUpdateManyMutationInput: HospitalRatingUpdateManyMutationInputInputObject
      IllnessCreateInput: IllnessCreateInputInputObject
      IllnessUpdateInput: IllnessUpdateInputInputObject
      IllnessUpdateManyMutationInput: IllnessUpdateManyMutationInputInputObject
      InsuranceUpdateInput: InsuranceUpdateInputInputObject
      HospitalUpdateManyWithoutInsurancesInput: HospitalUpdateManyWithoutInsurancesInputInputObject
      HospitalUpdateWithWhereUniqueWithoutInsurancesInput: HospitalUpdateWithWhereUniqueWithoutInsurancesInputInputObject
      HospitalUpdateWithoutInsurancesDataInput: HospitalUpdateWithoutInsurancesDataInputInputObject
      HospitalUpsertWithWhereUniqueWithoutInsurancesInput: HospitalUpsertWithWhereUniqueWithoutInsurancesInputInputObject
      InsuranceUpdateManyMutationInput: InsuranceUpdateManyMutationInputInputObject
      InsuranceCategoryCreateInput: InsuranceCategoryCreateInputInputObject
      InsuranceCategoryUpdateInput: InsuranceCategoryUpdateInputInputObject
      InsuranceCategoryUpdateManyMutationInput: InsuranceCategoryUpdateManyMutationInputInputObject
      JobCreateInput: JobCreateInputInputObject
      JobUpdateInput: JobUpdateInputInputObject
      JobUpdateManyMutationInput: JobUpdateManyMutationInputInputObject
      LanguageCreateInput: LanguageCreateInputInputObject
      LanguageUpdateInput: LanguageUpdateInputInputObject
      LanguageUpdateManyMutationInput: LanguageUpdateManyMutationInputInputObject
      MessageCreateInput: MessageCreateInputInputObject
      MessageUpdateInput: MessageUpdateInputInputObject
      MessageUpdateManyMutationInput: MessageUpdateManyMutationInputInputObject
      MigrationCreateInput: MigrationCreateInputInputObject
      MigrationUpdateInput: MigrationUpdateInputInputObject
      MigrationUpdateManyMutationInput: MigrationUpdateManyMutationInputInputObject
      OfferCreateInput: OfferCreateInputInputObject
      OfferUpdateInput: OfferUpdateInputInputObject
      OfferUpdateManyMutationInput: OfferUpdateManyMutationInputInputObject
      OnlineAppointmentCreateInput: OnlineAppointmentCreateInputInputObject
      OnlineAppointmentUpdateInput: OnlineAppointmentUpdateInputInputObject
      OnlineAppointmentUpdateManyMutationInput: OnlineAppointmentUpdateManyMutationInputInputObject
      OnlineDoctorCreateInput: OnlineDoctorCreateInputInputObject
      OnlineDoctorUpdateInput: OnlineDoctorUpdateInputInputObject
      OnlineDoctorUpdateManyMutationInput: OnlineDoctorUpdateManyMutationInputInputObject
      OnlineRatingCreateInput: OnlineRatingCreateInputInputObject
      OnlineRatingUpdateInput: OnlineRatingUpdateInputInputObject
      OnlineRatingUpdateManyMutationInput: OnlineRatingUpdateManyMutationInputInputObject
      OptTimeUpdateInput: OptTimeUpdateInputInputObject
      OptTimeUpdateManyMutationInput: OptTimeUpdateManyMutationInputInputObject
      PasswordResetCreateInput: PasswordResetCreateInputInputObject
      PasswordResetUpdateInput: PasswordResetUpdateInputInputObject
      PasswordResetUpdateManyMutationInput: PasswordResetUpdateManyMutationInputInputObject
      PatientUpdateInput: PatientUpdateInputInputObject
      PatientUpdateManyMutationInput: PatientUpdateManyMutationInputInputObject
      SearchDesignCreateInput: SearchDesignCreateInputInputObject
      SearchDesignUpdateInput: SearchDesignUpdateInputInputObject
      SearchDesignUpdateManyMutationInput: SearchDesignUpdateManyMutationInputInputObject
      SheduleTimeUpdateInput: SheduleTimeUpdateInputInputObject
      SheduleTimeUpdateManyMutationInput: SheduleTimeUpdateManyMutationInputInputObject
      SliderCreateInput: SliderCreateInputInputObject
      SliderUpdateInput: SliderUpdateInputInputObject
      SliderUpdateManyMutationInput: SliderUpdateManyMutationInputInputObject
      SpecialityUpdateInput: SpecialityUpdateInputInputObject
      SpecialityUpdateManyMutationInput: SpecialityUpdateManyMutationInputInputObject
      EmailSubscriptionCreateInput: EmailSubscriptionCreateInputInputObject
      EmailSubscriptionUpdateInput: EmailSubscriptionUpdateInputInputObject
      EmailSubscriptionUpdateManyMutationInput: EmailSubscriptionUpdateManyMutationInputInputObject
      UserCreateInput: UserCreateInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      VideoRequestCreateInput: VideoRequestCreateInputInputObject
      VideoRequestUpdateInput: VideoRequestUpdateInputInputObject
      VideoRequestUpdateManyMutationInput: VideoRequestUpdateManyMutationInputInputObject
      VisitorCreateInput: VisitorCreateInputInputObject
      VisitorUpdateInput: VisitorUpdateInputInputObject
      VisitorUpdateManyMutationInput: VisitorUpdateManyMutationInputInputObject
      TranslationCreateInput: TranslationCreateInputInputObject
      TranslationUpdateInput: TranslationUpdateInputInputObject
      TranslationUpdateManyMutationInput: TranslationUpdateManyMutationInputInputObject
      PageCreateInput: PageCreateInputInputObject
      PageUpdateInput: PageUpdateInputInputObject
      PageUpdateManyMutationInput: PageUpdateManyMutationInputInputObject
      AboutUsSubscriptionWhereInput: AboutUsSubscriptionWhereInputInputObject
      AdminSubscriptionWhereInput: AdminSubscriptionWhereInputInputObject
      AppointmentSubscriptionWhereInput: AppointmentSubscriptionWhereInputInputObject
      BlogSubscriptionWhereInput: BlogSubscriptionWhereInputInputObject
      BlogCommentSubscriptionWhereInput: BlogCommentSubscriptionWhereInputInputObject
      BlogPostSubscriptionWhereInput: BlogPostSubscriptionWhereInputInputObject
      PostImageSubscriptionWhereInput: PostImageSubscriptionWhereInputInputObject
      CitySubscriptionWhereInput: CitySubscriptionWhereInputInputObject
      ContactUsSubscriptionWhereInput: ContactUsSubscriptionWhereInputInputObject
      CountrySubscriptionWhereInput: CountrySubscriptionWhereInputInputObject
      DiseaseSubscriptionWhereInput: DiseaseSubscriptionWhereInputInputObject
      DiseaseCoveredSubscriptionWhereInput: DiseaseCoveredSubscriptionWhereInputInputObject
      DoctorSubscriptionWhereInput: DoctorSubscriptionWhereInputInputObject
      DoctorOldSubscriptionWhereInput: DoctorOldSubscriptionWhereInputInputObject
      DoctorSheduleSubscriptionWhereInput: DoctorSheduleSubscriptionWhereInputInputObject
      DoctorSheduleTimeSubscriptionWhereInput: DoctorSheduleTimeSubscriptionWhereInputInputObject
      DoctorSpecialitySubscriptionWhereInput: DoctorSpecialitySubscriptionWhereInputInputObject
      DoctorsRatingSubscriptionWhereInput: DoctorsRatingSubscriptionWhereInputInputObject
      DrSheduleSubscriptionWhereInput: DrSheduleSubscriptionWhereInputInputObject
      FacilitySubscriptionWhereInput: FacilitySubscriptionWhereInputInputObject
      HospitalSubscriptionWhereInput: HospitalSubscriptionWhereInputInputObject
      HospitalDoctorSubscriptionWhereInput: HospitalDoctorSubscriptionWhereInputInputObject
      HospitalFacilitySubscriptionWhereInput: HospitalFacilitySubscriptionWhereInputInputObject
      HospitalInsuranceSubscriptionWhereInput: HospitalInsuranceSubscriptionWhereInputInputObject
      HospitalRatingSubscriptionWhereInput: HospitalRatingSubscriptionWhereInputInputObject
      IllnessSubscriptionWhereInput: IllnessSubscriptionWhereInputInputObject
      InsuranceSubscriptionWhereInput: InsuranceSubscriptionWhereInputInputObject
      InsuranceCategorySubscriptionWhereInput: InsuranceCategorySubscriptionWhereInputInputObject
      JobSubscriptionWhereInput: JobSubscriptionWhereInputInputObject
      LanguageSubscriptionWhereInput: LanguageSubscriptionWhereInputInputObject
      MessageSubscriptionWhereInput: MessageSubscriptionWhereInputInputObject
      MigrationSubscriptionWhereInput: MigrationSubscriptionWhereInputInputObject
      OfferSubscriptionWhereInput: OfferSubscriptionWhereInputInputObject
      OnlineAppointmentSubscriptionWhereInput: OnlineAppointmentSubscriptionWhereInputInputObject
      OnlineDoctorSubscriptionWhereInput: OnlineDoctorSubscriptionWhereInputInputObject
      OnlineRatingSubscriptionWhereInput: OnlineRatingSubscriptionWhereInputInputObject
      OptTimeSubscriptionWhereInput: OptTimeSubscriptionWhereInputInputObject
      PasswordResetSubscriptionWhereInput: PasswordResetSubscriptionWhereInputInputObject
      PatientSubscriptionWhereInput: PatientSubscriptionWhereInputInputObject
      SearchDesignSubscriptionWhereInput: SearchDesignSubscriptionWhereInputInputObject
      SheduleTimeSubscriptionWhereInput: SheduleTimeSubscriptionWhereInputInputObject
      SliderSubscriptionWhereInput: SliderSubscriptionWhereInputInputObject
      SpecialitySubscriptionWhereInput: SpecialitySubscriptionWhereInputInputObject
      EmailSubscriptionSubscriptionWhereInput: EmailSubscriptionSubscriptionWhereInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      VideoRequestSubscriptionWhereInput: VideoRequestSubscriptionWhereInputInputObject
      VisitorSubscriptionWhereInput: VisitorSubscriptionWhereInputInputObject
      TranslationSubscriptionWhereInput: TranslationSubscriptionWhereInputInputObject
      PageSubscriptionWhereInput: PageSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    AboutUsOrderByInput: AboutUsOrderByInputValues,
    AdminOrderByInput: AdminOrderByInputValues,
    DoctorOrderByInput: DoctorOrderByInputValues,
    HospitalOrderByInput: HospitalOrderByInputValues,
    InsuranceOrderByInput: InsuranceOrderByInputValues,
    AppointmentOrderByInput: AppointmentOrderByInputValues,
    BlogOrderByInput: BlogOrderByInputValues,
    PostImageOrderByInput: PostImageOrderByInputValues,
    BlogCommentOrderByInput: BlogCommentOrderByInputValues,
    BlogPostOrderByInput: BlogPostOrderByInputValues,
    CityOrderByInput: CityOrderByInputValues,
    ContactUsOrderByInput: ContactUsOrderByInputValues,
    CountryOrderByInput: CountryOrderByInputValues,
    DiseaseOrderByInput: DiseaseOrderByInputValues,
    DiseaseCoveredOrderByInput: DiseaseCoveredOrderByInputValues,
    DoctorsRatingOrderByInput: DoctorsRatingOrderByInputValues,
    DoctorOldOrderByInput: DoctorOldOrderByInputValues,
    DoctorSheduleOrderByInput: DoctorSheduleOrderByInputValues,
    DoctorSheduleTimeOrderByInput: DoctorSheduleTimeOrderByInputValues,
    DoctorSpecialityOrderByInput: DoctorSpecialityOrderByInputValues,
    DrSheduleOrderByInput: DrSheduleOrderByInputValues,
    FacilityOrderByInput: FacilityOrderByInputValues,
    HospitalDoctorOrderByInput: HospitalDoctorOrderByInputValues,
    HospitalFacilityOrderByInput: HospitalFacilityOrderByInputValues,
    HospitalInsuranceOrderByInput: HospitalInsuranceOrderByInputValues,
    HospitalRatingOrderByInput: HospitalRatingOrderByInputValues,
    IllnessOrderByInput: IllnessOrderByInputValues,
    InsuranceCategoryOrderByInput: InsuranceCategoryOrderByInputValues,
    JobOrderByInput: JobOrderByInputValues,
    LanguageOrderByInput: LanguageOrderByInputValues,
    MessageOrderByInput: MessageOrderByInputValues,
    MigrationOrderByInput: MigrationOrderByInputValues,
    OfferOrderByInput: OfferOrderByInputValues,
    OnlineAppointmentOrderByInput: OnlineAppointmentOrderByInputValues,
    OnlineDoctorOrderByInput: OnlineDoctorOrderByInputValues,
    OnlineRatingOrderByInput: OnlineRatingOrderByInputValues,
    OptTimeOrderByInput: OptTimeOrderByInputValues,
    PasswordResetOrderByInput: PasswordResetOrderByInputValues,
    PatientOrderByInput: PatientOrderByInputValues,
    SearchDesignOrderByInput: SearchDesignOrderByInputValues,
    SheduleTimeOrderByInput: SheduleTimeOrderByInputValues,
    SliderOrderByInput: SliderOrderByInputValues,
    SpecialityOrderByInput: SpecialityOrderByInputValues,
    EmailSubscriptionOrderByInput: EmailSubscriptionOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    VideoRequestOrderByInput: VideoRequestOrderByInputValues,
    VisitorOrderByInput: VisitorOrderByInputValues,
    TranslationOrderByInput: TranslationOrderByInputValues,
    PageOrderByInput: PageOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'aboutUs', args?: QueryAboutUsArgs[] | false, alias?: string  } 
  | { name: 'aboutUses', args?: QueryAboutUsesArgs[] | false, alias?: string  } 
  | { name: 'aboutUsesConnection', args?: QueryAboutUsesConnectionArgs[] | false, alias?: string  } 
  | { name: 'admin', args?: QueryAdminArgs[] | false, alias?: string  } 
  | { name: 'admins', args?: QueryAdminsArgs[] | false, alias?: string  } 
  | { name: 'adminsConnection', args?: QueryAdminsConnectionArgs[] | false, alias?: string  } 
  | { name: 'appointment', args?: QueryAppointmentArgs[] | false, alias?: string  } 
  | { name: 'appointments', args?: QueryAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'appointmentsConnection', args?: QueryAppointmentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'blog', args?: QueryBlogArgs[] | false, alias?: string  } 
  | { name: 'blogs', args?: QueryBlogsArgs[] | false, alias?: string  } 
  | { name: 'blogsConnection', args?: QueryBlogsConnectionArgs[] | false, alias?: string  } 
  | { name: 'blogComment', args?: QueryBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'blogComments', args?: QueryBlogCommentsArgs[] | false, alias?: string  } 
  | { name: 'blogCommentsConnection', args?: QueryBlogCommentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'blogPost', args?: QueryBlogPostArgs[] | false, alias?: string  } 
  | { name: 'blogPosts', args?: QueryBlogPostsArgs[] | false, alias?: string  } 
  | { name: 'blogPostsConnection', args?: QueryBlogPostsConnectionArgs[] | false, alias?: string  } 
  | { name: 'postImage', args?: QueryPostImageArgs[] | false, alias?: string  } 
  | { name: 'postImages', args?: QueryPostImagesArgs[] | false, alias?: string  } 
  | { name: 'postImagesConnection', args?: QueryPostImagesConnectionArgs[] | false, alias?: string  } 
  | { name: 'city', args?: QueryCityArgs[] | false, alias?: string  } 
  | { name: 'cities', args?: QueryCitiesArgs[] | false, alias?: string  } 
  | { name: 'citiesConnection', args?: QueryCitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'contactUs', args?: QueryContactUsArgs[] | false, alias?: string  } 
  | { name: 'contactUses', args?: QueryContactUsesArgs[] | false, alias?: string  } 
  | { name: 'contactUsesConnection', args?: QueryContactUsesConnectionArgs[] | false, alias?: string  } 
  | { name: 'country', args?: QueryCountryArgs[] | false, alias?: string  } 
  | { name: 'countries', args?: QueryCountriesArgs[] | false, alias?: string  } 
  | { name: 'countriesConnection', args?: QueryCountriesConnectionArgs[] | false, alias?: string  } 
  | { name: 'disease', args?: QueryDiseaseArgs[] | false, alias?: string  } 
  | { name: 'diseases', args?: QueryDiseasesArgs[] | false, alias?: string  } 
  | { name: 'diseasesConnection', args?: QueryDiseasesConnectionArgs[] | false, alias?: string  } 
  | { name: 'diseaseCovered', args?: QueryDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'diseaseCovereds', args?: QueryDiseaseCoveredsArgs[] | false, alias?: string  } 
  | { name: 'diseaseCoveredsConnection', args?: QueryDiseaseCoveredsConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctor', args?: QueryDoctorArgs[] | false, alias?: string  } 
  | { name: 'doctors', args?: QueryDoctorsArgs[] | false, alias?: string  } 
  | { name: 'doctorsConnection', args?: QueryDoctorsConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctorOld', args?: QueryDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'doctorOlds', args?: QueryDoctorOldsArgs[] | false, alias?: string  } 
  | { name: 'doctorOldsConnection', args?: QueryDoctorOldsConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctorShedule', args?: QueryDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'doctorShedules', args?: QueryDoctorShedulesArgs[] | false, alias?: string  } 
  | { name: 'doctorShedulesConnection', args?: QueryDoctorShedulesConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctorSheduleTime', args?: QueryDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'doctorSheduleTimes', args?: QueryDoctorSheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'doctorSheduleTimesConnection', args?: QueryDoctorSheduleTimesConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctorSpecialities', args?: QueryDoctorSpecialitiesArgs[] | false, alias?: string  } 
  | { name: 'doctorSpecialitiesConnection', args?: QueryDoctorSpecialitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'doctorsRating', args?: QueryDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'doctorsRatings', args?: QueryDoctorsRatingsArgs[] | false, alias?: string  } 
  | { name: 'doctorsRatingsConnection', args?: QueryDoctorsRatingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'drShedule', args?: QueryDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'drShedules', args?: QueryDrShedulesArgs[] | false, alias?: string  } 
  | { name: 'drShedulesConnection', args?: QueryDrShedulesConnectionArgs[] | false, alias?: string  } 
  | { name: 'facility', args?: QueryFacilityArgs[] | false, alias?: string  } 
  | { name: 'facilities', args?: QueryFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'facilitiesConnection', args?: QueryFacilitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'hospital', args?: QueryHospitalArgs[] | false, alias?: string  } 
  | { name: 'hospitals', args?: QueryHospitalsArgs[] | false, alias?: string  } 
  | { name: 'hospitalsConnection', args?: QueryHospitalsConnectionArgs[] | false, alias?: string  } 
  | { name: 'hospitalDoctors', args?: QueryHospitalDoctorsArgs[] | false, alias?: string  } 
  | { name: 'hospitalDoctorsConnection', args?: QueryHospitalDoctorsConnectionArgs[] | false, alias?: string  } 
  | { name: 'hospitalFacility', args?: QueryHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'hospitalFacilities', args?: QueryHospitalFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'hospitalFacilitiesConnection', args?: QueryHospitalFacilitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'hospitalInsurances', args?: QueryHospitalInsurancesArgs[] | false, alias?: string  } 
  | { name: 'hospitalInsurancesConnection', args?: QueryHospitalInsurancesConnectionArgs[] | false, alias?: string  } 
  | { name: 'hospitalRating', args?: QueryHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'hospitalRatings', args?: QueryHospitalRatingsArgs[] | false, alias?: string  } 
  | { name: 'hospitalRatingsConnection', args?: QueryHospitalRatingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'illness', args?: QueryIllnessArgs[] | false, alias?: string  } 
  | { name: 'illnesses', args?: QueryIllnessesArgs[] | false, alias?: string  } 
  | { name: 'illnessesConnection', args?: QueryIllnessesConnectionArgs[] | false, alias?: string  } 
  | { name: 'insurance', args?: QueryInsuranceArgs[] | false, alias?: string  } 
  | { name: 'insurances', args?: QueryInsurancesArgs[] | false, alias?: string  } 
  | { name: 'insurancesConnection', args?: QueryInsurancesConnectionArgs[] | false, alias?: string  } 
  | { name: 'insuranceCategory', args?: QueryInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'insuranceCategories', args?: QueryInsuranceCategoriesArgs[] | false, alias?: string  } 
  | { name: 'insuranceCategoriesConnection', args?: QueryInsuranceCategoriesConnectionArgs[] | false, alias?: string  } 
  | { name: 'job', args?: QueryJobArgs[] | false, alias?: string  } 
  | { name: 'jobs', args?: QueryJobsArgs[] | false, alias?: string  } 
  | { name: 'jobsConnection', args?: QueryJobsConnectionArgs[] | false, alias?: string  } 
  | { name: 'language', args?: QueryLanguageArgs[] | false, alias?: string  } 
  | { name: 'languages', args?: QueryLanguagesArgs[] | false, alias?: string  } 
  | { name: 'languagesConnection', args?: QueryLanguagesConnectionArgs[] | false, alias?: string  } 
  | { name: 'message', args?: QueryMessageArgs[] | false, alias?: string  } 
  | { name: 'messages', args?: QueryMessagesArgs[] | false, alias?: string  } 
  | { name: 'messagesConnection', args?: QueryMessagesConnectionArgs[] | false, alias?: string  } 
  | { name: 'migration', args?: QueryMigrationArgs[] | false, alias?: string  } 
  | { name: 'migrations', args?: QueryMigrationsArgs[] | false, alias?: string  } 
  | { name: 'migrationsConnection', args?: QueryMigrationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'offer', args?: QueryOfferArgs[] | false, alias?: string  } 
  | { name: 'offers', args?: QueryOffersArgs[] | false, alias?: string  } 
  | { name: 'offersConnection', args?: QueryOffersConnectionArgs[] | false, alias?: string  } 
  | { name: 'onlineAppointment', args?: QueryOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'onlineAppointments', args?: QueryOnlineAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'onlineAppointmentsConnection', args?: QueryOnlineAppointmentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'onlineDoctor', args?: QueryOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'onlineDoctors', args?: QueryOnlineDoctorsArgs[] | false, alias?: string  } 
  | { name: 'onlineDoctorsConnection', args?: QueryOnlineDoctorsConnectionArgs[] | false, alias?: string  } 
  | { name: 'onlineRating', args?: QueryOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'onlineRatings', args?: QueryOnlineRatingsArgs[] | false, alias?: string  } 
  | { name: 'onlineRatingsConnection', args?: QueryOnlineRatingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'optTime', args?: QueryOptTimeArgs[] | false, alias?: string  } 
  | { name: 'optTimes', args?: QueryOptTimesArgs[] | false, alias?: string  } 
  | { name: 'optTimesConnection', args?: QueryOptTimesConnectionArgs[] | false, alias?: string  } 
  | { name: 'passwordReset', args?: QueryPasswordResetArgs[] | false, alias?: string  } 
  | { name: 'passwordResets', args?: QueryPasswordResetsArgs[] | false, alias?: string  } 
  | { name: 'passwordResetsConnection', args?: QueryPasswordResetsConnectionArgs[] | false, alias?: string  } 
  | { name: 'patient', args?: QueryPatientArgs[] | false, alias?: string  } 
  | { name: 'patients', args?: QueryPatientsArgs[] | false, alias?: string  } 
  | { name: 'patientsConnection', args?: QueryPatientsConnectionArgs[] | false, alias?: string  } 
  | { name: 'searchDesign', args?: QuerySearchDesignArgs[] | false, alias?: string  } 
  | { name: 'searchDesigns', args?: QuerySearchDesignsArgs[] | false, alias?: string  } 
  | { name: 'searchDesignsConnection', args?: QuerySearchDesignsConnectionArgs[] | false, alias?: string  } 
  | { name: 'sheduleTime', args?: QuerySheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'sheduleTimes', args?: QuerySheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'sheduleTimesConnection', args?: QuerySheduleTimesConnectionArgs[] | false, alias?: string  } 
  | { name: 'slider', args?: QuerySliderArgs[] | false, alias?: string  } 
  | { name: 'sliders', args?: QuerySlidersArgs[] | false, alias?: string  } 
  | { name: 'slidersConnection', args?: QuerySlidersConnectionArgs[] | false, alias?: string  } 
  | { name: 'speciality', args?: QuerySpecialityArgs[] | false, alias?: string  } 
  | { name: 'specialities', args?: QuerySpecialitiesArgs[] | false, alias?: string  } 
  | { name: 'specialitiesConnection', args?: QuerySpecialitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'emailSubscription', args?: QueryEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'emailSubscriptions', args?: QueryEmailSubscriptionsArgs[] | false, alias?: string  } 
  | { name: 'emailSubscriptionsConnection', args?: QueryEmailSubscriptionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'videoRequest', args?: QueryVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'videoRequests', args?: QueryVideoRequestsArgs[] | false, alias?: string  } 
  | { name: 'videoRequestsConnection', args?: QueryVideoRequestsConnectionArgs[] | false, alias?: string  } 
  | { name: 'visitor', args?: QueryVisitorArgs[] | false, alias?: string  } 
  | { name: 'visitors', args?: QueryVisitorsArgs[] | false, alias?: string  } 
  | { name: 'visitorsConnection', args?: QueryVisitorsConnectionArgs[] | false, alias?: string  } 
  | { name: 'translation', args?: QueryTranslationArgs[] | false, alias?: string  } 
  | { name: 'translations', args?: QueryTranslationsArgs[] | false, alias?: string  } 
  | { name: 'translationsConnection', args?: QueryTranslationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'page', args?: QueryPageArgs[] | false, alias?: string  } 
  | { name: 'pages', args?: QueryPagesArgs[] | false, alias?: string  } 
  | { name: 'pagesConnection', args?: QueryPagesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'aboutUs'
  | 'aboutUses'
  | 'aboutUsesConnection'
  | 'admin'
  | 'admins'
  | 'adminsConnection'
  | 'appointment'
  | 'appointments'
  | 'appointmentsConnection'
  | 'blog'
  | 'blogs'
  | 'blogsConnection'
  | 'blogComment'
  | 'blogComments'
  | 'blogCommentsConnection'
  | 'blogPost'
  | 'blogPosts'
  | 'blogPostsConnection'
  | 'postImage'
  | 'postImages'
  | 'postImagesConnection'
  | 'city'
  | 'cities'
  | 'citiesConnection'
  | 'contactUs'
  | 'contactUses'
  | 'contactUsesConnection'
  | 'country'
  | 'countries'
  | 'countriesConnection'
  | 'disease'
  | 'diseases'
  | 'diseasesConnection'
  | 'diseaseCovered'
  | 'diseaseCovereds'
  | 'diseaseCoveredsConnection'
  | 'doctor'
  | 'doctors'
  | 'doctorsConnection'
  | 'doctorOld'
  | 'doctorOlds'
  | 'doctorOldsConnection'
  | 'doctorShedule'
  | 'doctorShedules'
  | 'doctorShedulesConnection'
  | 'doctorSheduleTime'
  | 'doctorSheduleTimes'
  | 'doctorSheduleTimesConnection'
  | 'doctorSpecialities'
  | 'doctorSpecialitiesConnection'
  | 'doctorsRating'
  | 'doctorsRatings'
  | 'doctorsRatingsConnection'
  | 'drShedule'
  | 'drShedules'
  | 'drShedulesConnection'
  | 'facility'
  | 'facilities'
  | 'facilitiesConnection'
  | 'hospital'
  | 'hospitals'
  | 'hospitalsConnection'
  | 'hospitalDoctors'
  | 'hospitalDoctorsConnection'
  | 'hospitalFacility'
  | 'hospitalFacilities'
  | 'hospitalFacilitiesConnection'
  | 'hospitalInsurances'
  | 'hospitalInsurancesConnection'
  | 'hospitalRating'
  | 'hospitalRatings'
  | 'hospitalRatingsConnection'
  | 'illness'
  | 'illnesses'
  | 'illnessesConnection'
  | 'insurance'
  | 'insurances'
  | 'insurancesConnection'
  | 'insuranceCategory'
  | 'insuranceCategories'
  | 'insuranceCategoriesConnection'
  | 'job'
  | 'jobs'
  | 'jobsConnection'
  | 'language'
  | 'languages'
  | 'languagesConnection'
  | 'message'
  | 'messages'
  | 'messagesConnection'
  | 'migration'
  | 'migrations'
  | 'migrationsConnection'
  | 'offer'
  | 'offers'
  | 'offersConnection'
  | 'onlineAppointment'
  | 'onlineAppointments'
  | 'onlineAppointmentsConnection'
  | 'onlineDoctor'
  | 'onlineDoctors'
  | 'onlineDoctorsConnection'
  | 'onlineRating'
  | 'onlineRatings'
  | 'onlineRatingsConnection'
  | 'optTime'
  | 'optTimes'
  | 'optTimesConnection'
  | 'passwordReset'
  | 'passwordResets'
  | 'passwordResetsConnection'
  | 'patient'
  | 'patients'
  | 'patientsConnection'
  | 'searchDesign'
  | 'searchDesigns'
  | 'searchDesignsConnection'
  | 'sheduleTime'
  | 'sheduleTimes'
  | 'sheduleTimesConnection'
  | 'slider'
  | 'sliders'
  | 'slidersConnection'
  | 'speciality'
  | 'specialities'
  | 'specialitiesConnection'
  | 'emailSubscription'
  | 'emailSubscriptions'
  | 'emailSubscriptionsConnection'
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'videoRequest'
  | 'videoRequests'
  | 'videoRequestsConnection'
  | 'visitor'
  | 'visitors'
  | 'visitorsConnection'
  | 'translation'
  | 'translations'
  | 'translationsConnection'
  | 'page'
  | 'pages'
  | 'pagesConnection'


type QueryAboutUsArgs =
  | 'where'
type QueryAboutUsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAboutUsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAdminArgs =
  | 'where'
type QueryAdminsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAdminsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAppointmentArgs =
  | 'where'
type QueryAppointmentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAppointmentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogArgs =
  | 'where'
type QueryBlogsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogCommentArgs =
  | 'where'
type QueryBlogCommentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogCommentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogPostArgs =
  | 'where'
type QueryBlogPostsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBlogPostsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPostImageArgs =
  | 'where'
type QueryPostImagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPostImagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCityArgs =
  | 'where'
type QueryCitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryContactUsArgs =
  | 'where'
type QueryContactUsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryContactUsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCountryArgs =
  | 'where'
type QueryCountriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCountriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDiseaseArgs =
  | 'where'
type QueryDiseasesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDiseasesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDiseaseCoveredArgs =
  | 'where'
type QueryDiseaseCoveredsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDiseaseCoveredsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorArgs =
  | 'where'
type QueryDoctorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorOldArgs =
  | 'where'
type QueryDoctorOldsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorOldsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorSheduleArgs =
  | 'where'
type QueryDoctorShedulesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorShedulesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorSheduleTimeArgs =
  | 'where'
type QueryDoctorSheduleTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorSheduleTimesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorSpecialitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorSpecialitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorsRatingArgs =
  | 'where'
type QueryDoctorsRatingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDoctorsRatingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDrSheduleArgs =
  | 'where'
type QueryDrShedulesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDrShedulesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFacilityArgs =
  | 'where'
type QueryFacilitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFacilitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalArgs =
  | 'where'
type QueryHospitalsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalDoctorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalDoctorsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalFacilityArgs =
  | 'where'
type QueryHospitalFacilitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalFacilitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalInsurancesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalInsurancesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalRatingArgs =
  | 'where'
type QueryHospitalRatingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryHospitalRatingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryIllnessArgs =
  | 'where'
type QueryIllnessesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryIllnessesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInsuranceArgs =
  | 'where'
type QueryInsurancesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInsurancesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInsuranceCategoryArgs =
  | 'where'
type QueryInsuranceCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInsuranceCategoriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryJobArgs =
  | 'where'
type QueryJobsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryJobsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLanguageArgs =
  | 'where'
type QueryLanguagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLanguagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMessageArgs =
  | 'where'
type QueryMessagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMessagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMigrationArgs =
  | 'where'
type QueryMigrationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMigrationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOfferArgs =
  | 'where'
type QueryOffersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOffersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineAppointmentArgs =
  | 'where'
type QueryOnlineAppointmentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineAppointmentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineDoctorArgs =
  | 'where'
type QueryOnlineDoctorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineDoctorsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineRatingArgs =
  | 'where'
type QueryOnlineRatingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOnlineRatingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptTimeArgs =
  | 'where'
type QueryOptTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptTimesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPasswordResetArgs =
  | 'where'
type QueryPasswordResetsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPasswordResetsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPatientArgs =
  | 'where'
type QueryPatientsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPatientsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySearchDesignArgs =
  | 'where'
type QuerySearchDesignsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySearchDesignsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySheduleTimeArgs =
  | 'where'
type QuerySheduleTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySheduleTimesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySliderArgs =
  | 'where'
type QuerySlidersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySlidersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpecialityArgs =
  | 'where'
type QuerySpecialitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySpecialitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryEmailSubscriptionArgs =
  | 'where'
type QueryEmailSubscriptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryEmailSubscriptionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVideoRequestArgs =
  | 'where'
type QueryVideoRequestsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVideoRequestsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVisitorArgs =
  | 'where'
type QueryVisitorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVisitorsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTranslationArgs =
  | 'where'
type QueryTranslationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTranslationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPageArgs =
  | 'where'
type QueryPagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  aboutUs: {
    type: 'AboutUs'
    args: Record<QueryAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AboutUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs | null> | prisma.AboutUs | null
  }
  aboutUses: {
    type: 'AboutUs'
    args: Record<QueryAboutUsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AboutUsWhereInput | null, orderBy?: prisma.AboutUsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs[]> | prisma.AboutUs[]
  }
  aboutUsesConnection: {
    type: 'AboutUsConnection'
    args: Record<QueryAboutUsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AboutUsWhereInput | null, orderBy?: prisma.AboutUsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUsConnection> | prisma.AboutUsConnection
  }
  admin: {
    type: 'Admin'
    args: Record<QueryAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AdminWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin | null> | prisma.Admin | null
  }
  admins: {
    type: 'Admin'
    args: Record<QueryAdminsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AdminWhereInput | null, orderBy?: prisma.AdminOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin[]> | prisma.Admin[]
  }
  adminsConnection: {
    type: 'AdminConnection'
    args: Record<QueryAdminsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AdminWhereInput | null, orderBy?: prisma.AdminOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdminConnection> | prisma.AdminConnection
  }
  appointment: {
    type: 'Appointment'
    args: Record<QueryAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment | null> | prisma.Appointment | null
  }
  appointments: {
    type: 'Appointment'
    args: Record<QueryAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AppointmentWhereInput | null, orderBy?: prisma.AppointmentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment[]> | prisma.Appointment[]
  }
  appointmentsConnection: {
    type: 'AppointmentConnection'
    args: Record<QueryAppointmentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AppointmentWhereInput | null, orderBy?: prisma.AppointmentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentConnection> | prisma.AppointmentConnection
  }
  blog: {
    type: 'Blog'
    args: Record<QueryBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BlogWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog | null> | prisma.Blog | null
  }
  blogs: {
    type: 'Blog'
    args: Record<QueryBlogsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogWhereInput | null, orderBy?: prisma.BlogOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog[]> | prisma.Blog[]
  }
  blogsConnection: {
    type: 'BlogConnection'
    args: Record<QueryBlogsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogWhereInput | null, orderBy?: prisma.BlogOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogConnection> | prisma.BlogConnection
  }
  blogComment: {
    type: 'BlogComment'
    args: Record<QueryBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BlogCommentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment | null> | prisma.BlogComment | null
  }
  blogComments: {
    type: 'BlogComment'
    args: Record<QueryBlogCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogCommentWhereInput | null, orderBy?: prisma.BlogCommentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment[]> | prisma.BlogComment[]
  }
  blogCommentsConnection: {
    type: 'BlogCommentConnection'
    args: Record<QueryBlogCommentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogCommentWhereInput | null, orderBy?: prisma.BlogCommentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogCommentConnection> | prisma.BlogCommentConnection
  }
  blogPost: {
    type: 'BlogPost'
    args: Record<QueryBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BlogPostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  blogPosts: {
    type: 'BlogPost'
    args: Record<QueryBlogPostsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogPostWhereInput | null, orderBy?: prisma.BlogPostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost[]> | prisma.BlogPost[]
  }
  blogPostsConnection: {
    type: 'BlogPostConnection'
    args: Record<QueryBlogPostsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BlogPostWhereInput | null, orderBy?: prisma.BlogPostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPostConnection> | prisma.BlogPostConnection
  }
  postImage: {
    type: 'PostImage'
    args: Record<QueryPostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PostImageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage | null> | prisma.PostImage | null
  }
  postImages: {
    type: 'PostImage'
    args: Record<QueryPostImagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostImageWhereInput | null, orderBy?: prisma.PostImageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage[]> | prisma.PostImage[]
  }
  postImagesConnection: {
    type: 'PostImageConnection'
    args: Record<QueryPostImagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostImageWhereInput | null, orderBy?: prisma.PostImageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImageConnection> | prisma.PostImageConnection
  }
  city: {
    type: 'City'
    args: Record<QueryCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City | null> | prisma.City | null
  }
  cities: {
    type: 'City'
    args: Record<QueryCitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CityWhereInput | null, orderBy?: prisma.CityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City[]> | prisma.City[]
  }
  citiesConnection: {
    type: 'CityConnection'
    args: Record<QueryCitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CityWhereInput | null, orderBy?: prisma.CityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CityConnection> | prisma.CityConnection
  }
  contactUs: {
    type: 'ContactUs'
    args: Record<QueryContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ContactUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs | null> | prisma.ContactUs | null
  }
  contactUses: {
    type: 'ContactUs'
    args: Record<QueryContactUsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ContactUsWhereInput | null, orderBy?: prisma.ContactUsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs[]> | prisma.ContactUs[]
  }
  contactUsesConnection: {
    type: 'ContactUsConnection'
    args: Record<QueryContactUsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ContactUsWhereInput | null, orderBy?: prisma.ContactUsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUsConnection> | prisma.ContactUsConnection
  }
  country: {
    type: 'Country'
    args: Record<QueryCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CountryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country | null> | prisma.Country | null
  }
  countries: {
    type: 'Country'
    args: Record<QueryCountriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CountryWhereInput | null, orderBy?: prisma.CountryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country[]> | prisma.Country[]
  }
  countriesConnection: {
    type: 'CountryConnection'
    args: Record<QueryCountriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CountryWhereInput | null, orderBy?: prisma.CountryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CountryConnection> | prisma.CountryConnection
  }
  disease: {
    type: 'Disease'
    args: Record<QueryDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DiseaseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease | null> | prisma.Disease | null
  }
  diseases: {
    type: 'Disease'
    args: Record<QueryDiseasesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DiseaseWhereInput | null, orderBy?: prisma.DiseaseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease[]> | prisma.Disease[]
  }
  diseasesConnection: {
    type: 'DiseaseConnection'
    args: Record<QueryDiseasesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DiseaseWhereInput | null, orderBy?: prisma.DiseaseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseConnection> | prisma.DiseaseConnection
  }
  diseaseCovered: {
    type: 'DiseaseCovered'
    args: Record<QueryDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DiseaseCoveredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered | null> | prisma.DiseaseCovered | null
  }
  diseaseCovereds: {
    type: 'DiseaseCovered'
    args: Record<QueryDiseaseCoveredsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DiseaseCoveredWhereInput | null, orderBy?: prisma.DiseaseCoveredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered[]> | prisma.DiseaseCovered[]
  }
  diseaseCoveredsConnection: {
    type: 'DiseaseCoveredConnection'
    args: Record<QueryDiseaseCoveredsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DiseaseCoveredWhereInput | null, orderBy?: prisma.DiseaseCoveredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCoveredConnection> | prisma.DiseaseCoveredConnection
  }
  doctor: {
    type: 'Doctor'
    args: Record<QueryDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  doctors: {
    type: 'Doctor'
    args: Record<QueryDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorWhereInput | null, orderBy?: prisma.DoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor[]> | prisma.Doctor[]
  }
  doctorsConnection: {
    type: 'DoctorConnection'
    args: Record<QueryDoctorsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorWhereInput | null, orderBy?: prisma.DoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorConnection> | prisma.DoctorConnection
  }
  doctorOld: {
    type: 'DoctorOld'
    args: Record<QueryDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DoctorOldWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld | null> | prisma.DoctorOld | null
  }
  doctorOlds: {
    type: 'DoctorOld'
    args: Record<QueryDoctorOldsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorOldWhereInput | null, orderBy?: prisma.DoctorOldOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld[]> | prisma.DoctorOld[]
  }
  doctorOldsConnection: {
    type: 'DoctorOldConnection'
    args: Record<QueryDoctorOldsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorOldWhereInput | null, orderBy?: prisma.DoctorOldOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOldConnection> | prisma.DoctorOldConnection
  }
  doctorShedule: {
    type: 'DoctorShedule'
    args: Record<QueryDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DoctorSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule | null> | prisma.DoctorShedule | null
  }
  doctorShedules: {
    type: 'DoctorShedule'
    args: Record<QueryDoctorShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSheduleWhereInput | null, orderBy?: prisma.DoctorSheduleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule[]> | prisma.DoctorShedule[]
  }
  doctorShedulesConnection: {
    type: 'DoctorSheduleConnection'
    args: Record<QueryDoctorShedulesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSheduleWhereInput | null, orderBy?: prisma.DoctorSheduleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleConnection> | prisma.DoctorSheduleConnection
  }
  doctorSheduleTime: {
    type: 'DoctorSheduleTime'
    args: Record<QueryDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DoctorSheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime | null> | prisma.DoctorSheduleTime | null
  }
  doctorSheduleTimes: {
    type: 'DoctorSheduleTime'
    args: Record<QueryDoctorSheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSheduleTimeWhereInput | null, orderBy?: prisma.DoctorSheduleTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime[]> | prisma.DoctorSheduleTime[]
  }
  doctorSheduleTimesConnection: {
    type: 'DoctorSheduleTimeConnection'
    args: Record<QueryDoctorSheduleTimesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSheduleTimeWhereInput | null, orderBy?: prisma.DoctorSheduleTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTimeConnection> | prisma.DoctorSheduleTimeConnection
  }
  doctorSpecialities: {
    type: 'DoctorSpeciality'
    args: Record<QueryDoctorSpecialitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSpecialityWhereInput | null, orderBy?: prisma.DoctorSpecialityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpeciality[]> | prisma.DoctorSpeciality[]
  }
  doctorSpecialitiesConnection: {
    type: 'DoctorSpecialityConnection'
    args: Record<QueryDoctorSpecialitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorSpecialityWhereInput | null, orderBy?: prisma.DoctorSpecialityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpecialityConnection> | prisma.DoctorSpecialityConnection
  }
  doctorsRating: {
    type: 'DoctorsRating'
    args: Record<QueryDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DoctorsRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating | null> | prisma.DoctorsRating | null
  }
  doctorsRatings: {
    type: 'DoctorsRating'
    args: Record<QueryDoctorsRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorsRatingWhereInput | null, orderBy?: prisma.DoctorsRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating[]> | prisma.DoctorsRating[]
  }
  doctorsRatingsConnection: {
    type: 'DoctorsRatingConnection'
    args: Record<QueryDoctorsRatingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DoctorsRatingWhereInput | null, orderBy?: prisma.DoctorsRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRatingConnection> | prisma.DoctorsRatingConnection
  }
  drShedule: {
    type: 'DrShedule'
    args: Record<QueryDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DrSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule | null> | prisma.DrShedule | null
  }
  drShedules: {
    type: 'DrShedule'
    args: Record<QueryDrShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DrSheduleWhereInput | null, orderBy?: prisma.DrSheduleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule[]> | prisma.DrShedule[]
  }
  drShedulesConnection: {
    type: 'DrSheduleConnection'
    args: Record<QueryDrShedulesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DrSheduleWhereInput | null, orderBy?: prisma.DrSheduleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrSheduleConnection> | prisma.DrSheduleConnection
  }
  facility: {
    type: 'Facility'
    args: Record<QueryFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: FacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility | null> | prisma.Facility | null
  }
  facilities: {
    type: 'Facility'
    args: Record<QueryFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FacilityWhereInput | null, orderBy?: prisma.FacilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility[]> | prisma.Facility[]
  }
  facilitiesConnection: {
    type: 'FacilityConnection'
    args: Record<QueryFacilitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FacilityWhereInput | null, orderBy?: prisma.FacilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FacilityConnection> | prisma.FacilityConnection
  }
  hospital: {
    type: 'Hospital'
    args: Record<QueryHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: HospitalWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  hospitals: {
    type: 'Hospital'
    args: Record<QueryHospitalsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalWhereInput | null, orderBy?: prisma.HospitalOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital[]> | prisma.Hospital[]
  }
  hospitalsConnection: {
    type: 'HospitalConnection'
    args: Record<QueryHospitalsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalWhereInput | null, orderBy?: prisma.HospitalOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalConnection> | prisma.HospitalConnection
  }
  hospitalDoctors: {
    type: 'HospitalDoctor'
    args: Record<QueryHospitalDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalDoctorWhereInput | null, orderBy?: prisma.HospitalDoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctor[]> | prisma.HospitalDoctor[]
  }
  hospitalDoctorsConnection: {
    type: 'HospitalDoctorConnection'
    args: Record<QueryHospitalDoctorsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalDoctorWhereInput | null, orderBy?: prisma.HospitalDoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctorConnection> | prisma.HospitalDoctorConnection
  }
  hospitalFacility: {
    type: 'HospitalFacility'
    args: Record<QueryHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: HospitalFacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility | null> | prisma.HospitalFacility | null
  }
  hospitalFacilities: {
    type: 'HospitalFacility'
    args: Record<QueryHospitalFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalFacilityWhereInput | null, orderBy?: prisma.HospitalFacilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility[]> | prisma.HospitalFacility[]
  }
  hospitalFacilitiesConnection: {
    type: 'HospitalFacilityConnection'
    args: Record<QueryHospitalFacilitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalFacilityWhereInput | null, orderBy?: prisma.HospitalFacilityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacilityConnection> | prisma.HospitalFacilityConnection
  }
  hospitalInsurances: {
    type: 'HospitalInsurance'
    args: Record<QueryHospitalInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalInsuranceWhereInput | null, orderBy?: prisma.HospitalInsuranceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsurance[]> | prisma.HospitalInsurance[]
  }
  hospitalInsurancesConnection: {
    type: 'HospitalInsuranceConnection'
    args: Record<QueryHospitalInsurancesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalInsuranceWhereInput | null, orderBy?: prisma.HospitalInsuranceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsuranceConnection> | prisma.HospitalInsuranceConnection
  }
  hospitalRating: {
    type: 'HospitalRating'
    args: Record<QueryHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: HospitalRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating | null> | prisma.HospitalRating | null
  }
  hospitalRatings: {
    type: 'HospitalRating'
    args: Record<QueryHospitalRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalRatingWhereInput | null, orderBy?: prisma.HospitalRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating[]> | prisma.HospitalRating[]
  }
  hospitalRatingsConnection: {
    type: 'HospitalRatingConnection'
    args: Record<QueryHospitalRatingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: HospitalRatingWhereInput | null, orderBy?: prisma.HospitalRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRatingConnection> | prisma.HospitalRatingConnection
  }
  illness: {
    type: 'Illness'
    args: Record<QueryIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: IllnessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness | null> | prisma.Illness | null
  }
  illnesses: {
    type: 'Illness'
    args: Record<QueryIllnessesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: IllnessWhereInput | null, orderBy?: prisma.IllnessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness[]> | prisma.Illness[]
  }
  illnessesConnection: {
    type: 'IllnessConnection'
    args: Record<QueryIllnessesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: IllnessWhereInput | null, orderBy?: prisma.IllnessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.IllnessConnection> | prisma.IllnessConnection
  }
  insurance: {
    type: 'Insurance'
    args: Record<QueryInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: InsuranceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance | null> | prisma.Insurance | null
  }
  insurances: {
    type: 'Insurance'
    args: Record<QueryInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InsuranceWhereInput | null, orderBy?: prisma.InsuranceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance[]> | prisma.Insurance[]
  }
  insurancesConnection: {
    type: 'InsuranceConnection'
    args: Record<QueryInsurancesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InsuranceWhereInput | null, orderBy?: prisma.InsuranceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceConnection> | prisma.InsuranceConnection
  }
  insuranceCategory: {
    type: 'InsuranceCategory'
    args: Record<QueryInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: InsuranceCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory | null> | prisma.InsuranceCategory | null
  }
  insuranceCategories: {
    type: 'InsuranceCategory'
    args: Record<QueryInsuranceCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InsuranceCategoryWhereInput | null, orderBy?: prisma.InsuranceCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory[]> | prisma.InsuranceCategory[]
  }
  insuranceCategoriesConnection: {
    type: 'InsuranceCategoryConnection'
    args: Record<QueryInsuranceCategoriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InsuranceCategoryWhereInput | null, orderBy?: prisma.InsuranceCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategoryConnection> | prisma.InsuranceCategoryConnection
  }
  job: {
    type: 'Job'
    args: Record<QueryJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: JobWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job | null> | prisma.Job | null
  }
  jobs: {
    type: 'Job'
    args: Record<QueryJobsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: JobWhereInput | null, orderBy?: prisma.JobOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job[]> | prisma.Job[]
  }
  jobsConnection: {
    type: 'JobConnection'
    args: Record<QueryJobsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: JobWhereInput | null, orderBy?: prisma.JobOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.JobConnection> | prisma.JobConnection
  }
  language: {
    type: 'Language'
    args: Record<QueryLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: LanguageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language | null> | prisma.Language | null
  }
  languages: {
    type: 'Language'
    args: Record<QueryLanguagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LanguageWhereInput | null, orderBy?: prisma.LanguageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language[]> | prisma.Language[]
  }
  languagesConnection: {
    type: 'LanguageConnection'
    args: Record<QueryLanguagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LanguageWhereInput | null, orderBy?: prisma.LanguageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LanguageConnection> | prisma.LanguageConnection
  }
  message: {
    type: 'Message'
    args: Record<QueryMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  messages: {
    type: 'Message'
    args: Record<QueryMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  messagesConnection: {
    type: 'MessageConnection'
    args: Record<QueryMessagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageConnection> | prisma.MessageConnection
  }
  migration: {
    type: 'Migration'
    args: Record<QueryMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MigrationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration | null> | prisma.Migration | null
  }
  migrations: {
    type: 'Migration'
    args: Record<QueryMigrationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MigrationWhereInput | null, orderBy?: prisma.MigrationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration[]> | prisma.Migration[]
  }
  migrationsConnection: {
    type: 'MigrationConnection'
    args: Record<QueryMigrationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MigrationWhereInput | null, orderBy?: prisma.MigrationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MigrationConnection> | prisma.MigrationConnection
  }
  offer: {
    type: 'Offer'
    args: Record<QueryOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  offers: {
    type: 'Offer'
    args: Record<QueryOffersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer[]> | prisma.Offer[]
  }
  offersConnection: {
    type: 'OfferConnection'
    args: Record<QueryOffersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferConnection> | prisma.OfferConnection
  }
  onlineAppointment: {
    type: 'OnlineAppointment'
    args: Record<QueryOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OnlineAppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment | null> | prisma.OnlineAppointment | null
  }
  onlineAppointments: {
    type: 'OnlineAppointment'
    args: Record<QueryOnlineAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineAppointmentWhereInput | null, orderBy?: prisma.OnlineAppointmentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment[]> | prisma.OnlineAppointment[]
  }
  onlineAppointmentsConnection: {
    type: 'OnlineAppointmentConnection'
    args: Record<QueryOnlineAppointmentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineAppointmentWhereInput | null, orderBy?: prisma.OnlineAppointmentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointmentConnection> | prisma.OnlineAppointmentConnection
  }
  onlineDoctor: {
    type: 'OnlineDoctor'
    args: Record<QueryOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OnlineDoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor | null> | prisma.OnlineDoctor | null
  }
  onlineDoctors: {
    type: 'OnlineDoctor'
    args: Record<QueryOnlineDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineDoctorWhereInput | null, orderBy?: prisma.OnlineDoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor[]> | prisma.OnlineDoctor[]
  }
  onlineDoctorsConnection: {
    type: 'OnlineDoctorConnection'
    args: Record<QueryOnlineDoctorsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineDoctorWhereInput | null, orderBy?: prisma.OnlineDoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctorConnection> | prisma.OnlineDoctorConnection
  }
  onlineRating: {
    type: 'OnlineRating'
    args: Record<QueryOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OnlineRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating | null> | prisma.OnlineRating | null
  }
  onlineRatings: {
    type: 'OnlineRating'
    args: Record<QueryOnlineRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineRatingWhereInput | null, orderBy?: prisma.OnlineRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating[]> | prisma.OnlineRating[]
  }
  onlineRatingsConnection: {
    type: 'OnlineRatingConnection'
    args: Record<QueryOnlineRatingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OnlineRatingWhereInput | null, orderBy?: prisma.OnlineRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRatingConnection> | prisma.OnlineRatingConnection
  }
  optTime: {
    type: 'OptTime'
    args: Record<QueryOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OptTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime | null> | prisma.OptTime | null
  }
  optTimes: {
    type: 'OptTime'
    args: Record<QueryOptTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptTimeWhereInput | null, orderBy?: prisma.OptTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime[]> | prisma.OptTime[]
  }
  optTimesConnection: {
    type: 'OptTimeConnection'
    args: Record<QueryOptTimesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptTimeWhereInput | null, orderBy?: prisma.OptTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTimeConnection> | prisma.OptTimeConnection
  }
  passwordReset: {
    type: 'PasswordReset'
    args: Record<QueryPasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PasswordResetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset | null> | prisma.PasswordReset | null
  }
  passwordResets: {
    type: 'PasswordReset'
    args: Record<QueryPasswordResetsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PasswordResetWhereInput | null, orderBy?: prisma.PasswordResetOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset[]> | prisma.PasswordReset[]
  }
  passwordResetsConnection: {
    type: 'PasswordResetConnection'
    args: Record<QueryPasswordResetsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PasswordResetWhereInput | null, orderBy?: prisma.PasswordResetOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordResetConnection> | prisma.PasswordResetConnection
  }
  patient: {
    type: 'Patient'
    args: Record<QueryPatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PatientWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient | null> | prisma.Patient | null
  }
  patients: {
    type: 'Patient'
    args: Record<QueryPatientsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PatientWhereInput | null, orderBy?: prisma.PatientOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient[]> | prisma.Patient[]
  }
  patientsConnection: {
    type: 'PatientConnection'
    args: Record<QueryPatientsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PatientWhereInput | null, orderBy?: prisma.PatientOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PatientConnection> | prisma.PatientConnection
  }
  searchDesign: {
    type: 'SearchDesign'
    args: Record<QuerySearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SearchDesignWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign | null> | prisma.SearchDesign | null
  }
  searchDesigns: {
    type: 'SearchDesign'
    args: Record<QuerySearchDesignsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SearchDesignWhereInput | null, orderBy?: prisma.SearchDesignOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign[]> | prisma.SearchDesign[]
  }
  searchDesignsConnection: {
    type: 'SearchDesignConnection'
    args: Record<QuerySearchDesignsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SearchDesignWhereInput | null, orderBy?: prisma.SearchDesignOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesignConnection> | prisma.SearchDesignConnection
  }
  sheduleTime: {
    type: 'SheduleTime'
    args: Record<QuerySheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime | null> | prisma.SheduleTime | null
  }
  sheduleTimes: {
    type: 'SheduleTime'
    args: Record<QuerySheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SheduleTimeWhereInput | null, orderBy?: prisma.SheduleTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime[]> | prisma.SheduleTime[]
  }
  sheduleTimesConnection: {
    type: 'SheduleTimeConnection'
    args: Record<QuerySheduleTimesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SheduleTimeWhereInput | null, orderBy?: prisma.SheduleTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTimeConnection> | prisma.SheduleTimeConnection
  }
  slider: {
    type: 'Slider'
    args: Record<QuerySliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SliderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider | null> | prisma.Slider | null
  }
  sliders: {
    type: 'Slider'
    args: Record<QuerySlidersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SliderWhereInput | null, orderBy?: prisma.SliderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider[]> | prisma.Slider[]
  }
  slidersConnection: {
    type: 'SliderConnection'
    args: Record<QuerySlidersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SliderWhereInput | null, orderBy?: prisma.SliderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SliderConnection> | prisma.SliderConnection
  }
  speciality: {
    type: 'Speciality'
    args: Record<QuerySpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SpecialityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  specialities: {
    type: 'Speciality'
    args: Record<QuerySpecialitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpecialityWhereInput | null, orderBy?: prisma.SpecialityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality[]> | prisma.Speciality[]
  }
  specialitiesConnection: {
    type: 'SpecialityConnection'
    args: Record<QuerySpecialitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SpecialityWhereInput | null, orderBy?: prisma.SpecialityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpecialityConnection> | prisma.SpecialityConnection
  }
  emailSubscription: {
    type: 'EmailSubscription'
    args: Record<QueryEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: EmailSubscriptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription | null> | prisma.EmailSubscription | null
  }
  emailSubscriptions: {
    type: 'EmailSubscription'
    args: Record<QueryEmailSubscriptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: EmailSubscriptionWhereInput | null, orderBy?: prisma.EmailSubscriptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription[]> | prisma.EmailSubscription[]
  }
  emailSubscriptionsConnection: {
    type: 'EmailSubscriptionConnection'
    args: Record<QueryEmailSubscriptionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: EmailSubscriptionWhereInput | null, orderBy?: prisma.EmailSubscriptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscriptionConnection> | prisma.EmailSubscriptionConnection
  }
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  videoRequest: {
    type: 'VideoRequest'
    args: Record<QueryVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: VideoRequestWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest | null> | prisma.VideoRequest | null
  }
  videoRequests: {
    type: 'VideoRequest'
    args: Record<QueryVideoRequestsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VideoRequestWhereInput | null, orderBy?: prisma.VideoRequestOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest[]> | prisma.VideoRequest[]
  }
  videoRequestsConnection: {
    type: 'VideoRequestConnection'
    args: Record<QueryVideoRequestsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VideoRequestWhereInput | null, orderBy?: prisma.VideoRequestOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequestConnection> | prisma.VideoRequestConnection
  }
  visitor: {
    type: 'Visitor'
    args: Record<QueryVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: VisitorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor | null> | prisma.Visitor | null
  }
  visitors: {
    type: 'Visitor'
    args: Record<QueryVisitorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VisitorWhereInput | null, orderBy?: prisma.VisitorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor[]> | prisma.Visitor[]
  }
  visitorsConnection: {
    type: 'VisitorConnection'
    args: Record<QueryVisitorsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VisitorWhereInput | null, orderBy?: prisma.VisitorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VisitorConnection> | prisma.VisitorConnection
  }
  translation: {
    type: 'Translation'
    args: Record<QueryTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TranslationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation | null> | prisma.Translation | null
  }
  translations: {
    type: 'Translation'
    args: Record<QueryTranslationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TranslationWhereInput | null, orderBy?: prisma.TranslationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation[]> | prisma.Translation[]
  }
  translationsConnection: {
    type: 'TranslationConnection'
    args: Record<QueryTranslationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TranslationWhereInput | null, orderBy?: prisma.TranslationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TranslationConnection> | prisma.TranslationConnection
  }
  page: {
    type: 'Page'
    args: Record<QueryPageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page | null> | prisma.Page | null
  }
  pages: {
    type: 'Page'
    args: Record<QueryPagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PageWhereInput | null, orderBy?: prisma.PageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page[]> | prisma.Page[]
  }
  pagesConnection: {
    type: 'PageConnection'
    args: Record<QueryPagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PageWhereInput | null, orderBy?: prisma.PageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageConnection> | prisma.PageConnection
  }
}
  

// Types for AboutUs

type AboutUsObject =
  | AboutUsFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabicContent', args?: [] | false, alias?: string  } 
  | { name: 'englishContent', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AboutUsFields =
  | 'id'
  | 'arabicContent'
  | 'englishContent'
  | 'createdAt'
  | 'updatedAt'



  

export interface AboutUsFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabicContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  englishContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AboutUsConnection

type AboutUsConnectionObject =
  | AboutUsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AboutUsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AboutUsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AboutUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AboutUsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AboutUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUsEdge[]> | prisma.AboutUsEdge[]
  }
  aggregate: {
    type: 'AggregateAboutUs'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AboutUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAboutUs> | prisma.AggregateAboutUs
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for AboutUsEdge

type AboutUsEdgeObject =
  | AboutUsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AboutUsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AboutUsEdgeFieldDetails {
  node: {
    type: 'AboutUs'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AboutUsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs> | prisma.AboutUs
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAboutUs

type AggregateAboutUsObject =
  | AggregateAboutUsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAboutUsFields =
  | 'count'



  

export interface AggregateAboutUsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Admin

type AdminObject =
  | AdminFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'pass', args?: [] | false, alias?: string  } 
  | { name: 'superAdmin', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AdminFields =
  | 'id'
  | 'email'
  | 'pass'
  | 'superAdmin'
  | 'user'
  | 'createdAt'
  | 'updatedAt'



  

export interface AdminFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pass: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  superAdmin: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AdminConnection

type AdminConnectionObject =
  | AdminConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AdminConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AdminConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdminConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AdminEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AdminConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdminEdge[]> | prisma.AdminEdge[]
  }
  aggregate: {
    type: 'AggregateAdmin'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdminConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAdmin> | prisma.AggregateAdmin
  }
}
  

// Types for AdminEdge

type AdminEdgeObject =
  | AdminEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AdminEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AdminEdgeFieldDetails {
  node: {
    type: 'Admin'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdminEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin> | prisma.Admin
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAdmin

type AggregateAdminObject =
  | AggregateAdminFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAdminFields =
  | 'count'



  

export interface AggregateAdminFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Appointment

type AppointmentObject =
  | AppointmentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apointmentDate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentFulldate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentTime', args?: [] | false, alias?: string  } 
  | { name: 'diseaseId', args?: [] | false, alias?: string  } 
  | { name: 'doctorArabic', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'doctorName', args?: [] | false, alias?: string  } 
  | { name: 'dtId', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'isRead', args?: [] | false, alias?: string  } 
  | { name: 'optId', args?: [] | false, alias?: string  } 
  | { name: 'patientId', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phoneCode', args?: [] | false, alias?: string  } 
  | { name: 'scheduleTimeId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type AppointmentFields =
  | 'id'
  | 'apointmentDate'
  | 'apointmentFulldate'
  | 'apointmentTime'
  | 'diseaseId'
  | 'doctorArabic'
  | 'doctorId'
  | 'doctorName'
  | 'dtId'
  | 'gender'
  | 'hospitalId'
  | 'isRead'
  | 'optId'
  | 'patientId'
  | 'phone'
  | 'phoneCode'
  | 'scheduleTimeId'
  | 'status'



  

export interface AppointmentFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentDate: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentFulldate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  diseaseId: {
    type: 'Disease'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease | null> | prisma.Disease | null
  }
  doctorArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorId: {
    type: 'Doctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  doctorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dtId: {
    type: 'DoctorSheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime | null> | prisma.DoctorSheduleTime | null
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  isRead: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  optId: {
    type: 'OptTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime | null> | prisma.OptTime | null
  }
  patientId: {
    type: 'Patient'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient | null> | prisma.Patient | null
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleTimeId: {
    type: 'SheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Appointment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime | null> | prisma.SheduleTime | null
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Disease

type DiseaseObject =
  | DiseaseFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'disease', args?: [] | false, alias?: string  } 
  | { name: 'diseaseArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DiseaseFields =
  | 'id'
  | 'disease'
  | 'diseaseArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface DiseaseFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  disease: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  diseaseArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Doctor

type DoctorObject =
  | DoctorFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'fees', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'specialityId', args?: [] | false, alias?: string  } 
  | { name: 'specialities', args?: [] | false, alias?: string  } 
  | { name: 'hospital', args?: DoctorHospitalArgs[] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 

type DoctorFields =
  | 'id'
  | 'apiKey'
  | 'designation'
  | 'doctorCv'
  | 'email'
  | 'gender'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'fees'
  | 'picture'
  | 'specialityId'
  | 'specialities'
  | 'hospital'
  | 'status'
  | 'updatedAt'
  | 'createdDate'


type DoctorHospitalArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface DoctorFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fees: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialities: {
    type: 'Speciality'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Doctor">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  hospital: {
    type: 'Hospital'
    args: Record<DoctorHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Doctor">,
      args: { where?: HospitalWhereInput | null, orderBy?: prisma.HospitalOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital[]> | prisma.Hospital[]
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Speciality

type SpecialityObject =
  | SpecialityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctors', args?: SpecialityDoctorsArgs[] | false, alias?: string  } 
  | { name: 'speciality', args?: [] | false, alias?: string  } 
  | { name: 'specialityArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SpecialityFields =
  | 'id'
  | 'doctors'
  | 'speciality'
  | 'specialityArabic'
  | 'createdAt'
  | 'updatedAt'


type SpecialityDoctorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface SpecialityFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctors: {
    type: 'Doctor'
    args: Record<SpecialityDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Speciality">,
      args: { where?: DoctorWhereInput | null, orderBy?: prisma.DoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor[]> | prisma.Doctor[]
  }
  speciality: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Hospital

type HospitalObject =
  | HospitalFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'addressArabic', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'countryId', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'hospital', args?: [] | false, alias?: string  } 
  | { name: 'hospitalArabic', args?: [] | false, alias?: string  } 
  | { name: 'doctors', args?: HospitalDoctorsArgs[] | false, alias?: string  } 
  | { name: 'language', args?: [] | false, alias?: string  } 
  | { name: 'latitude', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'logo', args?: [] | false, alias?: string  } 
  | { name: 'longitude', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phone1', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'uniqeId', args?: [] | false, alias?: string  } 
  | { name: 'insurances', args?: HospitalInsurancesArgs[] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 

type HospitalFields =
  | 'id'
  | 'address'
  | 'addressArabic'
  | 'apiKey'
  | 'city'
  | 'countryId'
  | 'email'
  | 'hospital'
  | 'hospitalArabic'
  | 'doctors'
  | 'language'
  | 'latitude'
  | 'location'
  | 'logo'
  | 'longitude'
  | 'password'
  | 'phone'
  | 'phone1'
  | 'status'
  | 'type'
  | 'uniqeId'
  | 'insurances'
  | 'updatedAt'
  | 'createdAt'
  | 'createdDate'


type HospitalDoctorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type HospitalInsurancesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface HospitalFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'City'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Hospital">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City | null> | prisma.City | null
  }
  countryId: {
    type: 'Country'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Hospital">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country | null> | prisma.Country | null
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospital: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctors: {
    type: 'Doctor'
    args: Record<HospitalDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Hospital">,
      args: { where?: DoctorWhereInput | null, orderBy?: prisma.DoctorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor[]> | prisma.Doctor[]
  }
  language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  latitude: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  longitude: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  uniqeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  insurances: {
    type: 'Insurance'
    args: Record<HospitalInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Hospital">,
      args: { where?: InsuranceWhereInput | null, orderBy?: prisma.InsuranceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance[]> | prisma.Insurance[]
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for City

type CityObject =
  | CityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'cityArabic', args?: [] | false, alias?: string  } 
  | { name: 'countryId', args?: [] | false, alias?: string  } 
  | { name: 'hospital', args?: CityHospitalArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CityFields =
  | 'id'
  | 'city'
  | 'cityArabic'
  | 'countryId'
  | 'hospital'
  | 'createdAt'
  | 'updatedAt'


type CityHospitalArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CityFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cityArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  countryId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospital: {
    type: 'Hospital'
    args: Record<CityHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"City">,
      args: { where?: HospitalWhereInput | null, orderBy?: prisma.HospitalOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital[]> | prisma.Hospital[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Country

type CountryObject =
  | CountryFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'countryArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CountryFields =
  | 'id'
  | 'country'
  | 'countryArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface CountryFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  countryArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Insurance

type InsuranceObject =
  | InsuranceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'countryId', args?: [] | false, alias?: string  } 
  | { name: 'hospitals', args?: InsuranceHospitalsArgs[] | false, alias?: string  } 
  | { name: 'insurance', args?: [] | false, alias?: string  } 
  | { name: 'insuranceArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type InsuranceFields =
  | 'id'
  | 'countryId'
  | 'hospitals'
  | 'insurance'
  | 'insuranceArabic'
  | 'createdAt'
  | 'updatedAt'


type InsuranceHospitalsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface InsuranceFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  countryId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitals: {
    type: 'Hospital'
    args: Record<InsuranceHospitalsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Insurance">,
      args: { where?: HospitalWhereInput | null, orderBy?: prisma.HospitalOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital[]> | prisma.Hospital[]
  }
  insurance: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSheduleTime

type DoctorSheduleTimeObject =
  | DoctorSheduleTimeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'drSheduleId', args?: [] | false, alias?: string  } 
  | { name: 'scheduleTime', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorSheduleTimeFields =
  | 'id'
  | 'drSheduleId'
  | 'scheduleTime'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorSheduleTimeFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  drSheduleId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleTime: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptTime

type OptTimeObject =
  | OptTimeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'fifteenMins', args?: [] | false, alias?: string  } 
  | { name: 'thirtyMins', args?: [] | false, alias?: string  } 
  | { name: 'twentyMins', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptTimeFields =
  | 'id'
  | 'fifteenMins'
  | 'thirtyMins'
  | 'twentyMins'
  | 'createdAt'
  | 'updatedAt'



  

export interface OptTimeFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fifteenMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  thirtyMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  twentyMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Patient

type PatientObject =
  | PatientFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'age', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'dob', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'lastAction', args?: [] | false, alias?: string  } 
  | { name: 'lastSeen', args?: [] | false, alias?: string  } 
  | { name: 'mailSubs', args?: [] | false, alias?: string  } 
  | { name: 'mobile', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'uniqeId', args?: [] | false, alias?: string  } 

type PatientFields =
  | 'id'
  | 'age'
  | 'apiKey'
  | 'createdDate'
  | 'dob'
  | 'email'
  | 'gender'
  | 'lastAction'
  | 'lastSeen'
  | 'mailSubs'
  | 'mobile'
  | 'name'
  | 'password'
  | 'status'
  | 'uniqeId'



  

export interface PatientFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  age: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dob: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastAction: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeen: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mailSubs: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mobile: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  uniqeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SheduleTime

type SheduleTimeObject =
  | SheduleTimeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'drSheduleId', args?: [] | false, alias?: string  } 
  | { name: 'scheduleFullDate', args?: [] | false, alias?: string  } 
  | { name: 'sheduleTime', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SheduleTimeFields =
  | 'id'
  | 'drSheduleId'
  | 'scheduleFullDate'
  | 'sheduleTime'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface SheduleTimeFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  drSheduleId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleFullDate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sheduleTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AppointmentConnection

type AppointmentConnectionObject =
  | AppointmentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AppointmentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AppointmentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AppointmentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentEdge[]> | prisma.AppointmentEdge[]
  }
  aggregate: {
    type: 'AggregateAppointment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAppointment> | prisma.AggregateAppointment
  }
}
  

// Types for AppointmentEdge

type AppointmentEdgeObject =
  | AppointmentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AppointmentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AppointmentEdgeFieldDetails {
  node: {
    type: 'Appointment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment> | prisma.Appointment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAppointment

type AggregateAppointmentObject =
  | AggregateAppointmentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAppointmentFields =
  | 'count'



  

export interface AggregateAppointmentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Blog

type BlogObject =
  | BlogFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'bannerImage', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogFields =
  | 'id'
  | 'bannerImage'
  | 'createdDate'
  | 'hospitalId'
  | 'name'
  | 'status'
  | 'updatedAt'



  

export interface BlogFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bannerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Blog">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogConnection

type BlogConnectionObject =
  | BlogConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BlogConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BlogConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BlogEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BlogConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogEdge[]> | prisma.BlogEdge[]
  }
  aggregate: {
    type: 'AggregateBlog'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBlog> | prisma.AggregateBlog
  }
}
  

// Types for BlogEdge

type BlogEdgeObject =
  | BlogEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BlogEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BlogEdgeFieldDetails {
  node: {
    type: 'Blog'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog> | prisma.Blog
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBlog

type AggregateBlogObject =
  | AggregateBlogFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBlogFields =
  | 'count'



  

export interface AggregateBlogFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BlogComment

type BlogCommentObject =
  | BlogCommentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'commentator', args?: [] | false, alias?: string  } 
  | { name: 'commentatorName', args?: [] | false, alias?: string  } 
  | { name: 'comments', args?: [] | false, alias?: string  } 
  | { name: 'logCreated', args?: [] | false, alias?: string  } 
  | { name: 'postId', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogCommentFields =
  | 'id'
  | 'commentator'
  | 'commentatorName'
  | 'comments'
  | 'logCreated'
  | 'postId'
  | 'updatedAt'



  

export interface BlogCommentFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  commentator: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  commentatorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comments: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logCreated: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postId: {
    type: 'BlogPost'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogComment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogPost

type BlogPostObject =
  | BlogPostFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'blogId', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'logCreated', args?: [] | false, alias?: string  } 
  | { name: 'postContent', args?: [] | false, alias?: string  } 
  | { name: 'postTitle', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'totalViewers', args?: [] | false, alias?: string  } 
  | { name: 'images', args?: BlogPostImagesArgs[] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogPostFields =
  | 'id'
  | 'blogId'
  | 'hospitalId'
  | 'logCreated'
  | 'postContent'
  | 'postTitle'
  | 'status'
  | 'totalViewers'
  | 'images'
  | 'updatedAt'


type BlogPostImagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface BlogPostFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  blogId: {
    type: 'Blog'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogPost">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog | null> | prisma.Blog | null
  }
  hospitalId: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogPost">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  logCreated: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postTitle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalViewers: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  images: {
    type: 'PostImage'
    args: Record<BlogPostImagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPost">,
      args: { where?: PostImageWhereInput | null, orderBy?: prisma.PostImageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage[]> | prisma.PostImage[]
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PostImage

type PostImageObject =
  | PostImageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'isDefault', args?: [] | false, alias?: string  } 
  | { name: 'pic', args?: [] | false, alias?: string  } 
  | { name: 'postId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PostImageFields =
  | 'id'
  | 'isDefault'
  | 'pic'
  | 'postId'
  | 'createdAt'
  | 'updatedAt'



  

export interface PostImageFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isDefault: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postId: {
    type: 'BlogPost'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostImage">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogCommentConnection

type BlogCommentConnectionObject =
  | BlogCommentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BlogCommentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BlogCommentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogCommentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BlogCommentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BlogCommentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogCommentEdge[]> | prisma.BlogCommentEdge[]
  }
  aggregate: {
    type: 'AggregateBlogComment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogCommentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBlogComment> | prisma.AggregateBlogComment
  }
}
  

// Types for BlogCommentEdge

type BlogCommentEdgeObject =
  | BlogCommentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BlogCommentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BlogCommentEdgeFieldDetails {
  node: {
    type: 'BlogComment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogCommentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment> | prisma.BlogComment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBlogComment

type AggregateBlogCommentObject =
  | AggregateBlogCommentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBlogCommentFields =
  | 'count'



  

export interface AggregateBlogCommentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BlogPostConnection

type BlogPostConnectionObject =
  | BlogPostConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BlogPostConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BlogPostConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BlogPostEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPostEdge[]> | prisma.BlogPostEdge[]
  }
  aggregate: {
    type: 'AggregateBlogPost'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBlogPost> | prisma.AggregateBlogPost
  }
}
  

// Types for BlogPostEdge

type BlogPostEdgeObject =
  | BlogPostEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BlogPostEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BlogPostEdgeFieldDetails {
  node: {
    type: 'BlogPost'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPostEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost> | prisma.BlogPost
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBlogPost

type AggregateBlogPostObject =
  | AggregateBlogPostFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBlogPostFields =
  | 'count'



  

export interface AggregateBlogPostFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PostImageConnection

type PostImageConnectionObject =
  | PostImageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PostImageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PostImageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostImageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PostImageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PostImageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImageEdge[]> | prisma.PostImageEdge[]
  }
  aggregate: {
    type: 'AggregatePostImage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostImageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePostImage> | prisma.AggregatePostImage
  }
}
  

// Types for PostImageEdge

type PostImageEdgeObject =
  | PostImageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PostImageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PostImageEdgeFieldDetails {
  node: {
    type: 'PostImage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostImageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage> | prisma.PostImage
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePostImage

type AggregatePostImageObject =
  | AggregatePostImageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePostImageFields =
  | 'count'



  

export interface AggregatePostImageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CityConnection

type CityConnectionObject =
  | CityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CityEdge[]> | prisma.CityEdge[]
  }
  aggregate: {
    type: 'AggregateCity'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCity> | prisma.AggregateCity
  }
}
  

// Types for CityEdge

type CityEdgeObject =
  | CityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CityEdgeFieldDetails {
  node: {
    type: 'City'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City> | prisma.City
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCity

type AggregateCityObject =
  | AggregateCityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCityFields =
  | 'count'



  

export interface AggregateCityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ContactUs

type ContactUsObject =
  | ContactUsFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'lat', args?: [] | false, alias?: string  } 
  | { name: 'lon', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'pobox', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ContactUsFields =
  | 'id'
  | 'address'
  | 'email'
  | 'lat'
  | 'lon'
  | 'phone'
  | 'pobox'
  | 'createdAt'
  | 'updatedAt'



  

export interface ContactUsFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lat: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pobox: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ContactUsConnection

type ContactUsConnectionObject =
  | ContactUsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ContactUsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ContactUsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ContactUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ContactUsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ContactUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUsEdge[]> | prisma.ContactUsEdge[]
  }
  aggregate: {
    type: 'AggregateContactUs'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ContactUsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateContactUs> | prisma.AggregateContactUs
  }
}
  

// Types for ContactUsEdge

type ContactUsEdgeObject =
  | ContactUsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ContactUsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ContactUsEdgeFieldDetails {
  node: {
    type: 'ContactUs'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ContactUsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs> | prisma.ContactUs
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateContactUs

type AggregateContactUsObject =
  | AggregateContactUsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateContactUsFields =
  | 'count'



  

export interface AggregateContactUsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CountryConnection

type CountryConnectionObject =
  | CountryConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CountryConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CountryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CountryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CountryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CountryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CountryEdge[]> | prisma.CountryEdge[]
  }
  aggregate: {
    type: 'AggregateCountry'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CountryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCountry> | prisma.AggregateCountry
  }
}
  

// Types for CountryEdge

type CountryEdgeObject =
  | CountryEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CountryEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CountryEdgeFieldDetails {
  node: {
    type: 'Country'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CountryEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country> | prisma.Country
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCountry

type AggregateCountryObject =
  | AggregateCountryFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCountryFields =
  | 'count'



  

export interface AggregateCountryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DiseaseConnection

type DiseaseConnectionObject =
  | DiseaseConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DiseaseConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DiseaseConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DiseaseEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseEdge[]> | prisma.DiseaseEdge[]
  }
  aggregate: {
    type: 'AggregateDisease'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDisease> | prisma.AggregateDisease
  }
}
  

// Types for DiseaseEdge

type DiseaseEdgeObject =
  | DiseaseEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DiseaseEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DiseaseEdgeFieldDetails {
  node: {
    type: 'Disease'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease> | prisma.Disease
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDisease

type AggregateDiseaseObject =
  | AggregateDiseaseFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDiseaseFields =
  | 'count'



  

export interface AggregateDiseaseFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DiseaseCovered

type DiseaseCoveredObject =
  | DiseaseCoveredFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'diseaseId', args?: [] | false, alias?: string  } 
  | { name: 'insuranceCatId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DiseaseCoveredFields =
  | 'id'
  | 'diseaseId'
  | 'insuranceCatId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DiseaseCoveredFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  diseaseId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceCatId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DiseaseCoveredConnection

type DiseaseCoveredConnectionObject =
  | DiseaseCoveredConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DiseaseCoveredConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DiseaseCoveredConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseCoveredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DiseaseCoveredEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseCoveredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCoveredEdge[]> | prisma.DiseaseCoveredEdge[]
  }
  aggregate: {
    type: 'AggregateDiseaseCovered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseCoveredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDiseaseCovered> | prisma.AggregateDiseaseCovered
  }
}
  

// Types for DiseaseCoveredEdge

type DiseaseCoveredEdgeObject =
  | DiseaseCoveredEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DiseaseCoveredEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DiseaseCoveredEdgeFieldDetails {
  node: {
    type: 'DiseaseCovered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseCoveredEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered> | prisma.DiseaseCovered
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDiseaseCovered

type AggregateDiseaseCoveredObject =
  | AggregateDiseaseCoveredFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDiseaseCoveredFields =
  | 'count'



  

export interface AggregateDiseaseCoveredFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorConnection

type DoctorConnectionObject =
  | DoctorConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorEdge[]> | prisma.DoctorEdge[]
  }
  aggregate: {
    type: 'AggregateDoctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctor> | prisma.AggregateDoctor
  }
}
  

// Types for DoctorEdge

type DoctorEdgeObject =
  | DoctorEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorEdgeFieldDetails {
  node: {
    type: 'Doctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor> | prisma.Doctor
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctor

type AggregateDoctorObject =
  | AggregateDoctorFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorFields =
  | 'count'



  

export interface AggregateDoctorFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorOld

type DoctorOldObject =
  | DoctorOldFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'doctorsRating', args?: DoctorOldDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'fees', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'speciality', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorOldFields =
  | 'id'
  | 'apiKey'
  | 'createdDate'
  | 'designation'
  | 'doctorCv'
  | 'doctorsRating'
  | 'email'
  | 'gender'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'fees'
  | 'picture'
  | 'speciality'
  | 'status'
  | 'updatedAt'


type DoctorOldDoctorsRatingArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface DoctorOldFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorsRating: {
    type: 'DoctorsRating'
    args: Record<DoctorOldDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOld">,
      args: { where?: DoctorsRatingWhereInput | null, orderBy?: prisma.DoctorsRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating[]> | prisma.DoctorsRating[]
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fees: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  speciality: {
    type: 'Speciality'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorOld">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorsRating

type DoctorsRatingObject =
  | DoctorsRatingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctors', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'systemIp', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorsRatingFields =
  | 'id'
  | 'doctors'
  | 'rating'
  | 'systemIp'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorsRatingFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctors: {
    type: 'DoctorOld'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorsRating">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld | null> | prisma.DoctorOld | null
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  systemIp: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorOldConnection

type DoctorOldConnectionObject =
  | DoctorOldConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorOldConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorOldConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOldConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorOldEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOldConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOldEdge[]> | prisma.DoctorOldEdge[]
  }
  aggregate: {
    type: 'AggregateDoctorOld'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOldConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctorOld> | prisma.AggregateDoctorOld
  }
}
  

// Types for DoctorOldEdge

type DoctorOldEdgeObject =
  | DoctorOldEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorOldEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorOldEdgeFieldDetails {
  node: {
    type: 'DoctorOld'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOldEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld> | prisma.DoctorOld
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctorOld

type AggregateDoctorOldObject =
  | AggregateDoctorOldFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorOldFields =
  | 'count'



  

export interface AggregateDoctorOldFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorShedule

type DoctorSheduleObject =
  | DoctorSheduleFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorSheduleFields =
  | 'id'
  | 'date'
  | 'doctorId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorSheduleFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  date: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSheduleConnection

type DoctorSheduleConnectionObject =
  | DoctorSheduleConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorSheduleConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorSheduleConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorSheduleEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleEdge[]> | prisma.DoctorSheduleEdge[]
  }
  aggregate: {
    type: 'AggregateDoctorShedule'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctorShedule> | prisma.AggregateDoctorShedule
  }
}
  

// Types for DoctorSheduleEdge

type DoctorSheduleEdgeObject =
  | DoctorSheduleEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorSheduleEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorSheduleEdgeFieldDetails {
  node: {
    type: 'DoctorShedule'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule> | prisma.DoctorShedule
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctorShedule

type AggregateDoctorSheduleObject =
  | AggregateDoctorSheduleFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorSheduleFields =
  | 'count'



  

export interface AggregateDoctorSheduleFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSheduleTimeConnection

type DoctorSheduleTimeConnectionObject =
  | DoctorSheduleTimeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorSheduleTimeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorSheduleTimeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorSheduleTimeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTimeEdge[]> | prisma.DoctorSheduleTimeEdge[]
  }
  aggregate: {
    type: 'AggregateDoctorSheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctorSheduleTime> | prisma.AggregateDoctorSheduleTime
  }
}
  

// Types for DoctorSheduleTimeEdge

type DoctorSheduleTimeEdgeObject =
  | DoctorSheduleTimeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorSheduleTimeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorSheduleTimeEdgeFieldDetails {
  node: {
    type: 'DoctorSheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime> | prisma.DoctorSheduleTime
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctorSheduleTime

type AggregateDoctorSheduleTimeObject =
  | AggregateDoctorSheduleTimeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorSheduleTimeFields =
  | 'count'



  

export interface AggregateDoctorSheduleTimeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSpeciality

type DoctorSpecialityObject =
  | DoctorSpecialityFields
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'specialityId', args?: [] | false, alias?: string  } 

type DoctorSpecialityFields =
  | 'doctorId'
  | 'specialityId'



  

export interface DoctorSpecialityFieldDetails {
  doctorId: {
    type: 'Doctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSpeciality">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  specialityId: {
    type: 'Speciality'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSpeciality">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
}
  

// Types for DoctorSpecialityConnection

type DoctorSpecialityConnectionObject =
  | DoctorSpecialityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorSpecialityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorSpecialityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorSpecialityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpecialityEdge[]> | prisma.DoctorSpecialityEdge[]
  }
  aggregate: {
    type: 'AggregateDoctorSpeciality'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctorSpeciality> | prisma.AggregateDoctorSpeciality
  }
}
  

// Types for DoctorSpecialityEdge

type DoctorSpecialityEdgeObject =
  | DoctorSpecialityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorSpecialityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorSpecialityEdgeFieldDetails {
  node: {
    type: 'DoctorSpeciality'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSpecialityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpeciality> | prisma.DoctorSpeciality
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctorSpeciality

type AggregateDoctorSpecialityObject =
  | AggregateDoctorSpecialityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorSpecialityFields =
  | 'count'



  

export interface AggregateDoctorSpecialityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorsRatingConnection

type DoctorsRatingConnectionObject =
  | DoctorsRatingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DoctorsRatingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DoctorsRatingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorsRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DoctorsRatingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorsRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRatingEdge[]> | prisma.DoctorsRatingEdge[]
  }
  aggregate: {
    type: 'AggregateDoctorsRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorsRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDoctorsRating> | prisma.AggregateDoctorsRating
  }
}
  

// Types for DoctorsRatingEdge

type DoctorsRatingEdgeObject =
  | DoctorsRatingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DoctorsRatingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DoctorsRatingEdgeFieldDetails {
  node: {
    type: 'DoctorsRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorsRatingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating> | prisma.DoctorsRating
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDoctorsRating

type AggregateDoctorsRatingObject =
  | AggregateDoctorsRatingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDoctorsRatingFields =
  | 'count'



  

export interface AggregateDoctorsRatingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DrShedule

type DrSheduleObject =
  | DrSheduleFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DrSheduleFields =
  | 'id'
  | 'date'
  | 'doctorId'
  | 'hospitalId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DrSheduleFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DrSheduleConnection

type DrSheduleConnectionObject =
  | DrSheduleConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DrSheduleConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DrSheduleConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DrSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DrSheduleEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DrSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrSheduleEdge[]> | prisma.DrSheduleEdge[]
  }
  aggregate: {
    type: 'AggregateDrShedule'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DrSheduleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDrShedule> | prisma.AggregateDrShedule
  }
}
  

// Types for DrSheduleEdge

type DrSheduleEdgeObject =
  | DrSheduleEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DrSheduleEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DrSheduleEdgeFieldDetails {
  node: {
    type: 'DrShedule'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DrSheduleEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule> | prisma.DrShedule
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDrShedule

type AggregateDrSheduleObject =
  | AggregateDrSheduleFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDrSheduleFields =
  | 'count'



  

export interface AggregateDrSheduleFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Facility

type FacilityObject =
  | FacilityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'facility', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type FacilityFields =
  | 'id'
  | 'facility'
  | 'createdAt'
  | 'updatedAt'



  

export interface FacilityFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  facility: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for FacilityConnection

type FacilityConnectionObject =
  | FacilityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type FacilityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface FacilityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'FacilityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"FacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FacilityEdge[]> | prisma.FacilityEdge[]
  }
  aggregate: {
    type: 'AggregateFacility'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateFacility> | prisma.AggregateFacility
  }
}
  

// Types for FacilityEdge

type FacilityEdgeObject =
  | FacilityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type FacilityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface FacilityEdgeFieldDetails {
  node: {
    type: 'Facility'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FacilityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility> | prisma.Facility
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateFacility

type AggregateFacilityObject =
  | AggregateFacilityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateFacilityFields =
  | 'count'



  

export interface AggregateFacilityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalConnection

type HospitalConnectionObject =
  | HospitalConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type HospitalConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface HospitalConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'HospitalEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalEdge[]> | prisma.HospitalEdge[]
  }
  aggregate: {
    type: 'AggregateHospital'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateHospital> | prisma.AggregateHospital
  }
}
  

// Types for HospitalEdge

type HospitalEdgeObject =
  | HospitalEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type HospitalEdgeFields =
  | 'node'
  | 'cursor'



  

export interface HospitalEdgeFieldDetails {
  node: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital> | prisma.Hospital
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateHospital

type AggregateHospitalObject =
  | AggregateHospitalFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateHospitalFields =
  | 'count'



  

export interface AggregateHospitalFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalDoctor

type HospitalDoctorObject =
  | HospitalDoctorFields
  | { name: 'dr', args?: [] | false, alias?: string  } 
  | { name: 'hospital', args?: [] | false, alias?: string  } 

type HospitalDoctorFields =
  | 'dr'
  | 'hospital'



  

export interface HospitalDoctorFieldDetails {
  dr: {
    type: 'Doctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalDoctor">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  hospital: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalDoctor">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
}
  

// Types for HospitalDoctorConnection

type HospitalDoctorConnectionObject =
  | HospitalDoctorConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type HospitalDoctorConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface HospitalDoctorConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'HospitalDoctorEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctorEdge[]> | prisma.HospitalDoctorEdge[]
  }
  aggregate: {
    type: 'AggregateHospitalDoctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateHospitalDoctor> | prisma.AggregateHospitalDoctor
  }
}
  

// Types for HospitalDoctorEdge

type HospitalDoctorEdgeObject =
  | HospitalDoctorEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type HospitalDoctorEdgeFields =
  | 'node'
  | 'cursor'



  

export interface HospitalDoctorEdgeFieldDetails {
  node: {
    type: 'HospitalDoctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalDoctorEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctor> | prisma.HospitalDoctor
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateHospitalDoctor

type AggregateHospitalDoctorObject =
  | AggregateHospitalDoctorFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateHospitalDoctorFields =
  | 'count'



  

export interface AggregateHospitalDoctorFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalFacility

type HospitalFacilityObject =
  | HospitalFacilityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'facilityId', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type HospitalFacilityFields =
  | 'id'
  | 'facilityId'
  | 'hospitalId'
  | 'createdAt'
  | 'updatedAt'



  

export interface HospitalFacilityFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  facilityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalFacilityConnection

type HospitalFacilityConnectionObject =
  | HospitalFacilityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type HospitalFacilityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface HospitalFacilityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalFacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'HospitalFacilityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalFacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacilityEdge[]> | prisma.HospitalFacilityEdge[]
  }
  aggregate: {
    type: 'AggregateHospitalFacility'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalFacilityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateHospitalFacility> | prisma.AggregateHospitalFacility
  }
}
  

// Types for HospitalFacilityEdge

type HospitalFacilityEdgeObject =
  | HospitalFacilityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type HospitalFacilityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface HospitalFacilityEdgeFieldDetails {
  node: {
    type: 'HospitalFacility'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalFacilityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility> | prisma.HospitalFacility
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateHospitalFacility

type AggregateHospitalFacilityObject =
  | AggregateHospitalFacilityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateHospitalFacilityFields =
  | 'count'



  

export interface AggregateHospitalFacilityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalInsurance

type HospitalInsuranceObject =
  | HospitalInsuranceFields
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'insurance', args?: [] | false, alias?: string  } 

type HospitalInsuranceFields =
  | 'hospitalId'
  | 'insurance'



  

export interface HospitalInsuranceFieldDetails {
  hospitalId: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalInsurance">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  insurance: {
    type: 'Insurance'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalInsurance">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance | null> | prisma.Insurance | null
  }
}
  

// Types for HospitalInsuranceConnection

type HospitalInsuranceConnectionObject =
  | HospitalInsuranceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type HospitalInsuranceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface HospitalInsuranceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalInsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'HospitalInsuranceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalInsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsuranceEdge[]> | prisma.HospitalInsuranceEdge[]
  }
  aggregate: {
    type: 'AggregateHospitalInsurance'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalInsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateHospitalInsurance> | prisma.AggregateHospitalInsurance
  }
}
  

// Types for HospitalInsuranceEdge

type HospitalInsuranceEdgeObject =
  | HospitalInsuranceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type HospitalInsuranceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface HospitalInsuranceEdgeFieldDetails {
  node: {
    type: 'HospitalInsurance'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalInsuranceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsurance> | prisma.HospitalInsurance
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateHospitalInsurance

type AggregateHospitalInsuranceObject =
  | AggregateHospitalInsuranceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateHospitalInsuranceFields =
  | 'count'



  

export interface AggregateHospitalInsuranceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalRating

type HospitalRatingObject =
  | HospitalRatingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type HospitalRatingFields =
  | 'id'
  | 'hospitalId'
  | 'rating'
  | 'createdAt'
  | 'updatedAt'



  

export interface HospitalRatingFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalRatingConnection

type HospitalRatingConnectionObject =
  | HospitalRatingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type HospitalRatingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface HospitalRatingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'HospitalRatingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRatingEdge[]> | prisma.HospitalRatingEdge[]
  }
  aggregate: {
    type: 'AggregateHospitalRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateHospitalRating> | prisma.AggregateHospitalRating
  }
}
  

// Types for HospitalRatingEdge

type HospitalRatingEdgeObject =
  | HospitalRatingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type HospitalRatingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface HospitalRatingEdgeFieldDetails {
  node: {
    type: 'HospitalRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalRatingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating> | prisma.HospitalRating
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateHospitalRating

type AggregateHospitalRatingObject =
  | AggregateHospitalRatingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateHospitalRatingFields =
  | 'count'



  

export interface AggregateHospitalRatingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Illness

type IllnessObject =
  | IllnessFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'illness', args?: [] | false, alias?: string  } 
  | { name: 'illnessArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type IllnessFields =
  | 'id'
  | 'illness'
  | 'illnessArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface IllnessFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  illness: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  illnessArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for IllnessConnection

type IllnessConnectionObject =
  | IllnessConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type IllnessConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface IllnessConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"IllnessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'IllnessEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"IllnessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.IllnessEdge[]> | prisma.IllnessEdge[]
  }
  aggregate: {
    type: 'AggregateIllness'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"IllnessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateIllness> | prisma.AggregateIllness
  }
}
  

// Types for IllnessEdge

type IllnessEdgeObject =
  | IllnessEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type IllnessEdgeFields =
  | 'node'
  | 'cursor'



  

export interface IllnessEdgeFieldDetails {
  node: {
    type: 'Illness'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"IllnessEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness> | prisma.Illness
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateIllness

type AggregateIllnessObject =
  | AggregateIllnessFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateIllnessFields =
  | 'count'



  

export interface AggregateIllnessFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InsuranceConnection

type InsuranceConnectionObject =
  | InsuranceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type InsuranceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface InsuranceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'InsuranceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceEdge[]> | prisma.InsuranceEdge[]
  }
  aggregate: {
    type: 'AggregateInsurance'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateInsurance> | prisma.AggregateInsurance
  }
}
  

// Types for InsuranceEdge

type InsuranceEdgeObject =
  | InsuranceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type InsuranceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface InsuranceEdgeFieldDetails {
  node: {
    type: 'Insurance'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance> | prisma.Insurance
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateInsurance

type AggregateInsuranceObject =
  | AggregateInsuranceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateInsuranceFields =
  | 'count'



  

export interface AggregateInsuranceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InsuranceCategory

type InsuranceCategoryObject =
  | InsuranceCategoryFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'insuranceId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type InsuranceCategoryFields =
  | 'id'
  | 'category'
  | 'insuranceId'
  | 'createdAt'
  | 'updatedAt'



  

export interface InsuranceCategoryFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  category: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InsuranceCategoryConnection

type InsuranceCategoryConnectionObject =
  | InsuranceCategoryConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type InsuranceCategoryConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface InsuranceCategoryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'InsuranceCategoryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategoryEdge[]> | prisma.InsuranceCategoryEdge[]
  }
  aggregate: {
    type: 'AggregateInsuranceCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateInsuranceCategory> | prisma.AggregateInsuranceCategory
  }
}
  

// Types for InsuranceCategoryEdge

type InsuranceCategoryEdgeObject =
  | InsuranceCategoryEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type InsuranceCategoryEdgeFields =
  | 'node'
  | 'cursor'



  

export interface InsuranceCategoryEdgeFieldDetails {
  node: {
    type: 'InsuranceCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceCategoryEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory> | prisma.InsuranceCategory
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateInsuranceCategory

type AggregateInsuranceCategoryObject =
  | AggregateInsuranceCategoryFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateInsuranceCategoryFields =
  | 'count'



  

export interface AggregateInsuranceCategoryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Job

type JobObject =
  | JobFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'position', args?: [] | false, alias?: string  } 
  | { name: 'positionArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type JobFields =
  | 'id'
  | 'position'
  | 'positionArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface JobFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  position: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  positionArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for JobConnection

type JobConnectionObject =
  | JobConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type JobConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface JobConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"JobConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'JobEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"JobConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.JobEdge[]> | prisma.JobEdge[]
  }
  aggregate: {
    type: 'AggregateJob'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"JobConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateJob> | prisma.AggregateJob
  }
}
  

// Types for JobEdge

type JobEdgeObject =
  | JobEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type JobEdgeFields =
  | 'node'
  | 'cursor'



  

export interface JobEdgeFieldDetails {
  node: {
    type: 'Job'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"JobEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job> | prisma.Job
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateJob

type AggregateJobObject =
  | AggregateJobFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateJobFields =
  | 'count'



  

export interface AggregateJobFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Language

type LanguageObject =
  | LanguageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'language', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type LanguageFields =
  | 'id'
  | 'language'
  | 'createdAt'
  | 'updatedAt'



  

export interface LanguageFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LanguageConnection

type LanguageConnectionObject =
  | LanguageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type LanguageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface LanguageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LanguageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'LanguageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"LanguageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LanguageEdge[]> | prisma.LanguageEdge[]
  }
  aggregate: {
    type: 'AggregateLanguage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LanguageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateLanguage> | prisma.AggregateLanguage
  }
}
  

// Types for LanguageEdge

type LanguageEdgeObject =
  | LanguageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type LanguageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface LanguageEdgeFieldDetails {
  node: {
    type: 'Language'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LanguageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language> | prisma.Language
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateLanguage

type AggregateLanguageObject =
  | AggregateLanguageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateLanguageFields =
  | 'count'



  

export interface AggregateLanguageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Message

type MessageObject =
  | MessageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'fromUser', args?: [] | false, alias?: string  } 
  | { name: 'isDelete', args?: [] | false, alias?: string  } 
  | { name: 'isRead', args?: [] | false, alias?: string  } 
  | { name: 'logCreate', args?: [] | false, alias?: string  } 
  | { name: 'message', args?: [] | false, alias?: string  } 
  | { name: 'sentBy', args?: [] | false, alias?: string  } 
  | { name: 'toUser', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MessageFields =
  | 'id'
  | 'fromUser'
  | 'isDelete'
  | 'isRead'
  | 'logCreate'
  | 'message'
  | 'sentBy'
  | 'toUser'
  | 'updatedAt'



  

export interface MessageFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fromUser: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isDelete: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isRead: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logCreate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  message: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sentBy: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  toUser: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MessageConnection

type MessageConnectionObject =
  | MessageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MessageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MessageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MessageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageEdge[]> | prisma.MessageEdge[]
  }
  aggregate: {
    type: 'AggregateMessage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMessage> | prisma.AggregateMessage
  }
}
  

// Types for MessageEdge

type MessageEdgeObject =
  | MessageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MessageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MessageEdgeFieldDetails {
  node: {
    type: 'Message'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMessage

type AggregateMessageObject =
  | AggregateMessageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMessageFields =
  | 'count'



  

export interface AggregateMessageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Migration

type MigrationObject =
  | MigrationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'batch', args?: [] | false, alias?: string  } 
  | { name: 'migration', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MigrationFields =
  | 'id'
  | 'batch'
  | 'migration'
  | 'createdAt'
  | 'updatedAt'



  

export interface MigrationFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  batch: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  migration: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MigrationConnection

type MigrationConnectionObject =
  | MigrationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MigrationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MigrationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MigrationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MigrationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MigrationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MigrationEdge[]> | prisma.MigrationEdge[]
  }
  aggregate: {
    type: 'AggregateMigration'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MigrationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMigration> | prisma.AggregateMigration
  }
}
  

// Types for MigrationEdge

type MigrationEdgeObject =
  | MigrationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MigrationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MigrationEdgeFieldDetails {
  node: {
    type: 'Migration'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MigrationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration> | prisma.Migration
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMigration

type AggregateMigrationObject =
  | AggregateMigrationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMigrationFields =
  | 'count'



  

export interface AggregateMigrationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Offer

type OfferObject =
  | OfferFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'descriptionArabic', args?: [] | false, alias?: string  } 
  | { name: 'endDate', args?: [] | false, alias?: string  } 
  | { name: 'heading', args?: [] | false, alias?: string  } 
  | { name: 'headingArabic', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'offerImage', args?: [] | false, alias?: string  } 
  | { name: 'position', args?: [] | false, alias?: string  } 
  | { name: 'startDate', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OfferFields =
  | 'id'
  | 'description'
  | 'descriptionArabic'
  | 'endDate'
  | 'heading'
  | 'headingArabic'
  | 'hospitalId'
  | 'offerImage'
  | 'position'
  | 'startDate'
  | 'status'
  | 'type'
  | 'createdAt'
  | 'updatedAt'



  

export interface OfferFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  descriptionArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  endDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  heading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  headingArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  offerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  position: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OfferConnection

type OfferConnectionObject =
  | OfferConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OfferConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OfferConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OfferEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferEdge[]> | prisma.OfferEdge[]
  }
  aggregate: {
    type: 'AggregateOffer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOffer> | prisma.AggregateOffer
  }
}
  

// Types for OfferEdge

type OfferEdgeObject =
  | OfferEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OfferEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OfferEdgeFieldDetails {
  node: {
    type: 'Offer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOffer

type AggregateOfferObject =
  | AggregateOfferFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOfferFields =
  | 'count'



  

export interface AggregateOfferFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineAppointment

type OnlineAppointmentObject =
  | OnlineAppointmentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apointmentDate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentFulldate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentTime', args?: [] | false, alias?: string  } 
  | { name: 'diseaseId', args?: [] | false, alias?: string  } 
  | { name: 'doctorArabic', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'doctorName', args?: [] | false, alias?: string  } 
  | { name: 'dtId', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'optId', args?: [] | false, alias?: string  } 
  | { name: 'patientId', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phoneCode', args?: [] | false, alias?: string  } 
  | { name: 'scheduleTimeId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OnlineAppointmentFields =
  | 'id'
  | 'apointmentDate'
  | 'apointmentFulldate'
  | 'apointmentTime'
  | 'diseaseId'
  | 'doctorArabic'
  | 'doctorId'
  | 'doctorName'
  | 'dtId'
  | 'gender'
  | 'optId'
  | 'patientId'
  | 'phone'
  | 'phoneCode'
  | 'scheduleTimeId'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface OnlineAppointmentFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentDate: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentFulldate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  diseaseId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dtId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  optId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  patientId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleTimeId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineAppointmentConnection

type OnlineAppointmentConnectionObject =
  | OnlineAppointmentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OnlineAppointmentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OnlineAppointmentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineAppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OnlineAppointmentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineAppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointmentEdge[]> | prisma.OnlineAppointmentEdge[]
  }
  aggregate: {
    type: 'AggregateOnlineAppointment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineAppointmentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOnlineAppointment> | prisma.AggregateOnlineAppointment
  }
}
  

// Types for OnlineAppointmentEdge

type OnlineAppointmentEdgeObject =
  | OnlineAppointmentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OnlineAppointmentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OnlineAppointmentEdgeFieldDetails {
  node: {
    type: 'OnlineAppointment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineAppointmentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment> | prisma.OnlineAppointment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOnlineAppointment

type AggregateOnlineAppointmentObject =
  | AggregateOnlineAppointmentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOnlineAppointmentFields =
  | 'count'



  

export interface AggregateOnlineAppointmentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineDoctor

type OnlineDoctorObject =
  | OnlineDoctorFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'lastSeen', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'specialityId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type OnlineDoctorFields =
  | 'id'
  | 'apiKey'
  | 'createdDate'
  | 'designation'
  | 'doctorCv'
  | 'email'
  | 'gender'
  | 'lastSeen'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'picture'
  | 'specialityId'
  | 'status'



  

export interface OnlineDoctorFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeen: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OnlineDoctorConnection

type OnlineDoctorConnectionObject =
  | OnlineDoctorConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OnlineDoctorConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OnlineDoctorConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OnlineDoctorEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctorEdge[]> | prisma.OnlineDoctorEdge[]
  }
  aggregate: {
    type: 'AggregateOnlineDoctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineDoctorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOnlineDoctor> | prisma.AggregateOnlineDoctor
  }
}
  

// Types for OnlineDoctorEdge

type OnlineDoctorEdgeObject =
  | OnlineDoctorEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OnlineDoctorEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OnlineDoctorEdgeFieldDetails {
  node: {
    type: 'OnlineDoctor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineDoctorEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor> | prisma.OnlineDoctor
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOnlineDoctor

type AggregateOnlineDoctorObject =
  | AggregateOnlineDoctorFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOnlineDoctorFields =
  | 'count'



  

export interface AggregateOnlineDoctorFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineRating

type OnlineRatingObject =
  | OnlineRatingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctorsId', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'systemIp', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OnlineRatingFields =
  | 'id'
  | 'doctorsId'
  | 'rating'
  | 'systemIp'
  | 'createdAt'
  | 'updatedAt'



  

export interface OnlineRatingFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorsId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  systemIp: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineRatingConnection

type OnlineRatingConnectionObject =
  | OnlineRatingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OnlineRatingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OnlineRatingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OnlineRatingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRatingEdge[]> | prisma.OnlineRatingEdge[]
  }
  aggregate: {
    type: 'AggregateOnlineRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOnlineRating> | prisma.AggregateOnlineRating
  }
}
  

// Types for OnlineRatingEdge

type OnlineRatingEdgeObject =
  | OnlineRatingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OnlineRatingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OnlineRatingEdgeFieldDetails {
  node: {
    type: 'OnlineRating'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineRatingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating> | prisma.OnlineRating
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOnlineRating

type AggregateOnlineRatingObject =
  | AggregateOnlineRatingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOnlineRatingFields =
  | 'count'



  

export interface AggregateOnlineRatingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptTimeConnection

type OptTimeConnectionObject =
  | OptTimeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OptTimeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OptTimeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OptTimeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OptTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTimeEdge[]> | prisma.OptTimeEdge[]
  }
  aggregate: {
    type: 'AggregateOptTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOptTime> | prisma.AggregateOptTime
  }
}
  

// Types for OptTimeEdge

type OptTimeEdgeObject =
  | OptTimeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OptTimeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OptTimeEdgeFieldDetails {
  node: {
    type: 'OptTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptTimeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime> | prisma.OptTime
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOptTime

type AggregateOptTimeObject =
  | AggregateOptTimeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOptTimeFields =
  | 'count'



  

export interface AggregateOptTimeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PasswordReset

type PasswordResetObject =
  | PasswordResetFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PasswordResetFields =
  | 'id'
  | 'createdAt'
  | 'email'
  | 'token'
  | 'updatedAt'



  

export interface PasswordResetFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PasswordResetConnection

type PasswordResetConnectionObject =
  | PasswordResetConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PasswordResetConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PasswordResetConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PasswordResetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PasswordResetEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PasswordResetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordResetEdge[]> | prisma.PasswordResetEdge[]
  }
  aggregate: {
    type: 'AggregatePasswordReset'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PasswordResetConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePasswordReset> | prisma.AggregatePasswordReset
  }
}
  

// Types for PasswordResetEdge

type PasswordResetEdgeObject =
  | PasswordResetEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PasswordResetEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PasswordResetEdgeFieldDetails {
  node: {
    type: 'PasswordReset'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PasswordResetEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset> | prisma.PasswordReset
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePasswordReset

type AggregatePasswordResetObject =
  | AggregatePasswordResetFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePasswordResetFields =
  | 'count'



  

export interface AggregatePasswordResetFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PatientConnection

type PatientConnectionObject =
  | PatientConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PatientConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PatientConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PatientConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PatientEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PatientConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PatientEdge[]> | prisma.PatientEdge[]
  }
  aggregate: {
    type: 'AggregatePatient'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PatientConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePatient> | prisma.AggregatePatient
  }
}
  

// Types for PatientEdge

type PatientEdgeObject =
  | PatientEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PatientEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PatientEdgeFieldDetails {
  node: {
    type: 'Patient'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PatientEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient> | prisma.Patient
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePatient

type AggregatePatientObject =
  | AggregatePatientFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePatientFields =
  | 'count'



  

export interface AggregatePatientFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SearchDesign

type SearchDesignObject =
  | SearchDesignFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'addressColor', args?: [] | false, alias?: string  } 
  | { name: 'addressFamily', args?: [] | false, alias?: string  } 
  | { name: 'addressStyle', args?: [] | false, alias?: string  } 
  | { name: 'designationColor', args?: [] | false, alias?: string  } 
  | { name: 'designationFamily', args?: [] | false, alias?: string  } 
  | { name: 'designationStyle', args?: [] | false, alias?: string  } 
  | { name: 'doctorColor', args?: [] | false, alias?: string  } 
  | { name: 'doctorFamily', args?: [] | false, alias?: string  } 
  | { name: 'doctorStyle', args?: [] | false, alias?: string  } 
  | { name: 'emailColor', args?: [] | false, alias?: string  } 
  | { name: 'emailFamily', args?: [] | false, alias?: string  } 
  | { name: 'emailStyle', args?: [] | false, alias?: string  } 
  | { name: 'nameColor', args?: [] | false, alias?: string  } 
  | { name: 'nameFamily', args?: [] | false, alias?: string  } 
  | { name: 'nameStyle', args?: [] | false, alias?: string  } 
  | { name: 'phoneColor', args?: [] | false, alias?: string  } 
  | { name: 'phoneFamily', args?: [] | false, alias?: string  } 
  | { name: 'phoneStyle', args?: [] | false, alias?: string  } 
  | { name: 'ratingColor', args?: [] | false, alias?: string  } 
  | { name: 'ratingFamily', args?: [] | false, alias?: string  } 
  | { name: 'ratingStyle', args?: [] | false, alias?: string  } 
  | { name: 'specialityColor', args?: [] | false, alias?: string  } 
  | { name: 'specialityFamily', args?: [] | false, alias?: string  } 
  | { name: 'specialityStyle', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SearchDesignFields =
  | 'id'
  | 'addressColor'
  | 'addressFamily'
  | 'addressStyle'
  | 'designationColor'
  | 'designationFamily'
  | 'designationStyle'
  | 'doctorColor'
  | 'doctorFamily'
  | 'doctorStyle'
  | 'emailColor'
  | 'emailFamily'
  | 'emailStyle'
  | 'nameColor'
  | 'nameFamily'
  | 'nameStyle'
  | 'phoneColor'
  | 'phoneFamily'
  | 'phoneStyle'
  | 'ratingColor'
  | 'ratingFamily'
  | 'ratingStyle'
  | 'specialityColor'
  | 'specialityFamily'
  | 'specialityStyle'
  | 'createdAt'
  | 'updatedAt'



  

export interface SearchDesignFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SearchDesignConnection

type SearchDesignConnectionObject =
  | SearchDesignConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SearchDesignConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SearchDesignConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SearchDesignConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SearchDesignEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SearchDesignConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesignEdge[]> | prisma.SearchDesignEdge[]
  }
  aggregate: {
    type: 'AggregateSearchDesign'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SearchDesignConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSearchDesign> | prisma.AggregateSearchDesign
  }
}
  

// Types for SearchDesignEdge

type SearchDesignEdgeObject =
  | SearchDesignEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SearchDesignEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SearchDesignEdgeFieldDetails {
  node: {
    type: 'SearchDesign'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SearchDesignEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign> | prisma.SearchDesign
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSearchDesign

type AggregateSearchDesignObject =
  | AggregateSearchDesignFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSearchDesignFields =
  | 'count'



  

export interface AggregateSearchDesignFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SheduleTimeConnection

type SheduleTimeConnectionObject =
  | SheduleTimeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SheduleTimeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SheduleTimeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SheduleTimeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTimeEdge[]> | prisma.SheduleTimeEdge[]
  }
  aggregate: {
    type: 'AggregateSheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SheduleTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSheduleTime> | prisma.AggregateSheduleTime
  }
}
  

// Types for SheduleTimeEdge

type SheduleTimeEdgeObject =
  | SheduleTimeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SheduleTimeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SheduleTimeEdgeFieldDetails {
  node: {
    type: 'SheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SheduleTimeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime> | prisma.SheduleTime
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSheduleTime

type AggregateSheduleTimeObject =
  | AggregateSheduleTimeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSheduleTimeFields =
  | 'count'



  

export interface AggregateSheduleTimeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Slider

type SliderObject =
  | SliderFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabicHeading', args?: [] | false, alias?: string  } 
  | { name: 'banner', args?: [] | false, alias?: string  } 
  | { name: 'heading', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SliderFields =
  | 'id'
  | 'arabicHeading'
  | 'banner'
  | 'heading'
  | 'createdAt'
  | 'updatedAt'



  

export interface SliderFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabicHeading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  banner: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  heading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SliderConnection

type SliderConnectionObject =
  | SliderConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SliderConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SliderConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SliderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SliderEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SliderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SliderEdge[]> | prisma.SliderEdge[]
  }
  aggregate: {
    type: 'AggregateSlider'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SliderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSlider> | prisma.AggregateSlider
  }
}
  

// Types for SliderEdge

type SliderEdgeObject =
  | SliderEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SliderEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SliderEdgeFieldDetails {
  node: {
    type: 'Slider'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SliderEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider> | prisma.Slider
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSlider

type AggregateSliderObject =
  | AggregateSliderFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSliderFields =
  | 'count'



  

export interface AggregateSliderFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SpecialityConnection

type SpecialityConnectionObject =
  | SpecialityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SpecialityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SpecialityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SpecialityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpecialityEdge[]> | prisma.SpecialityEdge[]
  }
  aggregate: {
    type: 'AggregateSpeciality'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpecialityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSpeciality> | prisma.AggregateSpeciality
  }
}
  

// Types for SpecialityEdge

type SpecialityEdgeObject =
  | SpecialityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SpecialityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SpecialityEdgeFieldDetails {
  node: {
    type: 'Speciality'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpecialityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality> | prisma.Speciality
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSpeciality

type AggregateSpecialityObject =
  | AggregateSpecialityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSpecialityFields =
  | 'count'



  

export interface AggregateSpecialityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for EmailSubscription

type EmailSubscriptionObject =
  | EmailSubscriptionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type EmailSubscriptionFields =
  | 'id'
  | 'email'
  | 'createdAt'
  | 'updatedAt'



  

export interface EmailSubscriptionFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for EmailSubscriptionConnection

type EmailSubscriptionConnectionObject =
  | EmailSubscriptionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type EmailSubscriptionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface EmailSubscriptionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"EmailSubscriptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'EmailSubscriptionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"EmailSubscriptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscriptionEdge[]> | prisma.EmailSubscriptionEdge[]
  }
  aggregate: {
    type: 'AggregateEmailSubscription'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"EmailSubscriptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateEmailSubscription> | prisma.AggregateEmailSubscription
  }
}
  

// Types for EmailSubscriptionEdge

type EmailSubscriptionEdgeObject =
  | EmailSubscriptionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type EmailSubscriptionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface EmailSubscriptionEdgeFieldDetails {
  node: {
    type: 'EmailSubscription'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"EmailSubscriptionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription> | prisma.EmailSubscription
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateEmailSubscription

type AggregateEmailSubscriptionObject =
  | AggregateEmailSubscriptionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateEmailSubscriptionFields =
  | 'count'



  

export interface AggregateEmailSubscriptionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'rememberToken', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'createdAt'
  | 'email'
  | 'name'
  | 'password'
  | 'rememberToken'
  | 'updatedAt'



  

export interface UserFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rememberToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for VideoRequest

type VideoRequestObject =
  | VideoRequestFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'joinCall', args?: [] | false, alias?: string  } 
  | { name: 'patientId', args?: [] | false, alias?: string  } 
  | { name: 'requestDate', args?: [] | false, alias?: string  } 
  | { name: 'videoCode', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type VideoRequestFields =
  | 'id'
  | 'doctorId'
  | 'joinCall'
  | 'patientId'
  | 'requestDate'
  | 'videoCode'
  | 'createdAt'
  | 'updatedAt'



  

export interface VideoRequestFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  joinCall: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  patientId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  requestDate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  videoCode: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for VideoRequestConnection

type VideoRequestConnectionObject =
  | VideoRequestConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type VideoRequestConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface VideoRequestConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VideoRequestConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'VideoRequestEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"VideoRequestConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequestEdge[]> | prisma.VideoRequestEdge[]
  }
  aggregate: {
    type: 'AggregateVideoRequest'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VideoRequestConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateVideoRequest> | prisma.AggregateVideoRequest
  }
}
  

// Types for VideoRequestEdge

type VideoRequestEdgeObject =
  | VideoRequestEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type VideoRequestEdgeFields =
  | 'node'
  | 'cursor'



  

export interface VideoRequestEdgeFieldDetails {
  node: {
    type: 'VideoRequest'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VideoRequestEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest> | prisma.VideoRequest
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateVideoRequest

type AggregateVideoRequestObject =
  | AggregateVideoRequestFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateVideoRequestFields =
  | 'count'



  

export interface AggregateVideoRequestFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Visitor

type VisitorObject =
  | VisitorFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'hits', args?: [] | false, alias?: string  } 
  | { name: 'ipAddress', args?: [] | false, alias?: string  } 
  | { name: 'visitDate', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type VisitorFields =
  | 'id'
  | 'country'
  | 'hits'
  | 'ipAddress'
  | 'visitDate'
  | 'createdAt'
  | 'updatedAt'



  

export interface VisitorFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ipAddress: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  visitDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for VisitorConnection

type VisitorConnectionObject =
  | VisitorConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type VisitorConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface VisitorConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VisitorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'VisitorEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"VisitorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VisitorEdge[]> | prisma.VisitorEdge[]
  }
  aggregate: {
    type: 'AggregateVisitor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VisitorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateVisitor> | prisma.AggregateVisitor
  }
}
  

// Types for VisitorEdge

type VisitorEdgeObject =
  | VisitorEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type VisitorEdgeFields =
  | 'node'
  | 'cursor'



  

export interface VisitorEdgeFieldDetails {
  node: {
    type: 'Visitor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VisitorEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor> | prisma.Visitor
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateVisitor

type AggregateVisitorObject =
  | AggregateVisitorFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateVisitorFields =
  | 'count'



  

export interface AggregateVisitorFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Translation

type TranslationObject =
  | TranslationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabi', args?: [] | false, alias?: string  } 
  | { name: 'english', args?: [] | false, alias?: string  } 
  | { name: 'index', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type TranslationFields =
  | 'id'
  | 'arabi'
  | 'english'
  | 'index'
  | 'createdAt'
  | 'updatedAt'



  

export interface TranslationFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabi: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  english: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  index: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TranslationConnection

type TranslationConnectionObject =
  | TranslationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TranslationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TranslationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TranslationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TranslationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TranslationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TranslationEdge[]> | prisma.TranslationEdge[]
  }
  aggregate: {
    type: 'AggregateTranslation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TranslationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTranslation> | prisma.AggregateTranslation
  }
}
  

// Types for TranslationEdge

type TranslationEdgeObject =
  | TranslationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TranslationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TranslationEdgeFieldDetails {
  node: {
    type: 'Translation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TranslationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation> | prisma.Translation
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTranslation

type AggregateTranslationObject =
  | AggregateTranslationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTranslationFields =
  | 'count'



  

export interface AggregateTranslationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Page

type PageObject =
  | PageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'slug_ar', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'title_ar', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'content_ar', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PageFields =
  | 'id'
  | 'slug'
  | 'slug_ar'
  | 'title'
  | 'title_ar'
  | 'content'
  | 'content_ar'
  | 'createdAt'
  | 'updatedAt'



  

export interface PageFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  slug_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  content_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PageConnection

type PageConnectionObject =
  | PageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageEdge[]> | prisma.PageEdge[]
  }
  aggregate: {
    type: 'AggregatePage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePage> | prisma.AggregatePage
  }
}
  

// Types for PageEdge

type PageEdgeObject =
  | PageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PageEdgeFieldDetails {
  node: {
    type: 'Page'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page> | prisma.Page
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePage

type AggregatePageObject =
  | AggregatePageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePageFields =
  | 'count'



  

export interface AggregatePageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createAboutUs', args?: MutationCreateAboutUsArgs[] | false, alias?: string  } 
  | { name: 'updateAboutUs', args?: MutationUpdateAboutUsArgs[] | false, alias?: string  } 
  | { name: 'updateManyAboutUses', args?: MutationUpdateManyAboutUsesArgs[] | false, alias?: string  } 
  | { name: 'upsertAboutUs', args?: MutationUpsertAboutUsArgs[] | false, alias?: string  } 
  | { name: 'deleteAboutUs', args?: MutationDeleteAboutUsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAboutUses', args?: MutationDeleteManyAboutUsesArgs[] | false, alias?: string  } 
  | { name: 'createAdmin', args?: MutationCreateAdminArgs[] | false, alias?: string  } 
  | { name: 'updateAdmin', args?: MutationUpdateAdminArgs[] | false, alias?: string  } 
  | { name: 'updateManyAdmins', args?: MutationUpdateManyAdminsArgs[] | false, alias?: string  } 
  | { name: 'upsertAdmin', args?: MutationUpsertAdminArgs[] | false, alias?: string  } 
  | { name: 'deleteAdmin', args?: MutationDeleteAdminArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAdmins', args?: MutationDeleteManyAdminsArgs[] | false, alias?: string  } 
  | { name: 'createAppointment', args?: MutationCreateAppointmentArgs[] | false, alias?: string  } 
  | { name: 'updateAppointment', args?: MutationUpdateAppointmentArgs[] | false, alias?: string  } 
  | { name: 'updateManyAppointments', args?: MutationUpdateManyAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'upsertAppointment', args?: MutationUpsertAppointmentArgs[] | false, alias?: string  } 
  | { name: 'deleteAppointment', args?: MutationDeleteAppointmentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAppointments', args?: MutationDeleteManyAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'createBlog', args?: MutationCreateBlogArgs[] | false, alias?: string  } 
  | { name: 'updateBlog', args?: MutationUpdateBlogArgs[] | false, alias?: string  } 
  | { name: 'updateManyBlogs', args?: MutationUpdateManyBlogsArgs[] | false, alias?: string  } 
  | { name: 'upsertBlog', args?: MutationUpsertBlogArgs[] | false, alias?: string  } 
  | { name: 'deleteBlog', args?: MutationDeleteBlogArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBlogs', args?: MutationDeleteManyBlogsArgs[] | false, alias?: string  } 
  | { name: 'createBlogComment', args?: MutationCreateBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'updateBlogComment', args?: MutationUpdateBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'updateManyBlogComments', args?: MutationUpdateManyBlogCommentsArgs[] | false, alias?: string  } 
  | { name: 'upsertBlogComment', args?: MutationUpsertBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'deleteBlogComment', args?: MutationDeleteBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBlogComments', args?: MutationDeleteManyBlogCommentsArgs[] | false, alias?: string  } 
  | { name: 'createBlogPost', args?: MutationCreateBlogPostArgs[] | false, alias?: string  } 
  | { name: 'updateBlogPost', args?: MutationUpdateBlogPostArgs[] | false, alias?: string  } 
  | { name: 'updateManyBlogPosts', args?: MutationUpdateManyBlogPostsArgs[] | false, alias?: string  } 
  | { name: 'upsertBlogPost', args?: MutationUpsertBlogPostArgs[] | false, alias?: string  } 
  | { name: 'deleteBlogPost', args?: MutationDeleteBlogPostArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBlogPosts', args?: MutationDeleteManyBlogPostsArgs[] | false, alias?: string  } 
  | { name: 'createPostImage', args?: MutationCreatePostImageArgs[] | false, alias?: string  } 
  | { name: 'updatePostImage', args?: MutationUpdatePostImageArgs[] | false, alias?: string  } 
  | { name: 'updateManyPostImages', args?: MutationUpdateManyPostImagesArgs[] | false, alias?: string  } 
  | { name: 'upsertPostImage', args?: MutationUpsertPostImageArgs[] | false, alias?: string  } 
  | { name: 'deletePostImage', args?: MutationDeletePostImageArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPostImages', args?: MutationDeleteManyPostImagesArgs[] | false, alias?: string  } 
  | { name: 'createCity', args?: MutationCreateCityArgs[] | false, alias?: string  } 
  | { name: 'updateCity', args?: MutationUpdateCityArgs[] | false, alias?: string  } 
  | { name: 'updateManyCities', args?: MutationUpdateManyCitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertCity', args?: MutationUpsertCityArgs[] | false, alias?: string  } 
  | { name: 'deleteCity', args?: MutationDeleteCityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCities', args?: MutationDeleteManyCitiesArgs[] | false, alias?: string  } 
  | { name: 'createContactUs', args?: MutationCreateContactUsArgs[] | false, alias?: string  } 
  | { name: 'updateContactUs', args?: MutationUpdateContactUsArgs[] | false, alias?: string  } 
  | { name: 'updateManyContactUses', args?: MutationUpdateManyContactUsesArgs[] | false, alias?: string  } 
  | { name: 'upsertContactUs', args?: MutationUpsertContactUsArgs[] | false, alias?: string  } 
  | { name: 'deleteContactUs', args?: MutationDeleteContactUsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyContactUses', args?: MutationDeleteManyContactUsesArgs[] | false, alias?: string  } 
  | { name: 'createCountry', args?: MutationCreateCountryArgs[] | false, alias?: string  } 
  | { name: 'updateCountry', args?: MutationUpdateCountryArgs[] | false, alias?: string  } 
  | { name: 'updateManyCountries', args?: MutationUpdateManyCountriesArgs[] | false, alias?: string  } 
  | { name: 'upsertCountry', args?: MutationUpsertCountryArgs[] | false, alias?: string  } 
  | { name: 'deleteCountry', args?: MutationDeleteCountryArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCountries', args?: MutationDeleteManyCountriesArgs[] | false, alias?: string  } 
  | { name: 'createDisease', args?: MutationCreateDiseaseArgs[] | false, alias?: string  } 
  | { name: 'updateDisease', args?: MutationUpdateDiseaseArgs[] | false, alias?: string  } 
  | { name: 'updateManyDiseases', args?: MutationUpdateManyDiseasesArgs[] | false, alias?: string  } 
  | { name: 'upsertDisease', args?: MutationUpsertDiseaseArgs[] | false, alias?: string  } 
  | { name: 'deleteDisease', args?: MutationDeleteDiseaseArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDiseases', args?: MutationDeleteManyDiseasesArgs[] | false, alias?: string  } 
  | { name: 'createDiseaseCovered', args?: MutationCreateDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'updateDiseaseCovered', args?: MutationUpdateDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'updateManyDiseaseCovereds', args?: MutationUpdateManyDiseaseCoveredsArgs[] | false, alias?: string  } 
  | { name: 'upsertDiseaseCovered', args?: MutationUpsertDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'deleteDiseaseCovered', args?: MutationDeleteDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDiseaseCovereds', args?: MutationDeleteManyDiseaseCoveredsArgs[] | false, alias?: string  } 
  | { name: 'createDoctor', args?: MutationCreateDoctorArgs[] | false, alias?: string  } 
  | { name: 'updateDoctor', args?: MutationUpdateDoctorArgs[] | false, alias?: string  } 
  | { name: 'updateManyDoctors', args?: MutationUpdateManyDoctorsArgs[] | false, alias?: string  } 
  | { name: 'upsertDoctor', args?: MutationUpsertDoctorArgs[] | false, alias?: string  } 
  | { name: 'deleteDoctor', args?: MutationDeleteDoctorArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctors', args?: MutationDeleteManyDoctorsArgs[] | false, alias?: string  } 
  | { name: 'createDoctorOld', args?: MutationCreateDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'updateDoctorOld', args?: MutationUpdateDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'updateManyDoctorOlds', args?: MutationUpdateManyDoctorOldsArgs[] | false, alias?: string  } 
  | { name: 'upsertDoctorOld', args?: MutationUpsertDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'deleteDoctorOld', args?: MutationDeleteDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctorOlds', args?: MutationDeleteManyDoctorOldsArgs[] | false, alias?: string  } 
  | { name: 'createDoctorShedule', args?: MutationCreateDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'updateDoctorShedule', args?: MutationUpdateDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'updateManyDoctorShedules', args?: MutationUpdateManyDoctorShedulesArgs[] | false, alias?: string  } 
  | { name: 'upsertDoctorShedule', args?: MutationUpsertDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'deleteDoctorShedule', args?: MutationDeleteDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctorShedules', args?: MutationDeleteManyDoctorShedulesArgs[] | false, alias?: string  } 
  | { name: 'createDoctorSheduleTime', args?: MutationCreateDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'updateDoctorSheduleTime', args?: MutationUpdateDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'updateManyDoctorSheduleTimes', args?: MutationUpdateManyDoctorSheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'upsertDoctorSheduleTime', args?: MutationUpsertDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteDoctorSheduleTime', args?: MutationDeleteDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctorSheduleTimes', args?: MutationDeleteManyDoctorSheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'createDoctorSpeciality', args?: MutationCreateDoctorSpecialityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctorSpecialities', args?: MutationDeleteManyDoctorSpecialitiesArgs[] | false, alias?: string  } 
  | { name: 'createDoctorsRating', args?: MutationCreateDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'updateDoctorsRating', args?: MutationUpdateDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'updateManyDoctorsRatings', args?: MutationUpdateManyDoctorsRatingsArgs[] | false, alias?: string  } 
  | { name: 'upsertDoctorsRating', args?: MutationUpsertDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteDoctorsRating', args?: MutationDeleteDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDoctorsRatings', args?: MutationDeleteManyDoctorsRatingsArgs[] | false, alias?: string  } 
  | { name: 'createDrShedule', args?: MutationCreateDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'updateDrShedule', args?: MutationUpdateDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'updateManyDrShedules', args?: MutationUpdateManyDrShedulesArgs[] | false, alias?: string  } 
  | { name: 'upsertDrShedule', args?: MutationUpsertDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'deleteDrShedule', args?: MutationDeleteDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDrShedules', args?: MutationDeleteManyDrShedulesArgs[] | false, alias?: string  } 
  | { name: 'createFacility', args?: MutationCreateFacilityArgs[] | false, alias?: string  } 
  | { name: 'updateFacility', args?: MutationUpdateFacilityArgs[] | false, alias?: string  } 
  | { name: 'updateManyFacilities', args?: MutationUpdateManyFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertFacility', args?: MutationUpsertFacilityArgs[] | false, alias?: string  } 
  | { name: 'deleteFacility', args?: MutationDeleteFacilityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyFacilities', args?: MutationDeleteManyFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'createHospital', args?: MutationCreateHospitalArgs[] | false, alias?: string  } 
  | { name: 'updateHospital', args?: MutationUpdateHospitalArgs[] | false, alias?: string  } 
  | { name: 'updateManyHospitals', args?: MutationUpdateManyHospitalsArgs[] | false, alias?: string  } 
  | { name: 'upsertHospital', args?: MutationUpsertHospitalArgs[] | false, alias?: string  } 
  | { name: 'deleteHospital', args?: MutationDeleteHospitalArgs[] | false, alias?: string  } 
  | { name: 'deleteManyHospitals', args?: MutationDeleteManyHospitalsArgs[] | false, alias?: string  } 
  | { name: 'createHospitalDoctor', args?: MutationCreateHospitalDoctorArgs[] | false, alias?: string  } 
  | { name: 'deleteManyHospitalDoctors', args?: MutationDeleteManyHospitalDoctorsArgs[] | false, alias?: string  } 
  | { name: 'createHospitalFacility', args?: MutationCreateHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'updateHospitalFacility', args?: MutationUpdateHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'updateManyHospitalFacilities', args?: MutationUpdateManyHospitalFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertHospitalFacility', args?: MutationUpsertHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'deleteHospitalFacility', args?: MutationDeleteHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyHospitalFacilities', args?: MutationDeleteManyHospitalFacilitiesArgs[] | false, alias?: string  } 
  | { name: 'createHospitalInsurance', args?: MutationCreateHospitalInsuranceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyHospitalInsurances', args?: MutationDeleteManyHospitalInsurancesArgs[] | false, alias?: string  } 
  | { name: 'createHospitalRating', args?: MutationCreateHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'updateHospitalRating', args?: MutationUpdateHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'updateManyHospitalRatings', args?: MutationUpdateManyHospitalRatingsArgs[] | false, alias?: string  } 
  | { name: 'upsertHospitalRating', args?: MutationUpsertHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteHospitalRating', args?: MutationDeleteHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyHospitalRatings', args?: MutationDeleteManyHospitalRatingsArgs[] | false, alias?: string  } 
  | { name: 'createIllness', args?: MutationCreateIllnessArgs[] | false, alias?: string  } 
  | { name: 'updateIllness', args?: MutationUpdateIllnessArgs[] | false, alias?: string  } 
  | { name: 'updateManyIllnesses', args?: MutationUpdateManyIllnessesArgs[] | false, alias?: string  } 
  | { name: 'upsertIllness', args?: MutationUpsertIllnessArgs[] | false, alias?: string  } 
  | { name: 'deleteIllness', args?: MutationDeleteIllnessArgs[] | false, alias?: string  } 
  | { name: 'deleteManyIllnesses', args?: MutationDeleteManyIllnessesArgs[] | false, alias?: string  } 
  | { name: 'createInsurance', args?: MutationCreateInsuranceArgs[] | false, alias?: string  } 
  | { name: 'updateInsurance', args?: MutationUpdateInsuranceArgs[] | false, alias?: string  } 
  | { name: 'updateManyInsurances', args?: MutationUpdateManyInsurancesArgs[] | false, alias?: string  } 
  | { name: 'upsertInsurance', args?: MutationUpsertInsuranceArgs[] | false, alias?: string  } 
  | { name: 'deleteInsurance', args?: MutationDeleteInsuranceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyInsurances', args?: MutationDeleteManyInsurancesArgs[] | false, alias?: string  } 
  | { name: 'createInsuranceCategory', args?: MutationCreateInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateInsuranceCategory', args?: MutationUpdateInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateManyInsuranceCategories', args?: MutationUpdateManyInsuranceCategoriesArgs[] | false, alias?: string  } 
  | { name: 'upsertInsuranceCategory', args?: MutationUpsertInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteInsuranceCategory', args?: MutationDeleteInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteManyInsuranceCategories', args?: MutationDeleteManyInsuranceCategoriesArgs[] | false, alias?: string  } 
  | { name: 'createJob', args?: MutationCreateJobArgs[] | false, alias?: string  } 
  | { name: 'updateJob', args?: MutationUpdateJobArgs[] | false, alias?: string  } 
  | { name: 'updateManyJobs', args?: MutationUpdateManyJobsArgs[] | false, alias?: string  } 
  | { name: 'upsertJob', args?: MutationUpsertJobArgs[] | false, alias?: string  } 
  | { name: 'deleteJob', args?: MutationDeleteJobArgs[] | false, alias?: string  } 
  | { name: 'deleteManyJobs', args?: MutationDeleteManyJobsArgs[] | false, alias?: string  } 
  | { name: 'createLanguage', args?: MutationCreateLanguageArgs[] | false, alias?: string  } 
  | { name: 'updateLanguage', args?: MutationUpdateLanguageArgs[] | false, alias?: string  } 
  | { name: 'updateManyLanguages', args?: MutationUpdateManyLanguagesArgs[] | false, alias?: string  } 
  | { name: 'upsertLanguage', args?: MutationUpsertLanguageArgs[] | false, alias?: string  } 
  | { name: 'deleteLanguage', args?: MutationDeleteLanguageArgs[] | false, alias?: string  } 
  | { name: 'deleteManyLanguages', args?: MutationDeleteManyLanguagesArgs[] | false, alias?: string  } 
  | { name: 'createMessage', args?: MutationCreateMessageArgs[] | false, alias?: string  } 
  | { name: 'updateMessage', args?: MutationUpdateMessageArgs[] | false, alias?: string  } 
  | { name: 'updateManyMessages', args?: MutationUpdateManyMessagesArgs[] | false, alias?: string  } 
  | { name: 'upsertMessage', args?: MutationUpsertMessageArgs[] | false, alias?: string  } 
  | { name: 'deleteMessage', args?: MutationDeleteMessageArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMessages', args?: MutationDeleteManyMessagesArgs[] | false, alias?: string  } 
  | { name: 'createMigration', args?: MutationCreateMigrationArgs[] | false, alias?: string  } 
  | { name: 'updateMigration', args?: MutationUpdateMigrationArgs[] | false, alias?: string  } 
  | { name: 'updateManyMigrations', args?: MutationUpdateManyMigrationsArgs[] | false, alias?: string  } 
  | { name: 'upsertMigration', args?: MutationUpsertMigrationArgs[] | false, alias?: string  } 
  | { name: 'deleteMigration', args?: MutationDeleteMigrationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMigrations', args?: MutationDeleteManyMigrationsArgs[] | false, alias?: string  } 
  | { name: 'createOffer', args?: MutationCreateOfferArgs[] | false, alias?: string  } 
  | { name: 'updateOffer', args?: MutationUpdateOfferArgs[] | false, alias?: string  } 
  | { name: 'updateManyOffers', args?: MutationUpdateManyOffersArgs[] | false, alias?: string  } 
  | { name: 'upsertOffer', args?: MutationUpsertOfferArgs[] | false, alias?: string  } 
  | { name: 'deleteOffer', args?: MutationDeleteOfferArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOffers', args?: MutationDeleteManyOffersArgs[] | false, alias?: string  } 
  | { name: 'createOnlineAppointment', args?: MutationCreateOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'updateOnlineAppointment', args?: MutationUpdateOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'updateManyOnlineAppointments', args?: MutationUpdateManyOnlineAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'upsertOnlineAppointment', args?: MutationUpsertOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'deleteOnlineAppointment', args?: MutationDeleteOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOnlineAppointments', args?: MutationDeleteManyOnlineAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'createOnlineDoctor', args?: MutationCreateOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'updateOnlineDoctor', args?: MutationUpdateOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'updateManyOnlineDoctors', args?: MutationUpdateManyOnlineDoctorsArgs[] | false, alias?: string  } 
  | { name: 'upsertOnlineDoctor', args?: MutationUpsertOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'deleteOnlineDoctor', args?: MutationDeleteOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOnlineDoctors', args?: MutationDeleteManyOnlineDoctorsArgs[] | false, alias?: string  } 
  | { name: 'createOnlineRating', args?: MutationCreateOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'updateOnlineRating', args?: MutationUpdateOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'updateManyOnlineRatings', args?: MutationUpdateManyOnlineRatingsArgs[] | false, alias?: string  } 
  | { name: 'upsertOnlineRating', args?: MutationUpsertOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteOnlineRating', args?: MutationDeleteOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOnlineRatings', args?: MutationDeleteManyOnlineRatingsArgs[] | false, alias?: string  } 
  | { name: 'createOptTime', args?: MutationCreateOptTimeArgs[] | false, alias?: string  } 
  | { name: 'updateOptTime', args?: MutationUpdateOptTimeArgs[] | false, alias?: string  } 
  | { name: 'updateManyOptTimes', args?: MutationUpdateManyOptTimesArgs[] | false, alias?: string  } 
  | { name: 'upsertOptTime', args?: MutationUpsertOptTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteOptTime', args?: MutationDeleteOptTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOptTimes', args?: MutationDeleteManyOptTimesArgs[] | false, alias?: string  } 
  | { name: 'createPasswordReset', args?: MutationCreatePasswordResetArgs[] | false, alias?: string  } 
  | { name: 'updatePasswordReset', args?: MutationUpdatePasswordResetArgs[] | false, alias?: string  } 
  | { name: 'updateManyPasswordResets', args?: MutationUpdateManyPasswordResetsArgs[] | false, alias?: string  } 
  | { name: 'upsertPasswordReset', args?: MutationUpsertPasswordResetArgs[] | false, alias?: string  } 
  | { name: 'deletePasswordReset', args?: MutationDeletePasswordResetArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPasswordResets', args?: MutationDeleteManyPasswordResetsArgs[] | false, alias?: string  } 
  | { name: 'createPatient', args?: MutationCreatePatientArgs[] | false, alias?: string  } 
  | { name: 'updatePatient', args?: MutationUpdatePatientArgs[] | false, alias?: string  } 
  | { name: 'updateManyPatients', args?: MutationUpdateManyPatientsArgs[] | false, alias?: string  } 
  | { name: 'upsertPatient', args?: MutationUpsertPatientArgs[] | false, alias?: string  } 
  | { name: 'deletePatient', args?: MutationDeletePatientArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPatients', args?: MutationDeleteManyPatientsArgs[] | false, alias?: string  } 
  | { name: 'createSearchDesign', args?: MutationCreateSearchDesignArgs[] | false, alias?: string  } 
  | { name: 'updateSearchDesign', args?: MutationUpdateSearchDesignArgs[] | false, alias?: string  } 
  | { name: 'updateManySearchDesigns', args?: MutationUpdateManySearchDesignsArgs[] | false, alias?: string  } 
  | { name: 'upsertSearchDesign', args?: MutationUpsertSearchDesignArgs[] | false, alias?: string  } 
  | { name: 'deleteSearchDesign', args?: MutationDeleteSearchDesignArgs[] | false, alias?: string  } 
  | { name: 'deleteManySearchDesigns', args?: MutationDeleteManySearchDesignsArgs[] | false, alias?: string  } 
  | { name: 'createSheduleTime', args?: MutationCreateSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'updateSheduleTime', args?: MutationUpdateSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'updateManySheduleTimes', args?: MutationUpdateManySheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'upsertSheduleTime', args?: MutationUpsertSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteSheduleTime', args?: MutationDeleteSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteManySheduleTimes', args?: MutationDeleteManySheduleTimesArgs[] | false, alias?: string  } 
  | { name: 'createSlider', args?: MutationCreateSliderArgs[] | false, alias?: string  } 
  | { name: 'updateSlider', args?: MutationUpdateSliderArgs[] | false, alias?: string  } 
  | { name: 'updateManySliders', args?: MutationUpdateManySlidersArgs[] | false, alias?: string  } 
  | { name: 'upsertSlider', args?: MutationUpsertSliderArgs[] | false, alias?: string  } 
  | { name: 'deleteSlider', args?: MutationDeleteSliderArgs[] | false, alias?: string  } 
  | { name: 'deleteManySliders', args?: MutationDeleteManySlidersArgs[] | false, alias?: string  } 
  | { name: 'createSpeciality', args?: MutationCreateSpecialityArgs[] | false, alias?: string  } 
  | { name: 'updateSpeciality', args?: MutationUpdateSpecialityArgs[] | false, alias?: string  } 
  | { name: 'updateManySpecialities', args?: MutationUpdateManySpecialitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertSpeciality', args?: MutationUpsertSpecialityArgs[] | false, alias?: string  } 
  | { name: 'deleteSpeciality', args?: MutationDeleteSpecialityArgs[] | false, alias?: string  } 
  | { name: 'deleteManySpecialities', args?: MutationDeleteManySpecialitiesArgs[] | false, alias?: string  } 
  | { name: 'createEmailSubscription', args?: MutationCreateEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'updateEmailSubscription', args?: MutationUpdateEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'updateManyEmailSubscriptions', args?: MutationUpdateManyEmailSubscriptionsArgs[] | false, alias?: string  } 
  | { name: 'upsertEmailSubscription', args?: MutationUpsertEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'deleteEmailSubscription', args?: MutationDeleteEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyEmailSubscriptions', args?: MutationDeleteManyEmailSubscriptionsArgs[] | false, alias?: string  } 
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createVideoRequest', args?: MutationCreateVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'updateVideoRequest', args?: MutationUpdateVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'updateManyVideoRequests', args?: MutationUpdateManyVideoRequestsArgs[] | false, alias?: string  } 
  | { name: 'upsertVideoRequest', args?: MutationUpsertVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'deleteVideoRequest', args?: MutationDeleteVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'deleteManyVideoRequests', args?: MutationDeleteManyVideoRequestsArgs[] | false, alias?: string  } 
  | { name: 'createVisitor', args?: MutationCreateVisitorArgs[] | false, alias?: string  } 
  | { name: 'updateVisitor', args?: MutationUpdateVisitorArgs[] | false, alias?: string  } 
  | { name: 'updateManyVisitors', args?: MutationUpdateManyVisitorsArgs[] | false, alias?: string  } 
  | { name: 'upsertVisitor', args?: MutationUpsertVisitorArgs[] | false, alias?: string  } 
  | { name: 'deleteVisitor', args?: MutationDeleteVisitorArgs[] | false, alias?: string  } 
  | { name: 'deleteManyVisitors', args?: MutationDeleteManyVisitorsArgs[] | false, alias?: string  } 
  | { name: 'createTranslation', args?: MutationCreateTranslationArgs[] | false, alias?: string  } 
  | { name: 'updateTranslation', args?: MutationUpdateTranslationArgs[] | false, alias?: string  } 
  | { name: 'updateManyTranslations', args?: MutationUpdateManyTranslationsArgs[] | false, alias?: string  } 
  | { name: 'upsertTranslation', args?: MutationUpsertTranslationArgs[] | false, alias?: string  } 
  | { name: 'deleteTranslation', args?: MutationDeleteTranslationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTranslations', args?: MutationDeleteManyTranslationsArgs[] | false, alias?: string  } 
  | { name: 'createPage', args?: MutationCreatePageArgs[] | false, alias?: string  } 
  | { name: 'updatePage', args?: MutationUpdatePageArgs[] | false, alias?: string  } 
  | { name: 'updateManyPages', args?: MutationUpdateManyPagesArgs[] | false, alias?: string  } 
  | { name: 'upsertPage', args?: MutationUpsertPageArgs[] | false, alias?: string  } 
  | { name: 'deletePage', args?: MutationDeletePageArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPages', args?: MutationDeleteManyPagesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createAboutUs'
  | 'updateAboutUs'
  | 'updateManyAboutUses'
  | 'upsertAboutUs'
  | 'deleteAboutUs'
  | 'deleteManyAboutUses'
  | 'createAdmin'
  | 'updateAdmin'
  | 'updateManyAdmins'
  | 'upsertAdmin'
  | 'deleteAdmin'
  | 'deleteManyAdmins'
  | 'createAppointment'
  | 'updateAppointment'
  | 'updateManyAppointments'
  | 'upsertAppointment'
  | 'deleteAppointment'
  | 'deleteManyAppointments'
  | 'createBlog'
  | 'updateBlog'
  | 'updateManyBlogs'
  | 'upsertBlog'
  | 'deleteBlog'
  | 'deleteManyBlogs'
  | 'createBlogComment'
  | 'updateBlogComment'
  | 'updateManyBlogComments'
  | 'upsertBlogComment'
  | 'deleteBlogComment'
  | 'deleteManyBlogComments'
  | 'createBlogPost'
  | 'updateBlogPost'
  | 'updateManyBlogPosts'
  | 'upsertBlogPost'
  | 'deleteBlogPost'
  | 'deleteManyBlogPosts'
  | 'createPostImage'
  | 'updatePostImage'
  | 'updateManyPostImages'
  | 'upsertPostImage'
  | 'deletePostImage'
  | 'deleteManyPostImages'
  | 'createCity'
  | 'updateCity'
  | 'updateManyCities'
  | 'upsertCity'
  | 'deleteCity'
  | 'deleteManyCities'
  | 'createContactUs'
  | 'updateContactUs'
  | 'updateManyContactUses'
  | 'upsertContactUs'
  | 'deleteContactUs'
  | 'deleteManyContactUses'
  | 'createCountry'
  | 'updateCountry'
  | 'updateManyCountries'
  | 'upsertCountry'
  | 'deleteCountry'
  | 'deleteManyCountries'
  | 'createDisease'
  | 'updateDisease'
  | 'updateManyDiseases'
  | 'upsertDisease'
  | 'deleteDisease'
  | 'deleteManyDiseases'
  | 'createDiseaseCovered'
  | 'updateDiseaseCovered'
  | 'updateManyDiseaseCovereds'
  | 'upsertDiseaseCovered'
  | 'deleteDiseaseCovered'
  | 'deleteManyDiseaseCovereds'
  | 'createDoctor'
  | 'updateDoctor'
  | 'updateManyDoctors'
  | 'upsertDoctor'
  | 'deleteDoctor'
  | 'deleteManyDoctors'
  | 'createDoctorOld'
  | 'updateDoctorOld'
  | 'updateManyDoctorOlds'
  | 'upsertDoctorOld'
  | 'deleteDoctorOld'
  | 'deleteManyDoctorOlds'
  | 'createDoctorShedule'
  | 'updateDoctorShedule'
  | 'updateManyDoctorShedules'
  | 'upsertDoctorShedule'
  | 'deleteDoctorShedule'
  | 'deleteManyDoctorShedules'
  | 'createDoctorSheduleTime'
  | 'updateDoctorSheduleTime'
  | 'updateManyDoctorSheduleTimes'
  | 'upsertDoctorSheduleTime'
  | 'deleteDoctorSheduleTime'
  | 'deleteManyDoctorSheduleTimes'
  | 'createDoctorSpeciality'
  | 'deleteManyDoctorSpecialities'
  | 'createDoctorsRating'
  | 'updateDoctorsRating'
  | 'updateManyDoctorsRatings'
  | 'upsertDoctorsRating'
  | 'deleteDoctorsRating'
  | 'deleteManyDoctorsRatings'
  | 'createDrShedule'
  | 'updateDrShedule'
  | 'updateManyDrShedules'
  | 'upsertDrShedule'
  | 'deleteDrShedule'
  | 'deleteManyDrShedules'
  | 'createFacility'
  | 'updateFacility'
  | 'updateManyFacilities'
  | 'upsertFacility'
  | 'deleteFacility'
  | 'deleteManyFacilities'
  | 'createHospital'
  | 'updateHospital'
  | 'updateManyHospitals'
  | 'upsertHospital'
  | 'deleteHospital'
  | 'deleteManyHospitals'
  | 'createHospitalDoctor'
  | 'deleteManyHospitalDoctors'
  | 'createHospitalFacility'
  | 'updateHospitalFacility'
  | 'updateManyHospitalFacilities'
  | 'upsertHospitalFacility'
  | 'deleteHospitalFacility'
  | 'deleteManyHospitalFacilities'
  | 'createHospitalInsurance'
  | 'deleteManyHospitalInsurances'
  | 'createHospitalRating'
  | 'updateHospitalRating'
  | 'updateManyHospitalRatings'
  | 'upsertHospitalRating'
  | 'deleteHospitalRating'
  | 'deleteManyHospitalRatings'
  | 'createIllness'
  | 'updateIllness'
  | 'updateManyIllnesses'
  | 'upsertIllness'
  | 'deleteIllness'
  | 'deleteManyIllnesses'
  | 'createInsurance'
  | 'updateInsurance'
  | 'updateManyInsurances'
  | 'upsertInsurance'
  | 'deleteInsurance'
  | 'deleteManyInsurances'
  | 'createInsuranceCategory'
  | 'updateInsuranceCategory'
  | 'updateManyInsuranceCategories'
  | 'upsertInsuranceCategory'
  | 'deleteInsuranceCategory'
  | 'deleteManyInsuranceCategories'
  | 'createJob'
  | 'updateJob'
  | 'updateManyJobs'
  | 'upsertJob'
  | 'deleteJob'
  | 'deleteManyJobs'
  | 'createLanguage'
  | 'updateLanguage'
  | 'updateManyLanguages'
  | 'upsertLanguage'
  | 'deleteLanguage'
  | 'deleteManyLanguages'
  | 'createMessage'
  | 'updateMessage'
  | 'updateManyMessages'
  | 'upsertMessage'
  | 'deleteMessage'
  | 'deleteManyMessages'
  | 'createMigration'
  | 'updateMigration'
  | 'updateManyMigrations'
  | 'upsertMigration'
  | 'deleteMigration'
  | 'deleteManyMigrations'
  | 'createOffer'
  | 'updateOffer'
  | 'updateManyOffers'
  | 'upsertOffer'
  | 'deleteOffer'
  | 'deleteManyOffers'
  | 'createOnlineAppointment'
  | 'updateOnlineAppointment'
  | 'updateManyOnlineAppointments'
  | 'upsertOnlineAppointment'
  | 'deleteOnlineAppointment'
  | 'deleteManyOnlineAppointments'
  | 'createOnlineDoctor'
  | 'updateOnlineDoctor'
  | 'updateManyOnlineDoctors'
  | 'upsertOnlineDoctor'
  | 'deleteOnlineDoctor'
  | 'deleteManyOnlineDoctors'
  | 'createOnlineRating'
  | 'updateOnlineRating'
  | 'updateManyOnlineRatings'
  | 'upsertOnlineRating'
  | 'deleteOnlineRating'
  | 'deleteManyOnlineRatings'
  | 'createOptTime'
  | 'updateOptTime'
  | 'updateManyOptTimes'
  | 'upsertOptTime'
  | 'deleteOptTime'
  | 'deleteManyOptTimes'
  | 'createPasswordReset'
  | 'updatePasswordReset'
  | 'updateManyPasswordResets'
  | 'upsertPasswordReset'
  | 'deletePasswordReset'
  | 'deleteManyPasswordResets'
  | 'createPatient'
  | 'updatePatient'
  | 'updateManyPatients'
  | 'upsertPatient'
  | 'deletePatient'
  | 'deleteManyPatients'
  | 'createSearchDesign'
  | 'updateSearchDesign'
  | 'updateManySearchDesigns'
  | 'upsertSearchDesign'
  | 'deleteSearchDesign'
  | 'deleteManySearchDesigns'
  | 'createSheduleTime'
  | 'updateSheduleTime'
  | 'updateManySheduleTimes'
  | 'upsertSheduleTime'
  | 'deleteSheduleTime'
  | 'deleteManySheduleTimes'
  | 'createSlider'
  | 'updateSlider'
  | 'updateManySliders'
  | 'upsertSlider'
  | 'deleteSlider'
  | 'deleteManySliders'
  | 'createSpeciality'
  | 'updateSpeciality'
  | 'updateManySpecialities'
  | 'upsertSpeciality'
  | 'deleteSpeciality'
  | 'deleteManySpecialities'
  | 'createEmailSubscription'
  | 'updateEmailSubscription'
  | 'updateManyEmailSubscriptions'
  | 'upsertEmailSubscription'
  | 'deleteEmailSubscription'
  | 'deleteManyEmailSubscriptions'
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createVideoRequest'
  | 'updateVideoRequest'
  | 'updateManyVideoRequests'
  | 'upsertVideoRequest'
  | 'deleteVideoRequest'
  | 'deleteManyVideoRequests'
  | 'createVisitor'
  | 'updateVisitor'
  | 'updateManyVisitors'
  | 'upsertVisitor'
  | 'deleteVisitor'
  | 'deleteManyVisitors'
  | 'createTranslation'
  | 'updateTranslation'
  | 'updateManyTranslations'
  | 'upsertTranslation'
  | 'deleteTranslation'
  | 'deleteManyTranslations'
  | 'createPage'
  | 'updatePage'
  | 'updateManyPages'
  | 'upsertPage'
  | 'deletePage'
  | 'deleteManyPages'


type MutationCreateAboutUsArgs =
  | 'data'
type MutationUpdateAboutUsArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAboutUsesArgs =
  | 'data'
  | 'where'
type MutationUpsertAboutUsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAboutUsArgs =
  | 'where'
type MutationDeleteManyAboutUsesArgs =
  | 'where'
type MutationCreateAdminArgs =
  | 'data'
type MutationUpdateAdminArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAdminsArgs =
  | 'data'
  | 'where'
type MutationUpsertAdminArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAdminArgs =
  | 'where'
type MutationDeleteManyAdminsArgs =
  | 'where'
type MutationCreateAppointmentArgs =
  | 'data'
type MutationUpdateAppointmentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAppointmentsArgs =
  | 'data'
  | 'where'
type MutationUpsertAppointmentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAppointmentArgs =
  | 'where'
type MutationDeleteManyAppointmentsArgs =
  | 'where'
type MutationCreateBlogArgs =
  | 'data'
type MutationUpdateBlogArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBlogsArgs =
  | 'data'
  | 'where'
type MutationUpsertBlogArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBlogArgs =
  | 'where'
type MutationDeleteManyBlogsArgs =
  | 'where'
type MutationCreateBlogCommentArgs =
  | 'data'
type MutationUpdateBlogCommentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBlogCommentsArgs =
  | 'data'
  | 'where'
type MutationUpsertBlogCommentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBlogCommentArgs =
  | 'where'
type MutationDeleteManyBlogCommentsArgs =
  | 'where'
type MutationCreateBlogPostArgs =
  | 'data'
type MutationUpdateBlogPostArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBlogPostsArgs =
  | 'data'
  | 'where'
type MutationUpsertBlogPostArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBlogPostArgs =
  | 'where'
type MutationDeleteManyBlogPostsArgs =
  | 'where'
type MutationCreatePostImageArgs =
  | 'data'
type MutationUpdatePostImageArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPostImagesArgs =
  | 'data'
  | 'where'
type MutationUpsertPostImageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePostImageArgs =
  | 'where'
type MutationDeleteManyPostImagesArgs =
  | 'where'
type MutationCreateCityArgs =
  | 'data'
type MutationUpdateCityArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertCityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCityArgs =
  | 'where'
type MutationDeleteManyCitiesArgs =
  | 'where'
type MutationCreateContactUsArgs =
  | 'data'
type MutationUpdateContactUsArgs =
  | 'data'
  | 'where'
type MutationUpdateManyContactUsesArgs =
  | 'data'
  | 'where'
type MutationUpsertContactUsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteContactUsArgs =
  | 'where'
type MutationDeleteManyContactUsesArgs =
  | 'where'
type MutationCreateCountryArgs =
  | 'data'
type MutationUpdateCountryArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCountriesArgs =
  | 'data'
  | 'where'
type MutationUpsertCountryArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCountryArgs =
  | 'where'
type MutationDeleteManyCountriesArgs =
  | 'where'
type MutationCreateDiseaseArgs =
  | 'data'
type MutationUpdateDiseaseArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDiseasesArgs =
  | 'data'
  | 'where'
type MutationUpsertDiseaseArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDiseaseArgs =
  | 'where'
type MutationDeleteManyDiseasesArgs =
  | 'where'
type MutationCreateDiseaseCoveredArgs =
  | 'data'
type MutationUpdateDiseaseCoveredArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDiseaseCoveredsArgs =
  | 'data'
  | 'where'
type MutationUpsertDiseaseCoveredArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDiseaseCoveredArgs =
  | 'where'
type MutationDeleteManyDiseaseCoveredsArgs =
  | 'where'
type MutationCreateDoctorArgs =
  | 'data'
type MutationUpdateDoctorArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDoctorsArgs =
  | 'data'
  | 'where'
type MutationUpsertDoctorArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDoctorArgs =
  | 'where'
type MutationDeleteManyDoctorsArgs =
  | 'where'
type MutationCreateDoctorOldArgs =
  | 'data'
type MutationUpdateDoctorOldArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDoctorOldsArgs =
  | 'data'
  | 'where'
type MutationUpsertDoctorOldArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDoctorOldArgs =
  | 'where'
type MutationDeleteManyDoctorOldsArgs =
  | 'where'
type MutationCreateDoctorSheduleArgs =
  | 'data'
type MutationUpdateDoctorSheduleArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDoctorShedulesArgs =
  | 'data'
  | 'where'
type MutationUpsertDoctorSheduleArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDoctorSheduleArgs =
  | 'where'
type MutationDeleteManyDoctorShedulesArgs =
  | 'where'
type MutationCreateDoctorSheduleTimeArgs =
  | 'data'
type MutationUpdateDoctorSheduleTimeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDoctorSheduleTimesArgs =
  | 'data'
  | 'where'
type MutationUpsertDoctorSheduleTimeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDoctorSheduleTimeArgs =
  | 'where'
type MutationDeleteManyDoctorSheduleTimesArgs =
  | 'where'
type MutationCreateDoctorSpecialityArgs =
  | 'data'
type MutationDeleteManyDoctorSpecialitiesArgs =
  | 'where'
type MutationCreateDoctorsRatingArgs =
  | 'data'
type MutationUpdateDoctorsRatingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDoctorsRatingsArgs =
  | 'data'
  | 'where'
type MutationUpsertDoctorsRatingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDoctorsRatingArgs =
  | 'where'
type MutationDeleteManyDoctorsRatingsArgs =
  | 'where'
type MutationCreateDrSheduleArgs =
  | 'data'
type MutationUpdateDrSheduleArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDrShedulesArgs =
  | 'data'
  | 'where'
type MutationUpsertDrSheduleArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDrSheduleArgs =
  | 'where'
type MutationDeleteManyDrShedulesArgs =
  | 'where'
type MutationCreateFacilityArgs =
  | 'data'
type MutationUpdateFacilityArgs =
  | 'data'
  | 'where'
type MutationUpdateManyFacilitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertFacilityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteFacilityArgs =
  | 'where'
type MutationDeleteManyFacilitiesArgs =
  | 'where'
type MutationCreateHospitalArgs =
  | 'data'
type MutationUpdateHospitalArgs =
  | 'data'
  | 'where'
type MutationUpdateManyHospitalsArgs =
  | 'data'
  | 'where'
type MutationUpsertHospitalArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteHospitalArgs =
  | 'where'
type MutationDeleteManyHospitalsArgs =
  | 'where'
type MutationCreateHospitalDoctorArgs =
  | 'data'
type MutationDeleteManyHospitalDoctorsArgs =
  | 'where'
type MutationCreateHospitalFacilityArgs =
  | 'data'
type MutationUpdateHospitalFacilityArgs =
  | 'data'
  | 'where'
type MutationUpdateManyHospitalFacilitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertHospitalFacilityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteHospitalFacilityArgs =
  | 'where'
type MutationDeleteManyHospitalFacilitiesArgs =
  | 'where'
type MutationCreateHospitalInsuranceArgs =
  | 'data'
type MutationDeleteManyHospitalInsurancesArgs =
  | 'where'
type MutationCreateHospitalRatingArgs =
  | 'data'
type MutationUpdateHospitalRatingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyHospitalRatingsArgs =
  | 'data'
  | 'where'
type MutationUpsertHospitalRatingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteHospitalRatingArgs =
  | 'where'
type MutationDeleteManyHospitalRatingsArgs =
  | 'where'
type MutationCreateIllnessArgs =
  | 'data'
type MutationUpdateIllnessArgs =
  | 'data'
  | 'where'
type MutationUpdateManyIllnessesArgs =
  | 'data'
  | 'where'
type MutationUpsertIllnessArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteIllnessArgs =
  | 'where'
type MutationDeleteManyIllnessesArgs =
  | 'where'
type MutationCreateInsuranceArgs =
  | 'data'
type MutationUpdateInsuranceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyInsurancesArgs =
  | 'data'
  | 'where'
type MutationUpsertInsuranceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteInsuranceArgs =
  | 'where'
type MutationDeleteManyInsurancesArgs =
  | 'where'
type MutationCreateInsuranceCategoryArgs =
  | 'data'
type MutationUpdateInsuranceCategoryArgs =
  | 'data'
  | 'where'
type MutationUpdateManyInsuranceCategoriesArgs =
  | 'data'
  | 'where'
type MutationUpsertInsuranceCategoryArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteInsuranceCategoryArgs =
  | 'where'
type MutationDeleteManyInsuranceCategoriesArgs =
  | 'where'
type MutationCreateJobArgs =
  | 'data'
type MutationUpdateJobArgs =
  | 'data'
  | 'where'
type MutationUpdateManyJobsArgs =
  | 'data'
  | 'where'
type MutationUpsertJobArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteJobArgs =
  | 'where'
type MutationDeleteManyJobsArgs =
  | 'where'
type MutationCreateLanguageArgs =
  | 'data'
type MutationUpdateLanguageArgs =
  | 'data'
  | 'where'
type MutationUpdateManyLanguagesArgs =
  | 'data'
  | 'where'
type MutationUpsertLanguageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteLanguageArgs =
  | 'where'
type MutationDeleteManyLanguagesArgs =
  | 'where'
type MutationCreateMessageArgs =
  | 'data'
type MutationUpdateMessageArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMessagesArgs =
  | 'data'
  | 'where'
type MutationUpsertMessageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMessageArgs =
  | 'where'
type MutationDeleteManyMessagesArgs =
  | 'where'
type MutationCreateMigrationArgs =
  | 'data'
type MutationUpdateMigrationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMigrationsArgs =
  | 'data'
  | 'where'
type MutationUpsertMigrationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMigrationArgs =
  | 'where'
type MutationDeleteManyMigrationsArgs =
  | 'where'
type MutationCreateOfferArgs =
  | 'data'
type MutationUpdateOfferArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOffersArgs =
  | 'data'
  | 'where'
type MutationUpsertOfferArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOfferArgs =
  | 'where'
type MutationDeleteManyOffersArgs =
  | 'where'
type MutationCreateOnlineAppointmentArgs =
  | 'data'
type MutationUpdateOnlineAppointmentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOnlineAppointmentsArgs =
  | 'data'
  | 'where'
type MutationUpsertOnlineAppointmentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOnlineAppointmentArgs =
  | 'where'
type MutationDeleteManyOnlineAppointmentsArgs =
  | 'where'
type MutationCreateOnlineDoctorArgs =
  | 'data'
type MutationUpdateOnlineDoctorArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOnlineDoctorsArgs =
  | 'data'
  | 'where'
type MutationUpsertOnlineDoctorArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOnlineDoctorArgs =
  | 'where'
type MutationDeleteManyOnlineDoctorsArgs =
  | 'where'
type MutationCreateOnlineRatingArgs =
  | 'data'
type MutationUpdateOnlineRatingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOnlineRatingsArgs =
  | 'data'
  | 'where'
type MutationUpsertOnlineRatingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOnlineRatingArgs =
  | 'where'
type MutationDeleteManyOnlineRatingsArgs =
  | 'where'
type MutationCreateOptTimeArgs =
  | 'data'
type MutationUpdateOptTimeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOptTimesArgs =
  | 'data'
  | 'where'
type MutationUpsertOptTimeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOptTimeArgs =
  | 'where'
type MutationDeleteManyOptTimesArgs =
  | 'where'
type MutationCreatePasswordResetArgs =
  | 'data'
type MutationUpdatePasswordResetArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPasswordResetsArgs =
  | 'data'
  | 'where'
type MutationUpsertPasswordResetArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePasswordResetArgs =
  | 'where'
type MutationDeleteManyPasswordResetsArgs =
  | 'where'
type MutationCreatePatientArgs =
  | 'data'
type MutationUpdatePatientArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPatientsArgs =
  | 'data'
  | 'where'
type MutationUpsertPatientArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePatientArgs =
  | 'where'
type MutationDeleteManyPatientsArgs =
  | 'where'
type MutationCreateSearchDesignArgs =
  | 'data'
type MutationUpdateSearchDesignArgs =
  | 'data'
  | 'where'
type MutationUpdateManySearchDesignsArgs =
  | 'data'
  | 'where'
type MutationUpsertSearchDesignArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSearchDesignArgs =
  | 'where'
type MutationDeleteManySearchDesignsArgs =
  | 'where'
type MutationCreateSheduleTimeArgs =
  | 'data'
type MutationUpdateSheduleTimeArgs =
  | 'data'
  | 'where'
type MutationUpdateManySheduleTimesArgs =
  | 'data'
  | 'where'
type MutationUpsertSheduleTimeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSheduleTimeArgs =
  | 'where'
type MutationDeleteManySheduleTimesArgs =
  | 'where'
type MutationCreateSliderArgs =
  | 'data'
type MutationUpdateSliderArgs =
  | 'data'
  | 'where'
type MutationUpdateManySlidersArgs =
  | 'data'
  | 'where'
type MutationUpsertSliderArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSliderArgs =
  | 'where'
type MutationDeleteManySlidersArgs =
  | 'where'
type MutationCreateSpecialityArgs =
  | 'data'
type MutationUpdateSpecialityArgs =
  | 'data'
  | 'where'
type MutationUpdateManySpecialitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertSpecialityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSpecialityArgs =
  | 'where'
type MutationDeleteManySpecialitiesArgs =
  | 'where'
type MutationCreateEmailSubscriptionArgs =
  | 'data'
type MutationUpdateEmailSubscriptionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyEmailSubscriptionsArgs =
  | 'data'
  | 'where'
type MutationUpsertEmailSubscriptionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteEmailSubscriptionArgs =
  | 'where'
type MutationDeleteManyEmailSubscriptionsArgs =
  | 'where'
type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateVideoRequestArgs =
  | 'data'
type MutationUpdateVideoRequestArgs =
  | 'data'
  | 'where'
type MutationUpdateManyVideoRequestsArgs =
  | 'data'
  | 'where'
type MutationUpsertVideoRequestArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteVideoRequestArgs =
  | 'where'
type MutationDeleteManyVideoRequestsArgs =
  | 'where'
type MutationCreateVisitorArgs =
  | 'data'
type MutationUpdateVisitorArgs =
  | 'data'
  | 'where'
type MutationUpdateManyVisitorsArgs =
  | 'data'
  | 'where'
type MutationUpsertVisitorArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteVisitorArgs =
  | 'where'
type MutationDeleteManyVisitorsArgs =
  | 'where'
type MutationCreateTranslationArgs =
  | 'data'
type MutationUpdateTranslationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTranslationsArgs =
  | 'data'
  | 'where'
type MutationUpsertTranslationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTranslationArgs =
  | 'where'
type MutationDeleteManyTranslationsArgs =
  | 'where'
type MutationCreatePageArgs =
  | 'data'
type MutationUpdatePageArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPagesArgs =
  | 'data'
  | 'where'
type MutationUpsertPageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePageArgs =
  | 'where'
type MutationDeleteManyPagesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createAboutUs: {
    type: 'AboutUs'
    args: Record<MutationCreateAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AboutUsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs> | prisma.AboutUs
  }
  updateAboutUs: {
    type: 'AboutUs'
    args: Record<MutationUpdateAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AboutUsUpdateInput, where: AboutUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs | null> | prisma.AboutUs | null
  }
  updateManyAboutUses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAboutUsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AboutUsUpdateManyMutationInput, where?: AboutUsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAboutUs: {
    type: 'AboutUs'
    args: Record<MutationUpsertAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AboutUsWhereUniqueInput, create: AboutUsCreateInput, update: AboutUsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs> | prisma.AboutUs
  }
  deleteAboutUs: {
    type: 'AboutUs'
    args: Record<MutationDeleteAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AboutUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs | null> | prisma.AboutUs | null
  }
  deleteManyAboutUses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAboutUsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AboutUsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAdmin: {
    type: 'Admin'
    args: Record<MutationCreateAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdminCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin> | prisma.Admin
  }
  updateAdmin: {
    type: 'Admin'
    args: Record<MutationUpdateAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdminUpdateInput, where: AdminWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin | null> | prisma.Admin | null
  }
  updateManyAdmins: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAdminsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdminUpdateManyMutationInput, where?: AdminWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAdmin: {
    type: 'Admin'
    args: Record<MutationUpsertAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AdminWhereUniqueInput, create: AdminCreateInput, update: AdminUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin> | prisma.Admin
  }
  deleteAdmin: {
    type: 'Admin'
    args: Record<MutationDeleteAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AdminWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin | null> | prisma.Admin | null
  }
  deleteManyAdmins: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAdminsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AdminWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAppointment: {
    type: 'Appointment'
    args: Record<MutationCreateAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment> | prisma.Appointment
  }
  updateAppointment: {
    type: 'Appointment'
    args: Record<MutationUpdateAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentUpdateInput, where: AppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment | null> | prisma.Appointment | null
  }
  updateManyAppointments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentUpdateManyMutationInput, where?: AppointmentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAppointment: {
    type: 'Appointment'
    args: Record<MutationUpsertAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AppointmentWhereUniqueInput, create: AppointmentCreateInput, update: AppointmentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment> | prisma.Appointment
  }
  deleteAppointment: {
    type: 'Appointment'
    args: Record<MutationDeleteAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment | null> | prisma.Appointment | null
  }
  deleteManyAppointments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AppointmentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBlog: {
    type: 'Blog'
    args: Record<MutationCreateBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog> | prisma.Blog
  }
  updateBlog: {
    type: 'Blog'
    args: Record<MutationUpdateBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogUpdateInput, where: BlogWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog | null> | prisma.Blog | null
  }
  updateManyBlogs: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBlogsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogUpdateManyMutationInput, where?: BlogWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBlog: {
    type: 'Blog'
    args: Record<MutationUpsertBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogWhereUniqueInput, create: BlogCreateInput, update: BlogUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog> | prisma.Blog
  }
  deleteBlog: {
    type: 'Blog'
    args: Record<MutationDeleteBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog | null> | prisma.Blog | null
  }
  deleteManyBlogs: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBlogsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BlogWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBlogComment: {
    type: 'BlogComment'
    args: Record<MutationCreateBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogCommentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment> | prisma.BlogComment
  }
  updateBlogComment: {
    type: 'BlogComment'
    args: Record<MutationUpdateBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogCommentUpdateInput, where: BlogCommentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment | null> | prisma.BlogComment | null
  }
  updateManyBlogComments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBlogCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogCommentUpdateManyMutationInput, where?: BlogCommentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBlogComment: {
    type: 'BlogComment'
    args: Record<MutationUpsertBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogCommentWhereUniqueInput, create: BlogCommentCreateInput, update: BlogCommentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment> | prisma.BlogComment
  }
  deleteBlogComment: {
    type: 'BlogComment'
    args: Record<MutationDeleteBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogCommentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment | null> | prisma.BlogComment | null
  }
  deleteManyBlogComments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBlogCommentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BlogCommentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBlogPost: {
    type: 'BlogPost'
    args: Record<MutationCreateBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogPostCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost> | prisma.BlogPost
  }
  updateBlogPost: {
    type: 'BlogPost'
    args: Record<MutationUpdateBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogPostUpdateInput, where: BlogPostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  updateManyBlogPosts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBlogPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BlogPostUpdateManyMutationInput, where?: BlogPostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBlogPost: {
    type: 'BlogPost'
    args: Record<MutationUpsertBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogPostWhereUniqueInput, create: BlogPostCreateInput, update: BlogPostUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost> | prisma.BlogPost
  }
  deleteBlogPost: {
    type: 'BlogPost'
    args: Record<MutationDeleteBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BlogPostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  deleteManyBlogPosts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBlogPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BlogPostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPostImage: {
    type: 'PostImage'
    args: Record<MutationCreatePostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostImageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage> | prisma.PostImage
  }
  updatePostImage: {
    type: 'PostImage'
    args: Record<MutationUpdatePostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostImageUpdateInput, where: PostImageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage | null> | prisma.PostImage | null
  }
  updateManyPostImages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPostImagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostImageUpdateManyMutationInput, where?: PostImageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPostImage: {
    type: 'PostImage'
    args: Record<MutationUpsertPostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostImageWhereUniqueInput, create: PostImageCreateInput, update: PostImageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage> | prisma.PostImage
  }
  deletePostImage: {
    type: 'PostImage'
    args: Record<MutationDeletePostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostImageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage | null> | prisma.PostImage | null
  }
  deleteManyPostImages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPostImagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PostImageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCity: {
    type: 'City'
    args: Record<MutationCreateCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City> | prisma.City
  }
  updateCity: {
    type: 'City'
    args: Record<MutationUpdateCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CityUpdateInput, where: CityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City | null> | prisma.City | null
  }
  updateManyCities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CityUpdateManyMutationInput, where?: CityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCity: {
    type: 'City'
    args: Record<MutationUpsertCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CityWhereUniqueInput, create: CityCreateInput, update: CityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City> | prisma.City
  }
  deleteCity: {
    type: 'City'
    args: Record<MutationDeleteCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City | null> | prisma.City | null
  }
  deleteManyCities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createContactUs: {
    type: 'ContactUs'
    args: Record<MutationCreateContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ContactUsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs> | prisma.ContactUs
  }
  updateContactUs: {
    type: 'ContactUs'
    args: Record<MutationUpdateContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ContactUsUpdateInput, where: ContactUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs | null> | prisma.ContactUs | null
  }
  updateManyContactUses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyContactUsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ContactUsUpdateManyMutationInput, where?: ContactUsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertContactUs: {
    type: 'ContactUs'
    args: Record<MutationUpsertContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ContactUsWhereUniqueInput, create: ContactUsCreateInput, update: ContactUsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs> | prisma.ContactUs
  }
  deleteContactUs: {
    type: 'ContactUs'
    args: Record<MutationDeleteContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ContactUsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs | null> | prisma.ContactUs | null
  }
  deleteManyContactUses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyContactUsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ContactUsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCountry: {
    type: 'Country'
    args: Record<MutationCreateCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CountryCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country> | prisma.Country
  }
  updateCountry: {
    type: 'Country'
    args: Record<MutationUpdateCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CountryUpdateInput, where: CountryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country | null> | prisma.Country | null
  }
  updateManyCountries: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCountriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CountryUpdateManyMutationInput, where?: CountryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCountry: {
    type: 'Country'
    args: Record<MutationUpsertCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CountryWhereUniqueInput, create: CountryCreateInput, update: CountryUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country> | prisma.Country
  }
  deleteCountry: {
    type: 'Country'
    args: Record<MutationDeleteCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CountryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country | null> | prisma.Country | null
  }
  deleteManyCountries: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCountriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CountryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDisease: {
    type: 'Disease'
    args: Record<MutationCreateDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease> | prisma.Disease
  }
  updateDisease: {
    type: 'Disease'
    args: Record<MutationUpdateDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseUpdateInput, where: DiseaseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease | null> | prisma.Disease | null
  }
  updateManyDiseases: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDiseasesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseUpdateManyMutationInput, where?: DiseaseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDisease: {
    type: 'Disease'
    args: Record<MutationUpsertDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DiseaseWhereUniqueInput, create: DiseaseCreateInput, update: DiseaseUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease> | prisma.Disease
  }
  deleteDisease: {
    type: 'Disease'
    args: Record<MutationDeleteDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DiseaseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease | null> | prisma.Disease | null
  }
  deleteManyDiseases: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDiseasesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DiseaseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDiseaseCovered: {
    type: 'DiseaseCovered'
    args: Record<MutationCreateDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseCoveredCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered> | prisma.DiseaseCovered
  }
  updateDiseaseCovered: {
    type: 'DiseaseCovered'
    args: Record<MutationUpdateDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseCoveredUpdateInput, where: DiseaseCoveredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered | null> | prisma.DiseaseCovered | null
  }
  updateManyDiseaseCovereds: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDiseaseCoveredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DiseaseCoveredUpdateManyMutationInput, where?: DiseaseCoveredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDiseaseCovered: {
    type: 'DiseaseCovered'
    args: Record<MutationUpsertDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DiseaseCoveredWhereUniqueInput, create: DiseaseCoveredCreateInput, update: DiseaseCoveredUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered> | prisma.DiseaseCovered
  }
  deleteDiseaseCovered: {
    type: 'DiseaseCovered'
    args: Record<MutationDeleteDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DiseaseCoveredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered | null> | prisma.DiseaseCovered | null
  }
  deleteManyDiseaseCovereds: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDiseaseCoveredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DiseaseCoveredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctor: {
    type: 'Doctor'
    args: Record<MutationCreateDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor> | prisma.Doctor
  }
  updateDoctor: {
    type: 'Doctor'
    args: Record<MutationUpdateDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorUpdateInput, where: DoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  updateManyDoctors: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorUpdateManyMutationInput, where?: DoctorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDoctor: {
    type: 'Doctor'
    args: Record<MutationUpsertDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorWhereUniqueInput, create: DoctorCreateInput, update: DoctorUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor> | prisma.Doctor
  }
  deleteDoctor: {
    type: 'Doctor'
    args: Record<MutationDeleteDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  deleteManyDoctors: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctorOld: {
    type: 'DoctorOld'
    args: Record<MutationCreateDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorOldCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld> | prisma.DoctorOld
  }
  updateDoctorOld: {
    type: 'DoctorOld'
    args: Record<MutationUpdateDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorOldUpdateInput, where: DoctorOldWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld | null> | prisma.DoctorOld | null
  }
  updateManyDoctorOlds: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDoctorOldsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorOldUpdateManyMutationInput, where?: DoctorOldWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDoctorOld: {
    type: 'DoctorOld'
    args: Record<MutationUpsertDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorOldWhereUniqueInput, create: DoctorOldCreateInput, update: DoctorOldUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld> | prisma.DoctorOld
  }
  deleteDoctorOld: {
    type: 'DoctorOld'
    args: Record<MutationDeleteDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorOldWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld | null> | prisma.DoctorOld | null
  }
  deleteManyDoctorOlds: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorOldsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorOldWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctorShedule: {
    type: 'DoctorShedule'
    args: Record<MutationCreateDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule> | prisma.DoctorShedule
  }
  updateDoctorShedule: {
    type: 'DoctorShedule'
    args: Record<MutationUpdateDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleUpdateInput, where: DoctorSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule | null> | prisma.DoctorShedule | null
  }
  updateManyDoctorShedules: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDoctorShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleUpdateManyMutationInput, where?: DoctorSheduleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDoctorShedule: {
    type: 'DoctorShedule'
    args: Record<MutationUpsertDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorSheduleWhereUniqueInput, create: DoctorSheduleCreateInput, update: DoctorSheduleUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule> | prisma.DoctorShedule
  }
  deleteDoctorShedule: {
    type: 'DoctorShedule'
    args: Record<MutationDeleteDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule | null> | prisma.DoctorShedule | null
  }
  deleteManyDoctorShedules: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorSheduleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctorSheduleTime: {
    type: 'DoctorSheduleTime'
    args: Record<MutationCreateDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleTimeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime> | prisma.DoctorSheduleTime
  }
  updateDoctorSheduleTime: {
    type: 'DoctorSheduleTime'
    args: Record<MutationUpdateDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleTimeUpdateInput, where: DoctorSheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime | null> | prisma.DoctorSheduleTime | null
  }
  updateManyDoctorSheduleTimes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDoctorSheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSheduleTimeUpdateManyMutationInput, where?: DoctorSheduleTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDoctorSheduleTime: {
    type: 'DoctorSheduleTime'
    args: Record<MutationUpsertDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorSheduleTimeWhereUniqueInput, create: DoctorSheduleTimeCreateInput, update: DoctorSheduleTimeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime> | prisma.DoctorSheduleTime
  }
  deleteDoctorSheduleTime: {
    type: 'DoctorSheduleTime'
    args: Record<MutationDeleteDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorSheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime | null> | prisma.DoctorSheduleTime | null
  }
  deleteManyDoctorSheduleTimes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorSheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorSheduleTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctorSpeciality: {
    type: 'DoctorSpeciality'
    args: Record<MutationCreateDoctorSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorSpecialityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpeciality> | prisma.DoctorSpeciality
  }
  deleteManyDoctorSpecialities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorSpecialitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorSpecialityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDoctorsRating: {
    type: 'DoctorsRating'
    args: Record<MutationCreateDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorsRatingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating> | prisma.DoctorsRating
  }
  updateDoctorsRating: {
    type: 'DoctorsRating'
    args: Record<MutationUpdateDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorsRatingUpdateInput, where: DoctorsRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating | null> | prisma.DoctorsRating | null
  }
  updateManyDoctorsRatings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDoctorsRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DoctorsRatingUpdateManyMutationInput, where?: DoctorsRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDoctorsRating: {
    type: 'DoctorsRating'
    args: Record<MutationUpsertDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorsRatingWhereUniqueInput, create: DoctorsRatingCreateInput, update: DoctorsRatingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating> | prisma.DoctorsRating
  }
  deleteDoctorsRating: {
    type: 'DoctorsRating'
    args: Record<MutationDeleteDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DoctorsRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating | null> | prisma.DoctorsRating | null
  }
  deleteManyDoctorsRatings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDoctorsRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DoctorsRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDrShedule: {
    type: 'DrShedule'
    args: Record<MutationCreateDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DrSheduleCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule> | prisma.DrShedule
  }
  updateDrShedule: {
    type: 'DrShedule'
    args: Record<MutationUpdateDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DrSheduleUpdateInput, where: DrSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule | null> | prisma.DrShedule | null
  }
  updateManyDrShedules: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDrShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DrSheduleUpdateManyMutationInput, where?: DrSheduleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDrShedule: {
    type: 'DrShedule'
    args: Record<MutationUpsertDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DrSheduleWhereUniqueInput, create: DrSheduleCreateInput, update: DrSheduleUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule> | prisma.DrShedule
  }
  deleteDrShedule: {
    type: 'DrShedule'
    args: Record<MutationDeleteDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DrSheduleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule | null> | prisma.DrShedule | null
  }
  deleteManyDrShedules: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDrShedulesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DrSheduleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createFacility: {
    type: 'Facility'
    args: Record<MutationCreateFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FacilityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility> | prisma.Facility
  }
  updateFacility: {
    type: 'Facility'
    args: Record<MutationUpdateFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FacilityUpdateInput, where: FacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility | null> | prisma.Facility | null
  }
  updateManyFacilities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FacilityUpdateManyMutationInput, where?: FacilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertFacility: {
    type: 'Facility'
    args: Record<MutationUpsertFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: FacilityWhereUniqueInput, create: FacilityCreateInput, update: FacilityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility> | prisma.Facility
  }
  deleteFacility: {
    type: 'Facility'
    args: Record<MutationDeleteFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: FacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility | null> | prisma.Facility | null
  }
  deleteManyFacilities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: FacilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createHospital: {
    type: 'Hospital'
    args: Record<MutationCreateHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital> | prisma.Hospital
  }
  updateHospital: {
    type: 'Hospital'
    args: Record<MutationUpdateHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalUpdateInput, where: HospitalWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  updateManyHospitals: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyHospitalsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalUpdateManyMutationInput, where?: HospitalWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertHospital: {
    type: 'Hospital'
    args: Record<MutationUpsertHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalWhereUniqueInput, create: HospitalCreateInput, update: HospitalUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital> | prisma.Hospital
  }
  deleteHospital: {
    type: 'Hospital'
    args: Record<MutationDeleteHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  deleteManyHospitals: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyHospitalsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: HospitalWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createHospitalDoctor: {
    type: 'HospitalDoctor'
    args: Record<MutationCreateHospitalDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalDoctorCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctor> | prisma.HospitalDoctor
  }
  deleteManyHospitalDoctors: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyHospitalDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: HospitalDoctorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createHospitalFacility: {
    type: 'HospitalFacility'
    args: Record<MutationCreateHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalFacilityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility> | prisma.HospitalFacility
  }
  updateHospitalFacility: {
    type: 'HospitalFacility'
    args: Record<MutationUpdateHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalFacilityUpdateInput, where: HospitalFacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility | null> | prisma.HospitalFacility | null
  }
  updateManyHospitalFacilities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyHospitalFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalFacilityUpdateManyMutationInput, where?: HospitalFacilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertHospitalFacility: {
    type: 'HospitalFacility'
    args: Record<MutationUpsertHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalFacilityWhereUniqueInput, create: HospitalFacilityCreateInput, update: HospitalFacilityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility> | prisma.HospitalFacility
  }
  deleteHospitalFacility: {
    type: 'HospitalFacility'
    args: Record<MutationDeleteHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalFacilityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility | null> | prisma.HospitalFacility | null
  }
  deleteManyHospitalFacilities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyHospitalFacilitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: HospitalFacilityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createHospitalInsurance: {
    type: 'HospitalInsurance'
    args: Record<MutationCreateHospitalInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalInsuranceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsurance> | prisma.HospitalInsurance
  }
  deleteManyHospitalInsurances: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyHospitalInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: HospitalInsuranceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createHospitalRating: {
    type: 'HospitalRating'
    args: Record<MutationCreateHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalRatingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating> | prisma.HospitalRating
  }
  updateHospitalRating: {
    type: 'HospitalRating'
    args: Record<MutationUpdateHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalRatingUpdateInput, where: HospitalRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating | null> | prisma.HospitalRating | null
  }
  updateManyHospitalRatings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyHospitalRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: HospitalRatingUpdateManyMutationInput, where?: HospitalRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertHospitalRating: {
    type: 'HospitalRating'
    args: Record<MutationUpsertHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalRatingWhereUniqueInput, create: HospitalRatingCreateInput, update: HospitalRatingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating> | prisma.HospitalRating
  }
  deleteHospitalRating: {
    type: 'HospitalRating'
    args: Record<MutationDeleteHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: HospitalRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating | null> | prisma.HospitalRating | null
  }
  deleteManyHospitalRatings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyHospitalRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: HospitalRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createIllness: {
    type: 'Illness'
    args: Record<MutationCreateIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: IllnessCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness> | prisma.Illness
  }
  updateIllness: {
    type: 'Illness'
    args: Record<MutationUpdateIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: IllnessUpdateInput, where: IllnessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness | null> | prisma.Illness | null
  }
  updateManyIllnesses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyIllnessesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: IllnessUpdateManyMutationInput, where?: IllnessWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertIllness: {
    type: 'Illness'
    args: Record<MutationUpsertIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: IllnessWhereUniqueInput, create: IllnessCreateInput, update: IllnessUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness> | prisma.Illness
  }
  deleteIllness: {
    type: 'Illness'
    args: Record<MutationDeleteIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: IllnessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness | null> | prisma.Illness | null
  }
  deleteManyIllnesses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyIllnessesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: IllnessWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createInsurance: {
    type: 'Insurance'
    args: Record<MutationCreateInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance> | prisma.Insurance
  }
  updateInsurance: {
    type: 'Insurance'
    args: Record<MutationUpdateInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceUpdateInput, where: InsuranceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance | null> | prisma.Insurance | null
  }
  updateManyInsurances: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceUpdateManyMutationInput, where?: InsuranceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertInsurance: {
    type: 'Insurance'
    args: Record<MutationUpsertInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InsuranceWhereUniqueInput, create: InsuranceCreateInput, update: InsuranceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance> | prisma.Insurance
  }
  deleteInsurance: {
    type: 'Insurance'
    args: Record<MutationDeleteInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InsuranceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance | null> | prisma.Insurance | null
  }
  deleteManyInsurances: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyInsurancesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: InsuranceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createInsuranceCategory: {
    type: 'InsuranceCategory'
    args: Record<MutationCreateInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceCategoryCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory> | prisma.InsuranceCategory
  }
  updateInsuranceCategory: {
    type: 'InsuranceCategory'
    args: Record<MutationUpdateInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceCategoryUpdateInput, where: InsuranceCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory | null> | prisma.InsuranceCategory | null
  }
  updateManyInsuranceCategories: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyInsuranceCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InsuranceCategoryUpdateManyMutationInput, where?: InsuranceCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertInsuranceCategory: {
    type: 'InsuranceCategory'
    args: Record<MutationUpsertInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InsuranceCategoryWhereUniqueInput, create: InsuranceCategoryCreateInput, update: InsuranceCategoryUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory> | prisma.InsuranceCategory
  }
  deleteInsuranceCategory: {
    type: 'InsuranceCategory'
    args: Record<MutationDeleteInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InsuranceCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory | null> | prisma.InsuranceCategory | null
  }
  deleteManyInsuranceCategories: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyInsuranceCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: InsuranceCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createJob: {
    type: 'Job'
    args: Record<MutationCreateJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: JobCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job> | prisma.Job
  }
  updateJob: {
    type: 'Job'
    args: Record<MutationUpdateJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: JobUpdateInput, where: JobWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job | null> | prisma.Job | null
  }
  updateManyJobs: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyJobsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: JobUpdateManyMutationInput, where?: JobWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertJob: {
    type: 'Job'
    args: Record<MutationUpsertJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: JobWhereUniqueInput, create: JobCreateInput, update: JobUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job> | prisma.Job
  }
  deleteJob: {
    type: 'Job'
    args: Record<MutationDeleteJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: JobWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job | null> | prisma.Job | null
  }
  deleteManyJobs: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyJobsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: JobWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createLanguage: {
    type: 'Language'
    args: Record<MutationCreateLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LanguageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language> | prisma.Language
  }
  updateLanguage: {
    type: 'Language'
    args: Record<MutationUpdateLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LanguageUpdateInput, where: LanguageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language | null> | prisma.Language | null
  }
  updateManyLanguages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyLanguagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LanguageUpdateManyMutationInput, where?: LanguageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertLanguage: {
    type: 'Language'
    args: Record<MutationUpsertLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LanguageWhereUniqueInput, create: LanguageCreateInput, update: LanguageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language> | prisma.Language
  }
  deleteLanguage: {
    type: 'Language'
    args: Record<MutationDeleteLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LanguageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language | null> | prisma.Language | null
  }
  deleteManyLanguages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyLanguagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: LanguageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMessage: {
    type: 'Message'
    args: Record<MutationCreateMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  updateMessage: {
    type: 'Message'
    args: Record<MutationUpdateMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageUpdateInput, where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  updateManyMessages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageUpdateManyMutationInput, where?: MessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMessage: {
    type: 'Message'
    args: Record<MutationUpsertMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MessageWhereUniqueInput, create: MessageCreateInput, update: MessageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  deleteMessage: {
    type: 'Message'
    args: Record<MutationDeleteMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  deleteManyMessages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMigration: {
    type: 'Migration'
    args: Record<MutationCreateMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MigrationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration> | prisma.Migration
  }
  updateMigration: {
    type: 'Migration'
    args: Record<MutationUpdateMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MigrationUpdateInput, where: MigrationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration | null> | prisma.Migration | null
  }
  updateManyMigrations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMigrationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MigrationUpdateManyMutationInput, where?: MigrationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMigration: {
    type: 'Migration'
    args: Record<MutationUpsertMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MigrationWhereUniqueInput, create: MigrationCreateInput, update: MigrationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration> | prisma.Migration
  }
  deleteMigration: {
    type: 'Migration'
    args: Record<MutationDeleteMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MigrationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration | null> | prisma.Migration | null
  }
  deleteManyMigrations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMigrationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MigrationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOffer: {
    type: 'Offer'
    args: Record<MutationCreateOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  updateOffer: {
    type: 'Offer'
    args: Record<MutationUpdateOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferUpdateInput, where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  updateManyOffers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOffersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferUpdateManyMutationInput, where?: OfferWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOffer: {
    type: 'Offer'
    args: Record<MutationUpsertOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OfferWhereUniqueInput, create: OfferCreateInput, update: OfferUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  deleteOffer: {
    type: 'Offer'
    args: Record<MutationDeleteOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  deleteManyOffers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOffersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OfferWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOnlineAppointment: {
    type: 'OnlineAppointment'
    args: Record<MutationCreateOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineAppointmentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment> | prisma.OnlineAppointment
  }
  updateOnlineAppointment: {
    type: 'OnlineAppointment'
    args: Record<MutationUpdateOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineAppointmentUpdateInput, where: OnlineAppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment | null> | prisma.OnlineAppointment | null
  }
  updateManyOnlineAppointments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOnlineAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineAppointmentUpdateManyMutationInput, where?: OnlineAppointmentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOnlineAppointment: {
    type: 'OnlineAppointment'
    args: Record<MutationUpsertOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineAppointmentWhereUniqueInput, create: OnlineAppointmentCreateInput, update: OnlineAppointmentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment> | prisma.OnlineAppointment
  }
  deleteOnlineAppointment: {
    type: 'OnlineAppointment'
    args: Record<MutationDeleteOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineAppointmentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment | null> | prisma.OnlineAppointment | null
  }
  deleteManyOnlineAppointments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOnlineAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OnlineAppointmentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOnlineDoctor: {
    type: 'OnlineDoctor'
    args: Record<MutationCreateOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineDoctorCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor> | prisma.OnlineDoctor
  }
  updateOnlineDoctor: {
    type: 'OnlineDoctor'
    args: Record<MutationUpdateOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineDoctorUpdateInput, where: OnlineDoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor | null> | prisma.OnlineDoctor | null
  }
  updateManyOnlineDoctors: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOnlineDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineDoctorUpdateManyMutationInput, where?: OnlineDoctorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOnlineDoctor: {
    type: 'OnlineDoctor'
    args: Record<MutationUpsertOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineDoctorWhereUniqueInput, create: OnlineDoctorCreateInput, update: OnlineDoctorUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor> | prisma.OnlineDoctor
  }
  deleteOnlineDoctor: {
    type: 'OnlineDoctor'
    args: Record<MutationDeleteOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineDoctorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor | null> | prisma.OnlineDoctor | null
  }
  deleteManyOnlineDoctors: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOnlineDoctorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OnlineDoctorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOnlineRating: {
    type: 'OnlineRating'
    args: Record<MutationCreateOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineRatingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating> | prisma.OnlineRating
  }
  updateOnlineRating: {
    type: 'OnlineRating'
    args: Record<MutationUpdateOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineRatingUpdateInput, where: OnlineRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating | null> | prisma.OnlineRating | null
  }
  updateManyOnlineRatings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOnlineRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OnlineRatingUpdateManyMutationInput, where?: OnlineRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOnlineRating: {
    type: 'OnlineRating'
    args: Record<MutationUpsertOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineRatingWhereUniqueInput, create: OnlineRatingCreateInput, update: OnlineRatingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating> | prisma.OnlineRating
  }
  deleteOnlineRating: {
    type: 'OnlineRating'
    args: Record<MutationDeleteOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OnlineRatingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating | null> | prisma.OnlineRating | null
  }
  deleteManyOnlineRatings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOnlineRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OnlineRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOptTime: {
    type: 'OptTime'
    args: Record<MutationCreateOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptTimeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime> | prisma.OptTime
  }
  updateOptTime: {
    type: 'OptTime'
    args: Record<MutationUpdateOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptTimeUpdateInput, where: OptTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime | null> | prisma.OptTime | null
  }
  updateManyOptTimes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOptTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptTimeUpdateManyMutationInput, where?: OptTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOptTime: {
    type: 'OptTime'
    args: Record<MutationUpsertOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptTimeWhereUniqueInput, create: OptTimeCreateInput, update: OptTimeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime> | prisma.OptTime
  }
  deleteOptTime: {
    type: 'OptTime'
    args: Record<MutationDeleteOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime | null> | prisma.OptTime | null
  }
  deleteManyOptTimes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOptTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OptTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPasswordReset: {
    type: 'PasswordReset'
    args: Record<MutationCreatePasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PasswordResetCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset> | prisma.PasswordReset
  }
  updatePasswordReset: {
    type: 'PasswordReset'
    args: Record<MutationUpdatePasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PasswordResetUpdateInput, where: PasswordResetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset | null> | prisma.PasswordReset | null
  }
  updateManyPasswordResets: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPasswordResetsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PasswordResetUpdateManyMutationInput, where?: PasswordResetWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPasswordReset: {
    type: 'PasswordReset'
    args: Record<MutationUpsertPasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PasswordResetWhereUniqueInput, create: PasswordResetCreateInput, update: PasswordResetUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset> | prisma.PasswordReset
  }
  deletePasswordReset: {
    type: 'PasswordReset'
    args: Record<MutationDeletePasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PasswordResetWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset | null> | prisma.PasswordReset | null
  }
  deleteManyPasswordResets: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPasswordResetsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PasswordResetWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPatient: {
    type: 'Patient'
    args: Record<MutationCreatePatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PatientCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient> | prisma.Patient
  }
  updatePatient: {
    type: 'Patient'
    args: Record<MutationUpdatePatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PatientUpdateInput, where: PatientWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient | null> | prisma.Patient | null
  }
  updateManyPatients: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPatientsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PatientUpdateManyMutationInput, where?: PatientWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPatient: {
    type: 'Patient'
    args: Record<MutationUpsertPatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PatientWhereUniqueInput, create: PatientCreateInput, update: PatientUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient> | prisma.Patient
  }
  deletePatient: {
    type: 'Patient'
    args: Record<MutationDeletePatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PatientWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient | null> | prisma.Patient | null
  }
  deleteManyPatients: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPatientsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PatientWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSearchDesign: {
    type: 'SearchDesign'
    args: Record<MutationCreateSearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SearchDesignCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign> | prisma.SearchDesign
  }
  updateSearchDesign: {
    type: 'SearchDesign'
    args: Record<MutationUpdateSearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SearchDesignUpdateInput, where: SearchDesignWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign | null> | prisma.SearchDesign | null
  }
  updateManySearchDesigns: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySearchDesignsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SearchDesignUpdateManyMutationInput, where?: SearchDesignWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSearchDesign: {
    type: 'SearchDesign'
    args: Record<MutationUpsertSearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SearchDesignWhereUniqueInput, create: SearchDesignCreateInput, update: SearchDesignUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign> | prisma.SearchDesign
  }
  deleteSearchDesign: {
    type: 'SearchDesign'
    args: Record<MutationDeleteSearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SearchDesignWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign | null> | prisma.SearchDesign | null
  }
  deleteManySearchDesigns: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySearchDesignsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SearchDesignWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSheduleTime: {
    type: 'SheduleTime'
    args: Record<MutationCreateSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SheduleTimeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime> | prisma.SheduleTime
  }
  updateSheduleTime: {
    type: 'SheduleTime'
    args: Record<MutationUpdateSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SheduleTimeUpdateInput, where: SheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime | null> | prisma.SheduleTime | null
  }
  updateManySheduleTimes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SheduleTimeUpdateManyMutationInput, where?: SheduleTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSheduleTime: {
    type: 'SheduleTime'
    args: Record<MutationUpsertSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SheduleTimeWhereUniqueInput, create: SheduleTimeCreateInput, update: SheduleTimeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime> | prisma.SheduleTime
  }
  deleteSheduleTime: {
    type: 'SheduleTime'
    args: Record<MutationDeleteSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SheduleTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime | null> | prisma.SheduleTime | null
  }
  deleteManySheduleTimes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySheduleTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SheduleTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSlider: {
    type: 'Slider'
    args: Record<MutationCreateSliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SliderCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider> | prisma.Slider
  }
  updateSlider: {
    type: 'Slider'
    args: Record<MutationUpdateSliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SliderUpdateInput, where: SliderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider | null> | prisma.Slider | null
  }
  updateManySliders: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySlidersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SliderUpdateManyMutationInput, where?: SliderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSlider: {
    type: 'Slider'
    args: Record<MutationUpsertSliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SliderWhereUniqueInput, create: SliderCreateInput, update: SliderUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider> | prisma.Slider
  }
  deleteSlider: {
    type: 'Slider'
    args: Record<MutationDeleteSliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SliderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider | null> | prisma.Slider | null
  }
  deleteManySliders: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySlidersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SliderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSpeciality: {
    type: 'Speciality'
    args: Record<MutationCreateSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpecialityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality> | prisma.Speciality
  }
  updateSpeciality: {
    type: 'Speciality'
    args: Record<MutationUpdateSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpecialityUpdateInput, where: SpecialityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  updateManySpecialities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySpecialitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SpecialityUpdateManyMutationInput, where?: SpecialityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSpeciality: {
    type: 'Speciality'
    args: Record<MutationUpsertSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SpecialityWhereUniqueInput, create: SpecialityCreateInput, update: SpecialityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality> | prisma.Speciality
  }
  deleteSpeciality: {
    type: 'Speciality'
    args: Record<MutationDeleteSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SpecialityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  deleteManySpecialities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySpecialitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SpecialityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createEmailSubscription: {
    type: 'EmailSubscription'
    args: Record<MutationCreateEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: EmailSubscriptionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription> | prisma.EmailSubscription
  }
  updateEmailSubscription: {
    type: 'EmailSubscription'
    args: Record<MutationUpdateEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: EmailSubscriptionUpdateInput, where: EmailSubscriptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription | null> | prisma.EmailSubscription | null
  }
  updateManyEmailSubscriptions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyEmailSubscriptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: EmailSubscriptionUpdateManyMutationInput, where?: EmailSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertEmailSubscription: {
    type: 'EmailSubscription'
    args: Record<MutationUpsertEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: EmailSubscriptionWhereUniqueInput, create: EmailSubscriptionCreateInput, update: EmailSubscriptionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription> | prisma.EmailSubscription
  }
  deleteEmailSubscription: {
    type: 'EmailSubscription'
    args: Record<MutationDeleteEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: EmailSubscriptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription | null> | prisma.EmailSubscription | null
  }
  deleteManyEmailSubscriptions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyEmailSubscriptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: EmailSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createVideoRequest: {
    type: 'VideoRequest'
    args: Record<MutationCreateVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VideoRequestCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest> | prisma.VideoRequest
  }
  updateVideoRequest: {
    type: 'VideoRequest'
    args: Record<MutationUpdateVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VideoRequestUpdateInput, where: VideoRequestWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest | null> | prisma.VideoRequest | null
  }
  updateManyVideoRequests: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyVideoRequestsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VideoRequestUpdateManyMutationInput, where?: VideoRequestWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertVideoRequest: {
    type: 'VideoRequest'
    args: Record<MutationUpsertVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VideoRequestWhereUniqueInput, create: VideoRequestCreateInput, update: VideoRequestUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest> | prisma.VideoRequest
  }
  deleteVideoRequest: {
    type: 'VideoRequest'
    args: Record<MutationDeleteVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VideoRequestWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest | null> | prisma.VideoRequest | null
  }
  deleteManyVideoRequests: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyVideoRequestsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: VideoRequestWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createVisitor: {
    type: 'Visitor'
    args: Record<MutationCreateVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VisitorCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor> | prisma.Visitor
  }
  updateVisitor: {
    type: 'Visitor'
    args: Record<MutationUpdateVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VisitorUpdateInput, where: VisitorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor | null> | prisma.Visitor | null
  }
  updateManyVisitors: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyVisitorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VisitorUpdateManyMutationInput, where?: VisitorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertVisitor: {
    type: 'Visitor'
    args: Record<MutationUpsertVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VisitorWhereUniqueInput, create: VisitorCreateInput, update: VisitorUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor> | prisma.Visitor
  }
  deleteVisitor: {
    type: 'Visitor'
    args: Record<MutationDeleteVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VisitorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor | null> | prisma.Visitor | null
  }
  deleteManyVisitors: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyVisitorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: VisitorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTranslation: {
    type: 'Translation'
    args: Record<MutationCreateTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TranslationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation> | prisma.Translation
  }
  updateTranslation: {
    type: 'Translation'
    args: Record<MutationUpdateTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TranslationUpdateInput, where: TranslationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation | null> | prisma.Translation | null
  }
  updateManyTranslations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTranslationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TranslationUpdateManyMutationInput, where?: TranslationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTranslation: {
    type: 'Translation'
    args: Record<MutationUpsertTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TranslationWhereUniqueInput, create: TranslationCreateInput, update: TranslationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation> | prisma.Translation
  }
  deleteTranslation: {
    type: 'Translation'
    args: Record<MutationDeleteTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TranslationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation | null> | prisma.Translation | null
  }
  deleteManyTranslations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTranslationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TranslationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPage: {
    type: 'Page'
    args: Record<MutationCreatePageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page> | prisma.Page
  }
  updatePage: {
    type: 'Page'
    args: Record<MutationUpdatePageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PageUpdateInput, where: PageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page | null> | prisma.Page | null
  }
  updateManyPages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PageUpdateManyMutationInput, where?: PageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPage: {
    type: 'Page'
    args: Record<MutationUpsertPageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PageWhereUniqueInput, create: PageCreateInput, update: PageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page> | prisma.Page
  }
  deletePage: {
    type: 'Page'
    args: Record<MutationDeletePageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page | null> | prisma.Page | null
  }
  deleteManyPages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'aboutUs', args?: SubscriptionAboutUsArgs[] | false, alias?: string  } 
  | { name: 'admin', args?: SubscriptionAdminArgs[] | false, alias?: string  } 
  | { name: 'appointment', args?: SubscriptionAppointmentArgs[] | false, alias?: string  } 
  | { name: 'blog', args?: SubscriptionBlogArgs[] | false, alias?: string  } 
  | { name: 'blogComment', args?: SubscriptionBlogCommentArgs[] | false, alias?: string  } 
  | { name: 'blogPost', args?: SubscriptionBlogPostArgs[] | false, alias?: string  } 
  | { name: 'postImage', args?: SubscriptionPostImageArgs[] | false, alias?: string  } 
  | { name: 'city', args?: SubscriptionCityArgs[] | false, alias?: string  } 
  | { name: 'contactUs', args?: SubscriptionContactUsArgs[] | false, alias?: string  } 
  | { name: 'country', args?: SubscriptionCountryArgs[] | false, alias?: string  } 
  | { name: 'disease', args?: SubscriptionDiseaseArgs[] | false, alias?: string  } 
  | { name: 'diseaseCovered', args?: SubscriptionDiseaseCoveredArgs[] | false, alias?: string  } 
  | { name: 'doctor', args?: SubscriptionDoctorArgs[] | false, alias?: string  } 
  | { name: 'doctorOld', args?: SubscriptionDoctorOldArgs[] | false, alias?: string  } 
  | { name: 'doctorShedule', args?: SubscriptionDoctorSheduleArgs[] | false, alias?: string  } 
  | { name: 'doctorSheduleTime', args?: SubscriptionDoctorSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'doctorSpeciality', args?: SubscriptionDoctorSpecialityArgs[] | false, alias?: string  } 
  | { name: 'doctorsRating', args?: SubscriptionDoctorsRatingArgs[] | false, alias?: string  } 
  | { name: 'drShedule', args?: SubscriptionDrSheduleArgs[] | false, alias?: string  } 
  | { name: 'facility', args?: SubscriptionFacilityArgs[] | false, alias?: string  } 
  | { name: 'hospital', args?: SubscriptionHospitalArgs[] | false, alias?: string  } 
  | { name: 'hospitalDoctor', args?: SubscriptionHospitalDoctorArgs[] | false, alias?: string  } 
  | { name: 'hospitalFacility', args?: SubscriptionHospitalFacilityArgs[] | false, alias?: string  } 
  | { name: 'hospitalInsurance', args?: SubscriptionHospitalInsuranceArgs[] | false, alias?: string  } 
  | { name: 'hospitalRating', args?: SubscriptionHospitalRatingArgs[] | false, alias?: string  } 
  | { name: 'illness', args?: SubscriptionIllnessArgs[] | false, alias?: string  } 
  | { name: 'insurance', args?: SubscriptionInsuranceArgs[] | false, alias?: string  } 
  | { name: 'insuranceCategory', args?: SubscriptionInsuranceCategoryArgs[] | false, alias?: string  } 
  | { name: 'job', args?: SubscriptionJobArgs[] | false, alias?: string  } 
  | { name: 'language', args?: SubscriptionLanguageArgs[] | false, alias?: string  } 
  | { name: 'message', args?: SubscriptionMessageArgs[] | false, alias?: string  } 
  | { name: 'migration', args?: SubscriptionMigrationArgs[] | false, alias?: string  } 
  | { name: 'offer', args?: SubscriptionOfferArgs[] | false, alias?: string  } 
  | { name: 'onlineAppointment', args?: SubscriptionOnlineAppointmentArgs[] | false, alias?: string  } 
  | { name: 'onlineDoctor', args?: SubscriptionOnlineDoctorArgs[] | false, alias?: string  } 
  | { name: 'onlineRating', args?: SubscriptionOnlineRatingArgs[] | false, alias?: string  } 
  | { name: 'optTime', args?: SubscriptionOptTimeArgs[] | false, alias?: string  } 
  | { name: 'passwordReset', args?: SubscriptionPasswordResetArgs[] | false, alias?: string  } 
  | { name: 'patient', args?: SubscriptionPatientArgs[] | false, alias?: string  } 
  | { name: 'searchDesign', args?: SubscriptionSearchDesignArgs[] | false, alias?: string  } 
  | { name: 'sheduleTime', args?: SubscriptionSheduleTimeArgs[] | false, alias?: string  } 
  | { name: 'slider', args?: SubscriptionSliderArgs[] | false, alias?: string  } 
  | { name: 'speciality', args?: SubscriptionSpecialityArgs[] | false, alias?: string  } 
  | { name: 'emailSubscription', args?: SubscriptionEmailSubscriptionArgs[] | false, alias?: string  } 
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'videoRequest', args?: SubscriptionVideoRequestArgs[] | false, alias?: string  } 
  | { name: 'visitor', args?: SubscriptionVisitorArgs[] | false, alias?: string  } 
  | { name: 'translation', args?: SubscriptionTranslationArgs[] | false, alias?: string  } 
  | { name: 'page', args?: SubscriptionPageArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'aboutUs'
  | 'admin'
  | 'appointment'
  | 'blog'
  | 'blogComment'
  | 'blogPost'
  | 'postImage'
  | 'city'
  | 'contactUs'
  | 'country'
  | 'disease'
  | 'diseaseCovered'
  | 'doctor'
  | 'doctorOld'
  | 'doctorShedule'
  | 'doctorSheduleTime'
  | 'doctorSpeciality'
  | 'doctorsRating'
  | 'drShedule'
  | 'facility'
  | 'hospital'
  | 'hospitalDoctor'
  | 'hospitalFacility'
  | 'hospitalInsurance'
  | 'hospitalRating'
  | 'illness'
  | 'insurance'
  | 'insuranceCategory'
  | 'job'
  | 'language'
  | 'message'
  | 'migration'
  | 'offer'
  | 'onlineAppointment'
  | 'onlineDoctor'
  | 'onlineRating'
  | 'optTime'
  | 'passwordReset'
  | 'patient'
  | 'searchDesign'
  | 'sheduleTime'
  | 'slider'
  | 'speciality'
  | 'emailSubscription'
  | 'user'
  | 'videoRequest'
  | 'visitor'
  | 'translation'
  | 'page'


type SubscriptionAboutUsArgs =
  | 'where'
type SubscriptionAdminArgs =
  | 'where'
type SubscriptionAppointmentArgs =
  | 'where'
type SubscriptionBlogArgs =
  | 'where'
type SubscriptionBlogCommentArgs =
  | 'where'
type SubscriptionBlogPostArgs =
  | 'where'
type SubscriptionPostImageArgs =
  | 'where'
type SubscriptionCityArgs =
  | 'where'
type SubscriptionContactUsArgs =
  | 'where'
type SubscriptionCountryArgs =
  | 'where'
type SubscriptionDiseaseArgs =
  | 'where'
type SubscriptionDiseaseCoveredArgs =
  | 'where'
type SubscriptionDoctorArgs =
  | 'where'
type SubscriptionDoctorOldArgs =
  | 'where'
type SubscriptionDoctorSheduleArgs =
  | 'where'
type SubscriptionDoctorSheduleTimeArgs =
  | 'where'
type SubscriptionDoctorSpecialityArgs =
  | 'where'
type SubscriptionDoctorsRatingArgs =
  | 'where'
type SubscriptionDrSheduleArgs =
  | 'where'
type SubscriptionFacilityArgs =
  | 'where'
type SubscriptionHospitalArgs =
  | 'where'
type SubscriptionHospitalDoctorArgs =
  | 'where'
type SubscriptionHospitalFacilityArgs =
  | 'where'
type SubscriptionHospitalInsuranceArgs =
  | 'where'
type SubscriptionHospitalRatingArgs =
  | 'where'
type SubscriptionIllnessArgs =
  | 'where'
type SubscriptionInsuranceArgs =
  | 'where'
type SubscriptionInsuranceCategoryArgs =
  | 'where'
type SubscriptionJobArgs =
  | 'where'
type SubscriptionLanguageArgs =
  | 'where'
type SubscriptionMessageArgs =
  | 'where'
type SubscriptionMigrationArgs =
  | 'where'
type SubscriptionOfferArgs =
  | 'where'
type SubscriptionOnlineAppointmentArgs =
  | 'where'
type SubscriptionOnlineDoctorArgs =
  | 'where'
type SubscriptionOnlineRatingArgs =
  | 'where'
type SubscriptionOptTimeArgs =
  | 'where'
type SubscriptionPasswordResetArgs =
  | 'where'
type SubscriptionPatientArgs =
  | 'where'
type SubscriptionSearchDesignArgs =
  | 'where'
type SubscriptionSheduleTimeArgs =
  | 'where'
type SubscriptionSliderArgs =
  | 'where'
type SubscriptionSpecialityArgs =
  | 'where'
type SubscriptionEmailSubscriptionArgs =
  | 'where'
type SubscriptionUserArgs =
  | 'where'
type SubscriptionVideoRequestArgs =
  | 'where'
type SubscriptionVisitorArgs =
  | 'where'
type SubscriptionTranslationArgs =
  | 'where'
type SubscriptionPageArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  aboutUs: {
    type: 'AboutUsSubscriptionPayload'
    args: Record<SubscriptionAboutUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AboutUsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUsSubscriptionPayload | null> | prisma.AboutUsSubscriptionPayload | null
  }
  admin: {
    type: 'AdminSubscriptionPayload'
    args: Record<SubscriptionAdminArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AdminSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdminSubscriptionPayload | null> | prisma.AdminSubscriptionPayload | null
  }
  appointment: {
    type: 'AppointmentSubscriptionPayload'
    args: Record<SubscriptionAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AppointmentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentSubscriptionPayload | null> | prisma.AppointmentSubscriptionPayload | null
  }
  blog: {
    type: 'BlogSubscriptionPayload'
    args: Record<SubscriptionBlogArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BlogSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogSubscriptionPayload | null> | prisma.BlogSubscriptionPayload | null
  }
  blogComment: {
    type: 'BlogCommentSubscriptionPayload'
    args: Record<SubscriptionBlogCommentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BlogCommentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogCommentSubscriptionPayload | null> | prisma.BlogCommentSubscriptionPayload | null
  }
  blogPost: {
    type: 'BlogPostSubscriptionPayload'
    args: Record<SubscriptionBlogPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BlogPostSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPostSubscriptionPayload | null> | prisma.BlogPostSubscriptionPayload | null
  }
  postImage: {
    type: 'PostImageSubscriptionPayload'
    args: Record<SubscriptionPostImageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PostImageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImageSubscriptionPayload | null> | prisma.PostImageSubscriptionPayload | null
  }
  city: {
    type: 'CitySubscriptionPayload'
    args: Record<SubscriptionCityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CitySubscriptionPayload | null> | prisma.CitySubscriptionPayload | null
  }
  contactUs: {
    type: 'ContactUsSubscriptionPayload'
    args: Record<SubscriptionContactUsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ContactUsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUsSubscriptionPayload | null> | prisma.ContactUsSubscriptionPayload | null
  }
  country: {
    type: 'CountrySubscriptionPayload'
    args: Record<SubscriptionCountryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CountrySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CountrySubscriptionPayload | null> | prisma.CountrySubscriptionPayload | null
  }
  disease: {
    type: 'DiseaseSubscriptionPayload'
    args: Record<SubscriptionDiseaseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DiseaseSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseSubscriptionPayload | null> | prisma.DiseaseSubscriptionPayload | null
  }
  diseaseCovered: {
    type: 'DiseaseCoveredSubscriptionPayload'
    args: Record<SubscriptionDiseaseCoveredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DiseaseCoveredSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCoveredSubscriptionPayload | null> | prisma.DiseaseCoveredSubscriptionPayload | null
  }
  doctor: {
    type: 'DoctorSubscriptionPayload'
    args: Record<SubscriptionDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSubscriptionPayload | null> | prisma.DoctorSubscriptionPayload | null
  }
  doctorOld: {
    type: 'DoctorOldSubscriptionPayload'
    args: Record<SubscriptionDoctorOldArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorOldSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOldSubscriptionPayload | null> | prisma.DoctorOldSubscriptionPayload | null
  }
  doctorShedule: {
    type: 'DoctorSheduleSubscriptionPayload'
    args: Record<SubscriptionDoctorSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorSheduleSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleSubscriptionPayload | null> | prisma.DoctorSheduleSubscriptionPayload | null
  }
  doctorSheduleTime: {
    type: 'DoctorSheduleTimeSubscriptionPayload'
    args: Record<SubscriptionDoctorSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorSheduleTimeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTimeSubscriptionPayload | null> | prisma.DoctorSheduleTimeSubscriptionPayload | null
  }
  doctorSpeciality: {
    type: 'DoctorSpecialitySubscriptionPayload'
    args: Record<SubscriptionDoctorSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorSpecialitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpecialitySubscriptionPayload | null> | prisma.DoctorSpecialitySubscriptionPayload | null
  }
  doctorsRating: {
    type: 'DoctorsRatingSubscriptionPayload'
    args: Record<SubscriptionDoctorsRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DoctorsRatingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRatingSubscriptionPayload | null> | prisma.DoctorsRatingSubscriptionPayload | null
  }
  drShedule: {
    type: 'DrSheduleSubscriptionPayload'
    args: Record<SubscriptionDrSheduleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DrSheduleSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrSheduleSubscriptionPayload | null> | prisma.DrSheduleSubscriptionPayload | null
  }
  facility: {
    type: 'FacilitySubscriptionPayload'
    args: Record<SubscriptionFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: FacilitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FacilitySubscriptionPayload | null> | prisma.FacilitySubscriptionPayload | null
  }
  hospital: {
    type: 'HospitalSubscriptionPayload'
    args: Record<SubscriptionHospitalArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: HospitalSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalSubscriptionPayload | null> | prisma.HospitalSubscriptionPayload | null
  }
  hospitalDoctor: {
    type: 'HospitalDoctorSubscriptionPayload'
    args: Record<SubscriptionHospitalDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: HospitalDoctorSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctorSubscriptionPayload | null> | prisma.HospitalDoctorSubscriptionPayload | null
  }
  hospitalFacility: {
    type: 'HospitalFacilitySubscriptionPayload'
    args: Record<SubscriptionHospitalFacilityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: HospitalFacilitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacilitySubscriptionPayload | null> | prisma.HospitalFacilitySubscriptionPayload | null
  }
  hospitalInsurance: {
    type: 'HospitalInsuranceSubscriptionPayload'
    args: Record<SubscriptionHospitalInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: HospitalInsuranceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsuranceSubscriptionPayload | null> | prisma.HospitalInsuranceSubscriptionPayload | null
  }
  hospitalRating: {
    type: 'HospitalRatingSubscriptionPayload'
    args: Record<SubscriptionHospitalRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: HospitalRatingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRatingSubscriptionPayload | null> | prisma.HospitalRatingSubscriptionPayload | null
  }
  illness: {
    type: 'IllnessSubscriptionPayload'
    args: Record<SubscriptionIllnessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: IllnessSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.IllnessSubscriptionPayload | null> | prisma.IllnessSubscriptionPayload | null
  }
  insurance: {
    type: 'InsuranceSubscriptionPayload'
    args: Record<SubscriptionInsuranceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: InsuranceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceSubscriptionPayload | null> | prisma.InsuranceSubscriptionPayload | null
  }
  insuranceCategory: {
    type: 'InsuranceCategorySubscriptionPayload'
    args: Record<SubscriptionInsuranceCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: InsuranceCategorySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategorySubscriptionPayload | null> | prisma.InsuranceCategorySubscriptionPayload | null
  }
  job: {
    type: 'JobSubscriptionPayload'
    args: Record<SubscriptionJobArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: JobSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.JobSubscriptionPayload | null> | prisma.JobSubscriptionPayload | null
  }
  language: {
    type: 'LanguageSubscriptionPayload'
    args: Record<SubscriptionLanguageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: LanguageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LanguageSubscriptionPayload | null> | prisma.LanguageSubscriptionPayload | null
  }
  message: {
    type: 'MessageSubscriptionPayload'
    args: Record<SubscriptionMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MessageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageSubscriptionPayload | null> | prisma.MessageSubscriptionPayload | null
  }
  migration: {
    type: 'MigrationSubscriptionPayload'
    args: Record<SubscriptionMigrationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MigrationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MigrationSubscriptionPayload | null> | prisma.MigrationSubscriptionPayload | null
  }
  offer: {
    type: 'OfferSubscriptionPayload'
    args: Record<SubscriptionOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OfferSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferSubscriptionPayload | null> | prisma.OfferSubscriptionPayload | null
  }
  onlineAppointment: {
    type: 'OnlineAppointmentSubscriptionPayload'
    args: Record<SubscriptionOnlineAppointmentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OnlineAppointmentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointmentSubscriptionPayload | null> | prisma.OnlineAppointmentSubscriptionPayload | null
  }
  onlineDoctor: {
    type: 'OnlineDoctorSubscriptionPayload'
    args: Record<SubscriptionOnlineDoctorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OnlineDoctorSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctorSubscriptionPayload | null> | prisma.OnlineDoctorSubscriptionPayload | null
  }
  onlineRating: {
    type: 'OnlineRatingSubscriptionPayload'
    args: Record<SubscriptionOnlineRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OnlineRatingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRatingSubscriptionPayload | null> | prisma.OnlineRatingSubscriptionPayload | null
  }
  optTime: {
    type: 'OptTimeSubscriptionPayload'
    args: Record<SubscriptionOptTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OptTimeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTimeSubscriptionPayload | null> | prisma.OptTimeSubscriptionPayload | null
  }
  passwordReset: {
    type: 'PasswordResetSubscriptionPayload'
    args: Record<SubscriptionPasswordResetArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PasswordResetSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordResetSubscriptionPayload | null> | prisma.PasswordResetSubscriptionPayload | null
  }
  patient: {
    type: 'PatientSubscriptionPayload'
    args: Record<SubscriptionPatientArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PatientSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PatientSubscriptionPayload | null> | prisma.PatientSubscriptionPayload | null
  }
  searchDesign: {
    type: 'SearchDesignSubscriptionPayload'
    args: Record<SubscriptionSearchDesignArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SearchDesignSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesignSubscriptionPayload | null> | prisma.SearchDesignSubscriptionPayload | null
  }
  sheduleTime: {
    type: 'SheduleTimeSubscriptionPayload'
    args: Record<SubscriptionSheduleTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SheduleTimeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTimeSubscriptionPayload | null> | prisma.SheduleTimeSubscriptionPayload | null
  }
  slider: {
    type: 'SliderSubscriptionPayload'
    args: Record<SubscriptionSliderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SliderSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SliderSubscriptionPayload | null> | prisma.SliderSubscriptionPayload | null
  }
  speciality: {
    type: 'SpecialitySubscriptionPayload'
    args: Record<SubscriptionSpecialityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SpecialitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpecialitySubscriptionPayload | null> | prisma.SpecialitySubscriptionPayload | null
  }
  emailSubscription: {
    type: 'EmailSubscriptionSubscriptionPayload'
    args: Record<SubscriptionEmailSubscriptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: EmailSubscriptionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscriptionSubscriptionPayload | null> | prisma.EmailSubscriptionSubscriptionPayload | null
  }
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  videoRequest: {
    type: 'VideoRequestSubscriptionPayload'
    args: Record<SubscriptionVideoRequestArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: VideoRequestSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequestSubscriptionPayload | null> | prisma.VideoRequestSubscriptionPayload | null
  }
  visitor: {
    type: 'VisitorSubscriptionPayload'
    args: Record<SubscriptionVisitorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: VisitorSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VisitorSubscriptionPayload | null> | prisma.VisitorSubscriptionPayload | null
  }
  translation: {
    type: 'TranslationSubscriptionPayload'
    args: Record<SubscriptionTranslationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TranslationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TranslationSubscriptionPayload | null> | prisma.TranslationSubscriptionPayload | null
  }
  page: {
    type: 'PageSubscriptionPayload'
    args: Record<SubscriptionPageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageSubscriptionPayload | null> | prisma.PageSubscriptionPayload | null
  }
}
  

// Types for AboutUsSubscriptionPayload

type AboutUsSubscriptionPayloadObject =
  | AboutUsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AboutUsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AboutUsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AboutUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'AboutUs'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AboutUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUs | null> | prisma.AboutUs | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AboutUsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AboutUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AboutUsPreviousValues | null> | prisma.AboutUsPreviousValues | null
  }
}
  

// Types for AboutUsPreviousValues

type AboutUsPreviousValuesObject =
  | AboutUsPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabicContent', args?: [] | false, alias?: string  } 
  | { name: 'englishContent', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AboutUsPreviousValuesFields =
  | 'id'
  | 'arabicContent'
  | 'englishContent'
  | 'createdAt'
  | 'updatedAt'



  

export interface AboutUsPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabicContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  englishContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AdminSubscriptionPayload

type AdminSubscriptionPayloadObject =
  | AdminSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AdminSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AdminSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdminSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Admin'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AdminSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Admin | null> | prisma.Admin | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AdminPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AdminSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdminPreviousValues | null> | prisma.AdminPreviousValues | null
  }
}
  

// Types for AdminPreviousValues

type AdminPreviousValuesObject =
  | AdminPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'pass', args?: [] | false, alias?: string  } 
  | { name: 'superAdmin', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AdminPreviousValuesFields =
  | 'id'
  | 'email'
  | 'pass'
  | 'superAdmin'
  | 'user'
  | 'createdAt'
  | 'updatedAt'



  

export interface AdminPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pass: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  superAdmin: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AppointmentSubscriptionPayload

type AppointmentSubscriptionPayloadObject =
  | AppointmentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AppointmentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AppointmentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Appointment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointment | null> | prisma.Appointment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AppointmentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentPreviousValues | null> | prisma.AppointmentPreviousValues | null
  }
}
  

// Types for AppointmentPreviousValues

type AppointmentPreviousValuesObject =
  | AppointmentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apointmentDate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentFulldate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentTime', args?: [] | false, alias?: string  } 
  | { name: 'doctorArabic', args?: [] | false, alias?: string  } 
  | { name: 'doctorName', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'isRead', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phoneCode', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type AppointmentPreviousValuesFields =
  | 'id'
  | 'apointmentDate'
  | 'apointmentFulldate'
  | 'apointmentTime'
  | 'doctorArabic'
  | 'doctorName'
  | 'gender'
  | 'isRead'
  | 'phone'
  | 'phoneCode'
  | 'status'



  

export interface AppointmentPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentDate: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentFulldate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isRead: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogSubscriptionPayload

type BlogSubscriptionPayloadObject =
  | BlogSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BlogSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BlogSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Blog'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Blog | null> | prisma.Blog | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BlogPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPreviousValues | null> | prisma.BlogPreviousValues | null
  }
}
  

// Types for BlogPreviousValues

type BlogPreviousValuesObject =
  | BlogPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'bannerImage', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogPreviousValuesFields =
  | 'id'
  | 'bannerImage'
  | 'createdDate'
  | 'name'
  | 'status'
  | 'updatedAt'



  

export interface BlogPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bannerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogCommentSubscriptionPayload

type BlogCommentSubscriptionPayloadObject =
  | BlogCommentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BlogCommentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BlogCommentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogCommentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'BlogComment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogCommentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogComment | null> | prisma.BlogComment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BlogCommentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogCommentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogCommentPreviousValues | null> | prisma.BlogCommentPreviousValues | null
  }
}
  

// Types for BlogCommentPreviousValues

type BlogCommentPreviousValuesObject =
  | BlogCommentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'commentator', args?: [] | false, alias?: string  } 
  | { name: 'commentatorName', args?: [] | false, alias?: string  } 
  | { name: 'comments', args?: [] | false, alias?: string  } 
  | { name: 'logCreated', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogCommentPreviousValuesFields =
  | 'id'
  | 'commentator'
  | 'commentatorName'
  | 'comments'
  | 'logCreated'
  | 'updatedAt'



  

export interface BlogCommentPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  commentator: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  commentatorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comments: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logCreated: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BlogPostSubscriptionPayload

type BlogPostSubscriptionPayloadObject =
  | BlogPostSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BlogPostSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BlogPostSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BlogPostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'BlogPost'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogPostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPost | null> | prisma.BlogPost | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BlogPostPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BlogPostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BlogPostPreviousValues | null> | prisma.BlogPostPreviousValues | null
  }
}
  

// Types for BlogPostPreviousValues

type BlogPostPreviousValuesObject =
  | BlogPostPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'logCreated', args?: [] | false, alias?: string  } 
  | { name: 'postContent', args?: [] | false, alias?: string  } 
  | { name: 'postTitle', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'totalViewers', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type BlogPostPreviousValuesFields =
  | 'id'
  | 'logCreated'
  | 'postContent'
  | 'postTitle'
  | 'status'
  | 'totalViewers'
  | 'updatedAt'



  

export interface BlogPostPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logCreated: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postContent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postTitle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalViewers: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PostImageSubscriptionPayload

type PostImageSubscriptionPayloadObject =
  | PostImageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PostImageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PostImageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostImageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'PostImage'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostImageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImage | null> | prisma.PostImage | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PostImagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostImageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostImagePreviousValues | null> | prisma.PostImagePreviousValues | null
  }
}
  

// Types for PostImagePreviousValues

type PostImagePreviousValuesObject =
  | PostImagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'isDefault', args?: [] | false, alias?: string  } 
  | { name: 'pic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PostImagePreviousValuesFields =
  | 'id'
  | 'isDefault'
  | 'pic'
  | 'createdAt'
  | 'updatedAt'



  

export interface PostImagePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isDefault: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CitySubscriptionPayload

type CitySubscriptionPayloadObject =
  | CitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'City'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.City | null> | prisma.City | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CityPreviousValues | null> | prisma.CityPreviousValues | null
  }
}
  

// Types for CityPreviousValues

type CityPreviousValuesObject =
  | CityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'cityArabic', args?: [] | false, alias?: string  } 
  | { name: 'countryId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CityPreviousValuesFields =
  | 'id'
  | 'city'
  | 'cityArabic'
  | 'countryId'
  | 'createdAt'
  | 'updatedAt'



  

export interface CityPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cityArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  countryId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ContactUsSubscriptionPayload

type ContactUsSubscriptionPayloadObject =
  | ContactUsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ContactUsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ContactUsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ContactUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ContactUs'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ContactUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUs | null> | prisma.ContactUs | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ContactUsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ContactUsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ContactUsPreviousValues | null> | prisma.ContactUsPreviousValues | null
  }
}
  

// Types for ContactUsPreviousValues

type ContactUsPreviousValuesObject =
  | ContactUsPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'lat', args?: [] | false, alias?: string  } 
  | { name: 'lon', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'pobox', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ContactUsPreviousValuesFields =
  | 'id'
  | 'address'
  | 'email'
  | 'lat'
  | 'lon'
  | 'phone'
  | 'pobox'
  | 'createdAt'
  | 'updatedAt'



  

export interface ContactUsPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lat: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lon: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pobox: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CountrySubscriptionPayload

type CountrySubscriptionPayloadObject =
  | CountrySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CountrySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CountrySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CountrySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Country'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CountrySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Country | null> | prisma.Country | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CountryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CountrySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CountryPreviousValues | null> | prisma.CountryPreviousValues | null
  }
}
  

// Types for CountryPreviousValues

type CountryPreviousValuesObject =
  | CountryPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'countryArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CountryPreviousValuesFields =
  | 'id'
  | 'country'
  | 'countryArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface CountryPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  countryArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DiseaseSubscriptionPayload

type DiseaseSubscriptionPayloadObject =
  | DiseaseSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DiseaseSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DiseaseSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Disease'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DiseaseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Disease | null> | prisma.Disease | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DiseasePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DiseaseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseasePreviousValues | null> | prisma.DiseasePreviousValues | null
  }
}
  

// Types for DiseasePreviousValues

type DiseasePreviousValuesObject =
  | DiseasePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'disease', args?: [] | false, alias?: string  } 
  | { name: 'diseaseArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DiseasePreviousValuesFields =
  | 'id'
  | 'disease'
  | 'diseaseArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface DiseasePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  disease: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  diseaseArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DiseaseCoveredSubscriptionPayload

type DiseaseCoveredSubscriptionPayloadObject =
  | DiseaseCoveredSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DiseaseCoveredSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DiseaseCoveredSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DiseaseCoveredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DiseaseCovered'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DiseaseCoveredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCovered | null> | prisma.DiseaseCovered | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DiseaseCoveredPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DiseaseCoveredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DiseaseCoveredPreviousValues | null> | prisma.DiseaseCoveredPreviousValues | null
  }
}
  

// Types for DiseaseCoveredPreviousValues

type DiseaseCoveredPreviousValuesObject =
  | DiseaseCoveredPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'diseaseId', args?: [] | false, alias?: string  } 
  | { name: 'insuranceCatId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DiseaseCoveredPreviousValuesFields =
  | 'id'
  | 'diseaseId'
  | 'insuranceCatId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DiseaseCoveredPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  diseaseId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceCatId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSubscriptionPayload

type DoctorSubscriptionPayloadObject =
  | DoctorSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DoctorSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DoctorSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Doctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Doctor | null> | prisma.Doctor | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DoctorPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorPreviousValues | null> | prisma.DoctorPreviousValues | null
  }
}
  

// Types for DoctorPreviousValues

type DoctorPreviousValuesObject =
  | DoctorPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'fees', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'specialityId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 

type DoctorPreviousValuesFields =
  | 'id'
  | 'apiKey'
  | 'designation'
  | 'doctorCv'
  | 'email'
  | 'gender'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'fees'
  | 'picture'
  | 'specialityId'
  | 'status'
  | 'updatedAt'
  | 'createdDate'



  

export interface DoctorPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fees: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorOldSubscriptionPayload

type DoctorOldSubscriptionPayloadObject =
  | DoctorOldSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DoctorOldSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DoctorOldSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorOldSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DoctorOld'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorOldSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOld | null> | prisma.DoctorOld | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DoctorOldPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorOldSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorOldPreviousValues | null> | prisma.DoctorOldPreviousValues | null
  }
}
  

// Types for DoctorOldPreviousValues

type DoctorOldPreviousValuesObject =
  | DoctorOldPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'fees', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorOldPreviousValuesFields =
  | 'id'
  | 'apiKey'
  | 'createdDate'
  | 'designation'
  | 'doctorCv'
  | 'email'
  | 'gender'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'fees'
  | 'picture'
  | 'status'
  | 'updatedAt'



  

export interface DoctorOldPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fees: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSheduleSubscriptionPayload

type DoctorSheduleSubscriptionPayloadObject =
  | DoctorSheduleSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DoctorSheduleSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DoctorSheduleSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DoctorShedule'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedule | null> | prisma.DoctorShedule | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DoctorShedulePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorShedulePreviousValues | null> | prisma.DoctorShedulePreviousValues | null
  }
}
  

// Types for DoctorShedulePreviousValues

type DoctorShedulePreviousValuesObject =
  | DoctorShedulePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorShedulePreviousValuesFields =
  | 'id'
  | 'date'
  | 'doctorId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorShedulePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  date: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSheduleTimeSubscriptionPayload

type DoctorSheduleTimeSubscriptionPayloadObject =
  | DoctorSheduleTimeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DoctorSheduleTimeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DoctorSheduleTimeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DoctorSheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTime | null> | prisma.DoctorSheduleTime | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DoctorSheduleTimePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSheduleTimePreviousValues | null> | prisma.DoctorSheduleTimePreviousValues | null
  }
}
  

// Types for DoctorSheduleTimePreviousValues

type DoctorSheduleTimePreviousValuesObject =
  | DoctorSheduleTimePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'drSheduleId', args?: [] | false, alias?: string  } 
  | { name: 'scheduleTime', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorSheduleTimePreviousValuesFields =
  | 'id'
  | 'drSheduleId'
  | 'scheduleTime'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorSheduleTimePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  drSheduleId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleTime: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorSpecialitySubscriptionPayload

type DoctorSpecialitySubscriptionPayloadObject =
  | DoctorSpecialitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 

type DoctorSpecialitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'



  

export interface DoctorSpecialitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorSpecialitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DoctorSpeciality'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorSpecialitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorSpeciality | null> | prisma.DoctorSpeciality | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
}
  

// Types for DoctorsRatingSubscriptionPayload

type DoctorsRatingSubscriptionPayloadObject =
  | DoctorsRatingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DoctorsRatingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DoctorsRatingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DoctorsRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DoctorsRating'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorsRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRating | null> | prisma.DoctorsRating | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DoctorsRatingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DoctorsRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DoctorsRatingPreviousValues | null> | prisma.DoctorsRatingPreviousValues | null
  }
}
  

// Types for DoctorsRatingPreviousValues

type DoctorsRatingPreviousValuesObject =
  | DoctorsRatingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'systemIp', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DoctorsRatingPreviousValuesFields =
  | 'id'
  | 'rating'
  | 'systemIp'
  | 'createdAt'
  | 'updatedAt'



  

export interface DoctorsRatingPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  systemIp: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DrSheduleSubscriptionPayload

type DrSheduleSubscriptionPayloadObject =
  | DrSheduleSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DrSheduleSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DrSheduleSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DrSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DrShedule'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DrSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedule | null> | prisma.DrShedule | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DrShedulePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DrSheduleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DrShedulePreviousValues | null> | prisma.DrShedulePreviousValues | null
  }
}
  

// Types for DrShedulePreviousValues

type DrShedulePreviousValuesObject =
  | DrShedulePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DrShedulePreviousValuesFields =
  | 'id'
  | 'date'
  | 'doctorId'
  | 'hospitalId'
  | 'createdAt'
  | 'updatedAt'



  

export interface DrShedulePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for FacilitySubscriptionPayload

type FacilitySubscriptionPayloadObject =
  | FacilitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type FacilitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface FacilitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Facility'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Facility | null> | prisma.Facility | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'FacilityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FacilityPreviousValues | null> | prisma.FacilityPreviousValues | null
  }
}
  

// Types for FacilityPreviousValues

type FacilityPreviousValuesObject =
  | FacilityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'facility', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type FacilityPreviousValuesFields =
  | 'id'
  | 'facility'
  | 'createdAt'
  | 'updatedAt'



  

export interface FacilityPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  facility: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalSubscriptionPayload

type HospitalSubscriptionPayloadObject =
  | HospitalSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type HospitalSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface HospitalSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Hospital'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Hospital | null> | prisma.Hospital | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'HospitalPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalPreviousValues | null> | prisma.HospitalPreviousValues | null
  }
}
  

// Types for HospitalPreviousValues

type HospitalPreviousValuesObject =
  | HospitalPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'addressArabic', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'hospital', args?: [] | false, alias?: string  } 
  | { name: 'hospitalArabic', args?: [] | false, alias?: string  } 
  | { name: 'language', args?: [] | false, alias?: string  } 
  | { name: 'latitude', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'logo', args?: [] | false, alias?: string  } 
  | { name: 'longitude', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phone1', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'uniqeId', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 

type HospitalPreviousValuesFields =
  | 'id'
  | 'address'
  | 'addressArabic'
  | 'apiKey'
  | 'email'
  | 'hospital'
  | 'hospitalArabic'
  | 'language'
  | 'latitude'
  | 'location'
  | 'logo'
  | 'longitude'
  | 'password'
  | 'phone'
  | 'phone1'
  | 'status'
  | 'type'
  | 'uniqeId'
  | 'updatedAt'
  | 'createdAt'
  | 'createdDate'



  

export interface HospitalPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospital: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  latitude: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  longitude: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  uniqeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalDoctorSubscriptionPayload

type HospitalDoctorSubscriptionPayloadObject =
  | HospitalDoctorSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 

type HospitalDoctorSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'



  

export interface HospitalDoctorSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalDoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'HospitalDoctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalDoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalDoctor | null> | prisma.HospitalDoctor | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalFacilitySubscriptionPayload

type HospitalFacilitySubscriptionPayloadObject =
  | HospitalFacilitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type HospitalFacilitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface HospitalFacilitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalFacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'HospitalFacility'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalFacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacility | null> | prisma.HospitalFacility | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'HospitalFacilityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalFacilitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalFacilityPreviousValues | null> | prisma.HospitalFacilityPreviousValues | null
  }
}
  

// Types for HospitalFacilityPreviousValues

type HospitalFacilityPreviousValuesObject =
  | HospitalFacilityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'facilityId', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type HospitalFacilityPreviousValuesFields =
  | 'id'
  | 'facilityId'
  | 'hospitalId'
  | 'createdAt'
  | 'updatedAt'



  

export interface HospitalFacilityPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  facilityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalInsuranceSubscriptionPayload

type HospitalInsuranceSubscriptionPayloadObject =
  | HospitalInsuranceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 

type HospitalInsuranceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'



  

export interface HospitalInsuranceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalInsuranceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'HospitalInsurance'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalInsuranceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalInsurance | null> | prisma.HospitalInsurance | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
}
  

// Types for HospitalRatingSubscriptionPayload

type HospitalRatingSubscriptionPayloadObject =
  | HospitalRatingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type HospitalRatingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface HospitalRatingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"HospitalRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'HospitalRating'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRating | null> | prisma.HospitalRating | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'HospitalRatingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"HospitalRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.HospitalRatingPreviousValues | null> | prisma.HospitalRatingPreviousValues | null
  }
}
  

// Types for HospitalRatingPreviousValues

type HospitalRatingPreviousValuesObject =
  | HospitalRatingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type HospitalRatingPreviousValuesFields =
  | 'id'
  | 'hospitalId'
  | 'rating'
  | 'createdAt'
  | 'updatedAt'



  

export interface HospitalRatingPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for IllnessSubscriptionPayload

type IllnessSubscriptionPayloadObject =
  | IllnessSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type IllnessSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface IllnessSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"IllnessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Illness'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"IllnessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Illness | null> | prisma.Illness | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'IllnessPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"IllnessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.IllnessPreviousValues | null> | prisma.IllnessPreviousValues | null
  }
}
  

// Types for IllnessPreviousValues

type IllnessPreviousValuesObject =
  | IllnessPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'illness', args?: [] | false, alias?: string  } 
  | { name: 'illnessArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type IllnessPreviousValuesFields =
  | 'id'
  | 'illness'
  | 'illnessArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface IllnessPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  illness: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  illnessArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InsuranceSubscriptionPayload

type InsuranceSubscriptionPayloadObject =
  | InsuranceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type InsuranceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface InsuranceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Insurance'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InsuranceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Insurance | null> | prisma.Insurance | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'InsurancePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InsuranceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsurancePreviousValues | null> | prisma.InsurancePreviousValues | null
  }
}
  

// Types for InsurancePreviousValues

type InsurancePreviousValuesObject =
  | InsurancePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'countryId', args?: [] | false, alias?: string  } 
  | { name: 'insurance', args?: [] | false, alias?: string  } 
  | { name: 'insuranceArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type InsurancePreviousValuesFields =
  | 'id'
  | 'countryId'
  | 'insurance'
  | 'insuranceArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface InsurancePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  countryId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  insurance: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InsuranceCategorySubscriptionPayload

type InsuranceCategorySubscriptionPayloadObject =
  | InsuranceCategorySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type InsuranceCategorySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface InsuranceCategorySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InsuranceCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'InsuranceCategory'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InsuranceCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategory | null> | prisma.InsuranceCategory | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'InsuranceCategoryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InsuranceCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InsuranceCategoryPreviousValues | null> | prisma.InsuranceCategoryPreviousValues | null
  }
}
  

// Types for InsuranceCategoryPreviousValues

type InsuranceCategoryPreviousValuesObject =
  | InsuranceCategoryPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'insuranceId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type InsuranceCategoryPreviousValuesFields =
  | 'id'
  | 'category'
  | 'insuranceId'
  | 'createdAt'
  | 'updatedAt'



  

export interface InsuranceCategoryPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  category: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  insuranceId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for JobSubscriptionPayload

type JobSubscriptionPayloadObject =
  | JobSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type JobSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface JobSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"JobSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Job'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"JobSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Job | null> | prisma.Job | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'JobPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"JobSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.JobPreviousValues | null> | prisma.JobPreviousValues | null
  }
}
  

// Types for JobPreviousValues

type JobPreviousValuesObject =
  | JobPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'position', args?: [] | false, alias?: string  } 
  | { name: 'positionArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type JobPreviousValuesFields =
  | 'id'
  | 'position'
  | 'positionArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface JobPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  position: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  positionArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LanguageSubscriptionPayload

type LanguageSubscriptionPayloadObject =
  | LanguageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type LanguageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface LanguageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LanguageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Language'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LanguageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Language | null> | prisma.Language | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'LanguagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LanguageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LanguagePreviousValues | null> | prisma.LanguagePreviousValues | null
  }
}
  

// Types for LanguagePreviousValues

type LanguagePreviousValuesObject =
  | LanguagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'language', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type LanguagePreviousValuesFields =
  | 'id'
  | 'language'
  | 'createdAt'
  | 'updatedAt'



  

export interface LanguagePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MessageSubscriptionPayload

type MessageSubscriptionPayloadObject =
  | MessageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MessageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MessageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Message'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MessagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessagePreviousValues | null> | prisma.MessagePreviousValues | null
  }
}
  

// Types for MessagePreviousValues

type MessagePreviousValuesObject =
  | MessagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'fromUser', args?: [] | false, alias?: string  } 
  | { name: 'isDelete', args?: [] | false, alias?: string  } 
  | { name: 'isRead', args?: [] | false, alias?: string  } 
  | { name: 'logCreate', args?: [] | false, alias?: string  } 
  | { name: 'message', args?: [] | false, alias?: string  } 
  | { name: 'sentBy', args?: [] | false, alias?: string  } 
  | { name: 'toUser', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MessagePreviousValuesFields =
  | 'id'
  | 'fromUser'
  | 'isDelete'
  | 'isRead'
  | 'logCreate'
  | 'message'
  | 'sentBy'
  | 'toUser'
  | 'updatedAt'



  

export interface MessagePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fromUser: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isDelete: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isRead: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logCreate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  message: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sentBy: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  toUser: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MigrationSubscriptionPayload

type MigrationSubscriptionPayloadObject =
  | MigrationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MigrationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MigrationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MigrationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Migration'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MigrationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Migration | null> | prisma.Migration | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MigrationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MigrationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MigrationPreviousValues | null> | prisma.MigrationPreviousValues | null
  }
}
  

// Types for MigrationPreviousValues

type MigrationPreviousValuesObject =
  | MigrationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'batch', args?: [] | false, alias?: string  } 
  | { name: 'migration', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MigrationPreviousValuesFields =
  | 'id'
  | 'batch'
  | 'migration'
  | 'createdAt'
  | 'updatedAt'



  

export interface MigrationPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  batch: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  migration: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OfferSubscriptionPayload

type OfferSubscriptionPayloadObject =
  | OfferSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OfferSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OfferSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Offer'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OfferPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferPreviousValues | null> | prisma.OfferPreviousValues | null
  }
}
  

// Types for OfferPreviousValues

type OfferPreviousValuesObject =
  | OfferPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'descriptionArabic', args?: [] | false, alias?: string  } 
  | { name: 'endDate', args?: [] | false, alias?: string  } 
  | { name: 'heading', args?: [] | false, alias?: string  } 
  | { name: 'headingArabic', args?: [] | false, alias?: string  } 
  | { name: 'hospitalId', args?: [] | false, alias?: string  } 
  | { name: 'offerImage', args?: [] | false, alias?: string  } 
  | { name: 'position', args?: [] | false, alias?: string  } 
  | { name: 'startDate', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OfferPreviousValuesFields =
  | 'id'
  | 'description'
  | 'descriptionArabic'
  | 'endDate'
  | 'heading'
  | 'headingArabic'
  | 'hospitalId'
  | 'offerImage'
  | 'position'
  | 'startDate'
  | 'status'
  | 'type'
  | 'createdAt'
  | 'updatedAt'



  

export interface OfferPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  descriptionArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  endDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  heading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  headingArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hospitalId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  offerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  position: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineAppointmentSubscriptionPayload

type OnlineAppointmentSubscriptionPayloadObject =
  | OnlineAppointmentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OnlineAppointmentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OnlineAppointmentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineAppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OnlineAppointment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineAppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointment | null> | prisma.OnlineAppointment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OnlineAppointmentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineAppointmentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineAppointmentPreviousValues | null> | prisma.OnlineAppointmentPreviousValues | null
  }
}
  

// Types for OnlineAppointmentPreviousValues

type OnlineAppointmentPreviousValuesObject =
  | OnlineAppointmentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apointmentDate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentFulldate', args?: [] | false, alias?: string  } 
  | { name: 'apointmentTime', args?: [] | false, alias?: string  } 
  | { name: 'diseaseId', args?: [] | false, alias?: string  } 
  | { name: 'doctorArabic', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'doctorName', args?: [] | false, alias?: string  } 
  | { name: 'dtId', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'optId', args?: [] | false, alias?: string  } 
  | { name: 'patientId', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'phoneCode', args?: [] | false, alias?: string  } 
  | { name: 'scheduleTimeId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OnlineAppointmentPreviousValuesFields =
  | 'id'
  | 'apointmentDate'
  | 'apointmentFulldate'
  | 'apointmentTime'
  | 'diseaseId'
  | 'doctorArabic'
  | 'doctorId'
  | 'doctorName'
  | 'dtId'
  | 'gender'
  | 'optId'
  | 'patientId'
  | 'phone'
  | 'phoneCode'
  | 'scheduleTimeId'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface OnlineAppointmentPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentDate: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentFulldate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apointmentTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  diseaseId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  doctorName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dtId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  optId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  patientId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleTimeId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OnlineDoctorSubscriptionPayload

type OnlineDoctorSubscriptionPayloadObject =
  | OnlineDoctorSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OnlineDoctorSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OnlineDoctorSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineDoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OnlineDoctor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineDoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctor | null> | prisma.OnlineDoctor | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OnlineDoctorPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineDoctorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineDoctorPreviousValues | null> | prisma.OnlineDoctorPreviousValues | null
  }
}
  

// Types for OnlineDoctorPreviousValues

type OnlineDoctorPreviousValuesObject =
  | OnlineDoctorPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'designation', args?: [] | false, alias?: string  } 
  | { name: 'doctorCv', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'lastSeen', args?: [] | false, alias?: string  } 
  | { name: 'mohcard', args?: [] | false, alias?: string  } 
  | { name: 'mohId', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'nameArabic', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'specialityId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type OnlineDoctorPreviousValuesFields =
  | 'id'
  | 'apiKey'
  | 'createdDate'
  | 'designation'
  | 'doctorCv'
  | 'email'
  | 'gender'
  | 'lastSeen'
  | 'mohcard'
  | 'mohId'
  | 'name'
  | 'nameArabic'
  | 'password'
  | 'phone'
  | 'picture'
  | 'specialityId'
  | 'status'



  

export interface OnlineDoctorPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorCv: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeen: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mohcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mohId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  nameArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OnlineRatingSubscriptionPayload

type OnlineRatingSubscriptionPayloadObject =
  | OnlineRatingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OnlineRatingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OnlineRatingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OnlineRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OnlineRating'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRating | null> | prisma.OnlineRating | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OnlineRatingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OnlineRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OnlineRatingPreviousValues | null> | prisma.OnlineRatingPreviousValues | null
  }
}
  

// Types for OnlineRatingPreviousValues

type OnlineRatingPreviousValuesObject =
  | OnlineRatingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctorsId', args?: [] | false, alias?: string  } 
  | { name: 'rating', args?: [] | false, alias?: string  } 
  | { name: 'systemIp', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OnlineRatingPreviousValuesFields =
  | 'id'
  | 'doctorsId'
  | 'rating'
  | 'systemIp'
  | 'createdAt'
  | 'updatedAt'



  

export interface OnlineRatingPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorsId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  rating: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  systemIp: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptTimeSubscriptionPayload

type OptTimeSubscriptionPayloadObject =
  | OptTimeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OptTimeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OptTimeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OptTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTime | null> | prisma.OptTime | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OptTimePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptTimePreviousValues | null> | prisma.OptTimePreviousValues | null
  }
}
  

// Types for OptTimePreviousValues

type OptTimePreviousValuesObject =
  | OptTimePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'fifteenMins', args?: [] | false, alias?: string  } 
  | { name: 'thirtyMins', args?: [] | false, alias?: string  } 
  | { name: 'twentyMins', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptTimePreviousValuesFields =
  | 'id'
  | 'fifteenMins'
  | 'thirtyMins'
  | 'twentyMins'
  | 'createdAt'
  | 'updatedAt'



  

export interface OptTimePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fifteenMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  thirtyMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  twentyMins: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PasswordResetSubscriptionPayload

type PasswordResetSubscriptionPayloadObject =
  | PasswordResetSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PasswordResetSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PasswordResetSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PasswordResetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'PasswordReset'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PasswordResetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordReset | null> | prisma.PasswordReset | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PasswordResetPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PasswordResetSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PasswordResetPreviousValues | null> | prisma.PasswordResetPreviousValues | null
  }
}
  

// Types for PasswordResetPreviousValues

type PasswordResetPreviousValuesObject =
  | PasswordResetPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PasswordResetPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'email'
  | 'token'
  | 'updatedAt'



  

export interface PasswordResetPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PatientSubscriptionPayload

type PatientSubscriptionPayloadObject =
  | PatientSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PatientSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PatientSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PatientSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Patient'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PatientSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Patient | null> | prisma.Patient | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PatientPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PatientSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PatientPreviousValues | null> | prisma.PatientPreviousValues | null
  }
}
  

// Types for PatientPreviousValues

type PatientPreviousValuesObject =
  | PatientPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'age', args?: [] | false, alias?: string  } 
  | { name: 'apiKey', args?: [] | false, alias?: string  } 
  | { name: 'createdDate', args?: [] | false, alias?: string  } 
  | { name: 'dob', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 
  | { name: 'lastAction', args?: [] | false, alias?: string  } 
  | { name: 'lastSeen', args?: [] | false, alias?: string  } 
  | { name: 'mailSubs', args?: [] | false, alias?: string  } 
  | { name: 'mobile', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'uniqeId', args?: [] | false, alias?: string  } 

type PatientPreviousValuesFields =
  | 'id'
  | 'age'
  | 'apiKey'
  | 'createdDate'
  | 'dob'
  | 'email'
  | 'gender'
  | 'lastAction'
  | 'lastSeen'
  | 'mailSubs'
  | 'mobile'
  | 'name'
  | 'password'
  | 'status'
  | 'uniqeId'



  

export interface PatientPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  age: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiKey: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dob: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastAction: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeen: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mailSubs: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  mobile: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  uniqeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SearchDesignSubscriptionPayload

type SearchDesignSubscriptionPayloadObject =
  | SearchDesignSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SearchDesignSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SearchDesignSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SearchDesignSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'SearchDesign'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SearchDesignSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesign | null> | prisma.SearchDesign | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SearchDesignPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SearchDesignSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SearchDesignPreviousValues | null> | prisma.SearchDesignPreviousValues | null
  }
}
  

// Types for SearchDesignPreviousValues

type SearchDesignPreviousValuesObject =
  | SearchDesignPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'addressColor', args?: [] | false, alias?: string  } 
  | { name: 'addressFamily', args?: [] | false, alias?: string  } 
  | { name: 'addressStyle', args?: [] | false, alias?: string  } 
  | { name: 'designationColor', args?: [] | false, alias?: string  } 
  | { name: 'designationFamily', args?: [] | false, alias?: string  } 
  | { name: 'designationStyle', args?: [] | false, alias?: string  } 
  | { name: 'doctorColor', args?: [] | false, alias?: string  } 
  | { name: 'doctorFamily', args?: [] | false, alias?: string  } 
  | { name: 'doctorStyle', args?: [] | false, alias?: string  } 
  | { name: 'emailColor', args?: [] | false, alias?: string  } 
  | { name: 'emailFamily', args?: [] | false, alias?: string  } 
  | { name: 'emailStyle', args?: [] | false, alias?: string  } 
  | { name: 'nameColor', args?: [] | false, alias?: string  } 
  | { name: 'nameFamily', args?: [] | false, alias?: string  } 
  | { name: 'nameStyle', args?: [] | false, alias?: string  } 
  | { name: 'phoneColor', args?: [] | false, alias?: string  } 
  | { name: 'phoneFamily', args?: [] | false, alias?: string  } 
  | { name: 'phoneStyle', args?: [] | false, alias?: string  } 
  | { name: 'ratingColor', args?: [] | false, alias?: string  } 
  | { name: 'ratingFamily', args?: [] | false, alias?: string  } 
  | { name: 'ratingStyle', args?: [] | false, alias?: string  } 
  | { name: 'specialityColor', args?: [] | false, alias?: string  } 
  | { name: 'specialityFamily', args?: [] | false, alias?: string  } 
  | { name: 'specialityStyle', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SearchDesignPreviousValuesFields =
  | 'id'
  | 'addressColor'
  | 'addressFamily'
  | 'addressStyle'
  | 'designationColor'
  | 'designationFamily'
  | 'designationStyle'
  | 'doctorColor'
  | 'doctorFamily'
  | 'doctorStyle'
  | 'emailColor'
  | 'emailFamily'
  | 'emailStyle'
  | 'nameColor'
  | 'nameFamily'
  | 'nameStyle'
  | 'phoneColor'
  | 'phoneFamily'
  | 'phoneStyle'
  | 'ratingColor'
  | 'ratingFamily'
  | 'ratingStyle'
  | 'specialityColor'
  | 'specialityFamily'
  | 'specialityStyle'
  | 'createdAt'
  | 'updatedAt'



  

export interface SearchDesignPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  designationStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nameStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phoneStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ratingStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityColor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityFamily: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  specialityStyle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SheduleTimeSubscriptionPayload

type SheduleTimeSubscriptionPayloadObject =
  | SheduleTimeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SheduleTimeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SheduleTimeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'SheduleTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTime | null> | prisma.SheduleTime | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SheduleTimePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SheduleTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SheduleTimePreviousValues | null> | prisma.SheduleTimePreviousValues | null
  }
}
  

// Types for SheduleTimePreviousValues

type SheduleTimePreviousValuesObject =
  | SheduleTimePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'drSheduleId', args?: [] | false, alias?: string  } 
  | { name: 'scheduleFullDate', args?: [] | false, alias?: string  } 
  | { name: 'sheduleTime', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SheduleTimePreviousValuesFields =
  | 'id'
  | 'drSheduleId'
  | 'scheduleFullDate'
  | 'sheduleTime'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface SheduleTimePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  drSheduleId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  scheduleFullDate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sheduleTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SliderSubscriptionPayload

type SliderSubscriptionPayloadObject =
  | SliderSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SliderSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SliderSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SliderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Slider'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SliderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Slider | null> | prisma.Slider | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SliderPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SliderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SliderPreviousValues | null> | prisma.SliderPreviousValues | null
  }
}
  

// Types for SliderPreviousValues

type SliderPreviousValuesObject =
  | SliderPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabicHeading', args?: [] | false, alias?: string  } 
  | { name: 'banner', args?: [] | false, alias?: string  } 
  | { name: 'heading', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SliderPreviousValuesFields =
  | 'id'
  | 'arabicHeading'
  | 'banner'
  | 'heading'
  | 'createdAt'
  | 'updatedAt'



  

export interface SliderPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabicHeading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  banner: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  heading: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SpecialitySubscriptionPayload

type SpecialitySubscriptionPayloadObject =
  | SpecialitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SpecialitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SpecialitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SpecialitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Speciality'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpecialitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Speciality | null> | prisma.Speciality | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SpecialityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SpecialitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SpecialityPreviousValues | null> | prisma.SpecialityPreviousValues | null
  }
}
  

// Types for SpecialityPreviousValues

type SpecialityPreviousValuesObject =
  | SpecialityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'speciality', args?: [] | false, alias?: string  } 
  | { name: 'specialityArabic', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SpecialityPreviousValuesFields =
  | 'id'
  | 'speciality'
  | 'specialityArabic'
  | 'createdAt'
  | 'updatedAt'



  

export interface SpecialityPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  speciality: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialityArabic: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for EmailSubscriptionSubscriptionPayload

type EmailSubscriptionSubscriptionPayloadObject =
  | EmailSubscriptionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type EmailSubscriptionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface EmailSubscriptionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"EmailSubscriptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'EmailSubscription'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"EmailSubscriptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscription | null> | prisma.EmailSubscription | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'EmailSubscriptionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"EmailSubscriptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.EmailSubscriptionPreviousValues | null> | prisma.EmailSubscriptionPreviousValues | null
  }
}
  

// Types for EmailSubscriptionPreviousValues

type EmailSubscriptionPreviousValuesObject =
  | EmailSubscriptionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type EmailSubscriptionPreviousValuesFields =
  | 'id'
  | 'email'
  | 'createdAt'
  | 'updatedAt'



  

export interface EmailSubscriptionPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'rememberToken', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'email'
  | 'name'
  | 'password'
  | 'rememberToken'
  | 'updatedAt'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rememberToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for VideoRequestSubscriptionPayload

type VideoRequestSubscriptionPayloadObject =
  | VideoRequestSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type VideoRequestSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface VideoRequestSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VideoRequestSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'VideoRequest'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VideoRequestSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequest | null> | prisma.VideoRequest | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'VideoRequestPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VideoRequestSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VideoRequestPreviousValues | null> | prisma.VideoRequestPreviousValues | null
  }
}
  

// Types for VideoRequestPreviousValues

type VideoRequestPreviousValuesObject =
  | VideoRequestPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'doctorId', args?: [] | false, alias?: string  } 
  | { name: 'joinCall', args?: [] | false, alias?: string  } 
  | { name: 'patientId', args?: [] | false, alias?: string  } 
  | { name: 'requestDate', args?: [] | false, alias?: string  } 
  | { name: 'videoCode', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type VideoRequestPreviousValuesFields =
  | 'id'
  | 'doctorId'
  | 'joinCall'
  | 'patientId'
  | 'requestDate'
  | 'videoCode'
  | 'createdAt'
  | 'updatedAt'



  

export interface VideoRequestPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  doctorId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  joinCall: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  patientId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  requestDate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  videoCode: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for VisitorSubscriptionPayload

type VisitorSubscriptionPayloadObject =
  | VisitorSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type VisitorSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface VisitorSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VisitorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Visitor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VisitorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Visitor | null> | prisma.Visitor | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'VisitorPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VisitorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VisitorPreviousValues | null> | prisma.VisitorPreviousValues | null
  }
}
  

// Types for VisitorPreviousValues

type VisitorPreviousValuesObject =
  | VisitorPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'hits', args?: [] | false, alias?: string  } 
  | { name: 'ipAddress', args?: [] | false, alias?: string  } 
  | { name: 'visitDate', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type VisitorPreviousValuesFields =
  | 'id'
  | 'country'
  | 'hits'
  | 'ipAddress'
  | 'visitDate'
  | 'createdAt'
  | 'updatedAt'



  

export interface VisitorPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ipAddress: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  visitDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TranslationSubscriptionPayload

type TranslationSubscriptionPayloadObject =
  | TranslationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TranslationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TranslationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TranslationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Translation'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TranslationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Translation | null> | prisma.Translation | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TranslationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TranslationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TranslationPreviousValues | null> | prisma.TranslationPreviousValues | null
  }
}
  

// Types for TranslationPreviousValues

type TranslationPreviousValuesObject =
  | TranslationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'arabi', args?: [] | false, alias?: string  } 
  | { name: 'english', args?: [] | false, alias?: string  } 
  | { name: 'index', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type TranslationPreviousValuesFields =
  | 'id'
  | 'arabi'
  | 'english'
  | 'index'
  | 'createdAt'
  | 'updatedAt'



  

export interface TranslationPreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  arabi: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  english: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  index: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PageSubscriptionPayload

type PageSubscriptionPayloadObject =
  | PageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Page'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Page | null> | prisma.Page | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PagePreviousValues | null> | prisma.PagePreviousValues | null
  }
}
  

// Types for PagePreviousValues

type PagePreviousValuesObject =
  | PagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'slug_ar', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'title_ar', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'content_ar', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type PagePreviousValuesFields =
  | 'id'
  | 'slug'
  | 'slug_ar'
  | 'title'
  | 'title_ar'
  | 'content'
  | 'content_ar'
  | 'createdAt'
  | 'updatedAt'



  

export interface PagePreviousValuesFieldDetails {
  id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  slug_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  content_ar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface AboutUsWhereUniqueInput {
  id?: number | null
}
export type AboutUsWhereUniqueInputInputObject =
  | Extract<keyof AboutUsWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface AboutUsWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  arabicContent?: string | null
  arabicContent_not?: string | null
  arabicContent_in?: string[]
  arabicContent_not_in?: string[]
  arabicContent_lt?: string | null
  arabicContent_lte?: string | null
  arabicContent_gt?: string | null
  arabicContent_gte?: string | null
  arabicContent_contains?: string | null
  arabicContent_not_contains?: string | null
  arabicContent_starts_with?: string | null
  arabicContent_not_starts_with?: string | null
  arabicContent_ends_with?: string | null
  arabicContent_not_ends_with?: string | null
  englishContent?: string | null
  englishContent_not?: string | null
  englishContent_in?: string[]
  englishContent_not_in?: string[]
  englishContent_lt?: string | null
  englishContent_lte?: string | null
  englishContent_gt?: string | null
  englishContent_gte?: string | null
  englishContent_contains?: string | null
  englishContent_not_contains?: string | null
  englishContent_starts_with?: string | null
  englishContent_not_starts_with?: string | null
  englishContent_ends_with?: string | null
  englishContent_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: AboutUsWhereInput[]
  OR?: AboutUsWhereInput[]
  NOT?: AboutUsWhereInput[]
}
export type AboutUsWhereInputInputObject =
  | Extract<keyof AboutUsWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'arabicContent', alias?: string  } 
  | { name: 'arabicContent_not', alias?: string  } 
  | { name: 'arabicContent_in', alias?: string  } 
  | { name: 'arabicContent_not_in', alias?: string  } 
  | { name: 'arabicContent_lt', alias?: string  } 
  | { name: 'arabicContent_lte', alias?: string  } 
  | { name: 'arabicContent_gt', alias?: string  } 
  | { name: 'arabicContent_gte', alias?: string  } 
  | { name: 'arabicContent_contains', alias?: string  } 
  | { name: 'arabicContent_not_contains', alias?: string  } 
  | { name: 'arabicContent_starts_with', alias?: string  } 
  | { name: 'arabicContent_not_starts_with', alias?: string  } 
  | { name: 'arabicContent_ends_with', alias?: string  } 
  | { name: 'arabicContent_not_ends_with', alias?: string  } 
  | { name: 'englishContent', alias?: string  } 
  | { name: 'englishContent_not', alias?: string  } 
  | { name: 'englishContent_in', alias?: string  } 
  | { name: 'englishContent_not_in', alias?: string  } 
  | { name: 'englishContent_lt', alias?: string  } 
  | { name: 'englishContent_lte', alias?: string  } 
  | { name: 'englishContent_gt', alias?: string  } 
  | { name: 'englishContent_gte', alias?: string  } 
  | { name: 'englishContent_contains', alias?: string  } 
  | { name: 'englishContent_not_contains', alias?: string  } 
  | { name: 'englishContent_starts_with', alias?: string  } 
  | { name: 'englishContent_not_starts_with', alias?: string  } 
  | { name: 'englishContent_ends_with', alias?: string  } 
  | { name: 'englishContent_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AdminWhereUniqueInput {
  id?: number | null
  email?: string | null
  user?: string | null
}
export type AdminWhereUniqueInputInputObject =
  | Extract<keyof AdminWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface AdminWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  pass?: string | null
  pass_not?: string | null
  pass_in?: string[]
  pass_not_in?: string[]
  pass_lt?: string | null
  pass_lte?: string | null
  pass_gt?: string | null
  pass_gte?: string | null
  pass_contains?: string | null
  pass_not_contains?: string | null
  pass_starts_with?: string | null
  pass_not_starts_with?: string | null
  pass_ends_with?: string | null
  pass_not_ends_with?: string | null
  superAdmin?: number | null
  superAdmin_not?: number | null
  superAdmin_in?: number[]
  superAdmin_not_in?: number[]
  superAdmin_lt?: number | null
  superAdmin_lte?: number | null
  superAdmin_gt?: number | null
  superAdmin_gte?: number | null
  user?: string | null
  user_not?: string | null
  user_in?: string[]
  user_not_in?: string[]
  user_lt?: string | null
  user_lte?: string | null
  user_gt?: string | null
  user_gte?: string | null
  user_contains?: string | null
  user_not_contains?: string | null
  user_starts_with?: string | null
  user_not_starts_with?: string | null
  user_ends_with?: string | null
  user_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: AdminWhereInput[]
  OR?: AdminWhereInput[]
  NOT?: AdminWhereInput[]
}
export type AdminWhereInputInputObject =
  | Extract<keyof AdminWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'pass', alias?: string  } 
  | { name: 'pass_not', alias?: string  } 
  | { name: 'pass_in', alias?: string  } 
  | { name: 'pass_not_in', alias?: string  } 
  | { name: 'pass_lt', alias?: string  } 
  | { name: 'pass_lte', alias?: string  } 
  | { name: 'pass_gt', alias?: string  } 
  | { name: 'pass_gte', alias?: string  } 
  | { name: 'pass_contains', alias?: string  } 
  | { name: 'pass_not_contains', alias?: string  } 
  | { name: 'pass_starts_with', alias?: string  } 
  | { name: 'pass_not_starts_with', alias?: string  } 
  | { name: 'pass_ends_with', alias?: string  } 
  | { name: 'pass_not_ends_with', alias?: string  } 
  | { name: 'superAdmin', alias?: string  } 
  | { name: 'superAdmin_not', alias?: string  } 
  | { name: 'superAdmin_in', alias?: string  } 
  | { name: 'superAdmin_not_in', alias?: string  } 
  | { name: 'superAdmin_lt', alias?: string  } 
  | { name: 'superAdmin_lte', alias?: string  } 
  | { name: 'superAdmin_gt', alias?: string  } 
  | { name: 'superAdmin_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'user_not', alias?: string  } 
  | { name: 'user_in', alias?: string  } 
  | { name: 'user_not_in', alias?: string  } 
  | { name: 'user_lt', alias?: string  } 
  | { name: 'user_lte', alias?: string  } 
  | { name: 'user_gt', alias?: string  } 
  | { name: 'user_gte', alias?: string  } 
  | { name: 'user_contains', alias?: string  } 
  | { name: 'user_not_contains', alias?: string  } 
  | { name: 'user_starts_with', alias?: string  } 
  | { name: 'user_not_starts_with', alias?: string  } 
  | { name: 'user_ends_with', alias?: string  } 
  | { name: 'user_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentWhereUniqueInput {
  id?: number | null
}
export type AppointmentWhereUniqueInputInputObject =
  | Extract<keyof AppointmentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DoctorWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  designation?: string | null
  designation_not?: string | null
  designation_in?: string[]
  designation_not_in?: string[]
  designation_lt?: string | null
  designation_lte?: string | null
  designation_gt?: string | null
  designation_gte?: string | null
  designation_contains?: string | null
  designation_not_contains?: string | null
  designation_starts_with?: string | null
  designation_not_starts_with?: string | null
  designation_ends_with?: string | null
  designation_not_ends_with?: string | null
  doctorCv?: string | null
  doctorCv_not?: string | null
  doctorCv_in?: string[]
  doctorCv_not_in?: string[]
  doctorCv_lt?: string | null
  doctorCv_lte?: string | null
  doctorCv_gt?: string | null
  doctorCv_gte?: string | null
  doctorCv_contains?: string | null
  doctorCv_not_contains?: string | null
  doctorCv_starts_with?: string | null
  doctorCv_not_starts_with?: string | null
  doctorCv_ends_with?: string | null
  doctorCv_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  mohcard?: string | null
  mohcard_not?: string | null
  mohcard_in?: string[]
  mohcard_not_in?: string[]
  mohcard_lt?: string | null
  mohcard_lte?: string | null
  mohcard_gt?: string | null
  mohcard_gte?: string | null
  mohcard_contains?: string | null
  mohcard_not_contains?: string | null
  mohcard_starts_with?: string | null
  mohcard_not_starts_with?: string | null
  mohcard_ends_with?: string | null
  mohcard_not_ends_with?: string | null
  mohId?: string | null
  mohId_not?: string | null
  mohId_in?: string[]
  mohId_not_in?: string[]
  mohId_lt?: string | null
  mohId_lte?: string | null
  mohId_gt?: string | null
  mohId_gte?: string | null
  mohId_contains?: string | null
  mohId_not_contains?: string | null
  mohId_starts_with?: string | null
  mohId_not_starts_with?: string | null
  mohId_ends_with?: string | null
  mohId_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  nameArabic?: string | null
  nameArabic_not?: string | null
  nameArabic_in?: string[]
  nameArabic_not_in?: string[]
  nameArabic_lt?: string | null
  nameArabic_lte?: string | null
  nameArabic_gt?: string | null
  nameArabic_gte?: string | null
  nameArabic_contains?: string | null
  nameArabic_not_contains?: string | null
  nameArabic_starts_with?: string | null
  nameArabic_not_starts_with?: string | null
  nameArabic_ends_with?: string | null
  nameArabic_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  fees?: string | null
  fees_not?: string | null
  fees_in?: string[]
  fees_not_in?: string[]
  fees_lt?: string | null
  fees_lte?: string | null
  fees_gt?: string | null
  fees_gte?: string | null
  fees_contains?: string | null
  fees_not_contains?: string | null
  fees_starts_with?: string | null
  fees_not_starts_with?: string | null
  fees_ends_with?: string | null
  fees_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  specialityId?: number | null
  specialityId_not?: number | null
  specialityId_in?: number[]
  specialityId_not_in?: number[]
  specialityId_lt?: number | null
  specialityId_lte?: number | null
  specialityId_gt?: number | null
  specialityId_gte?: number | null
  specialities?: SpecialityWhereInput | null
  hospital_every?: HospitalWhereInput | null
  hospital_some?: HospitalWhereInput | null
  hospital_none?: HospitalWhereInput | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  AND?: DoctorWhereInput[]
  OR?: DoctorWhereInput[]
  NOT?: DoctorWhereInput[]
}
export type DoctorWhereInputInputObject =
  | Extract<keyof DoctorWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'designation_not', alias?: string  } 
  | { name: 'designation_in', alias?: string  } 
  | { name: 'designation_not_in', alias?: string  } 
  | { name: 'designation_lt', alias?: string  } 
  | { name: 'designation_lte', alias?: string  } 
  | { name: 'designation_gt', alias?: string  } 
  | { name: 'designation_gte', alias?: string  } 
  | { name: 'designation_contains', alias?: string  } 
  | { name: 'designation_not_contains', alias?: string  } 
  | { name: 'designation_starts_with', alias?: string  } 
  | { name: 'designation_not_starts_with', alias?: string  } 
  | { name: 'designation_ends_with', alias?: string  } 
  | { name: 'designation_not_ends_with', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorCv_not', alias?: string  } 
  | { name: 'doctorCv_in', alias?: string  } 
  | { name: 'doctorCv_not_in', alias?: string  } 
  | { name: 'doctorCv_lt', alias?: string  } 
  | { name: 'doctorCv_lte', alias?: string  } 
  | { name: 'doctorCv_gt', alias?: string  } 
  | { name: 'doctorCv_gte', alias?: string  } 
  | { name: 'doctorCv_contains', alias?: string  } 
  | { name: 'doctorCv_not_contains', alias?: string  } 
  | { name: 'doctorCv_starts_with', alias?: string  } 
  | { name: 'doctorCv_not_starts_with', alias?: string  } 
  | { name: 'doctorCv_ends_with', alias?: string  } 
  | { name: 'doctorCv_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohcard_not', alias?: string  } 
  | { name: 'mohcard_in', alias?: string  } 
  | { name: 'mohcard_not_in', alias?: string  } 
  | { name: 'mohcard_lt', alias?: string  } 
  | { name: 'mohcard_lte', alias?: string  } 
  | { name: 'mohcard_gt', alias?: string  } 
  | { name: 'mohcard_gte', alias?: string  } 
  | { name: 'mohcard_contains', alias?: string  } 
  | { name: 'mohcard_not_contains', alias?: string  } 
  | { name: 'mohcard_starts_with', alias?: string  } 
  | { name: 'mohcard_not_starts_with', alias?: string  } 
  | { name: 'mohcard_ends_with', alias?: string  } 
  | { name: 'mohcard_not_ends_with', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'mohId_not', alias?: string  } 
  | { name: 'mohId_in', alias?: string  } 
  | { name: 'mohId_not_in', alias?: string  } 
  | { name: 'mohId_lt', alias?: string  } 
  | { name: 'mohId_lte', alias?: string  } 
  | { name: 'mohId_gt', alias?: string  } 
  | { name: 'mohId_gte', alias?: string  } 
  | { name: 'mohId_contains', alias?: string  } 
  | { name: 'mohId_not_contains', alias?: string  } 
  | { name: 'mohId_starts_with', alias?: string  } 
  | { name: 'mohId_not_starts_with', alias?: string  } 
  | { name: 'mohId_ends_with', alias?: string  } 
  | { name: 'mohId_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'nameArabic_not', alias?: string  } 
  | { name: 'nameArabic_in', alias?: string  } 
  | { name: 'nameArabic_not_in', alias?: string  } 
  | { name: 'nameArabic_lt', alias?: string  } 
  | { name: 'nameArabic_lte', alias?: string  } 
  | { name: 'nameArabic_gt', alias?: string  } 
  | { name: 'nameArabic_gte', alias?: string  } 
  | { name: 'nameArabic_contains', alias?: string  } 
  | { name: 'nameArabic_not_contains', alias?: string  } 
  | { name: 'nameArabic_starts_with', alias?: string  } 
  | { name: 'nameArabic_not_starts_with', alias?: string  } 
  | { name: 'nameArabic_ends_with', alias?: string  } 
  | { name: 'nameArabic_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'fees_not', alias?: string  } 
  | { name: 'fees_in', alias?: string  } 
  | { name: 'fees_not_in', alias?: string  } 
  | { name: 'fees_lt', alias?: string  } 
  | { name: 'fees_lte', alias?: string  } 
  | { name: 'fees_gt', alias?: string  } 
  | { name: 'fees_gte', alias?: string  } 
  | { name: 'fees_contains', alias?: string  } 
  | { name: 'fees_not_contains', alias?: string  } 
  | { name: 'fees_starts_with', alias?: string  } 
  | { name: 'fees_not_starts_with', alias?: string  } 
  | { name: 'fees_ends_with', alias?: string  } 
  | { name: 'fees_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialityId_not', alias?: string  } 
  | { name: 'specialityId_in', alias?: string  } 
  | { name: 'specialityId_not_in', alias?: string  } 
  | { name: 'specialityId_lt', alias?: string  } 
  | { name: 'specialityId_lte', alias?: string  } 
  | { name: 'specialityId_gt', alias?: string  } 
  | { name: 'specialityId_gte', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'hospital_every', alias?: string  } 
  | { name: 'hospital_some', alias?: string  } 
  | { name: 'hospital_none', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpecialityWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  doctors_every?: DoctorWhereInput | null
  doctors_some?: DoctorWhereInput | null
  doctors_none?: DoctorWhereInput | null
  speciality?: string | null
  speciality_not?: string | null
  speciality_in?: string[]
  speciality_not_in?: string[]
  speciality_lt?: string | null
  speciality_lte?: string | null
  speciality_gt?: string | null
  speciality_gte?: string | null
  speciality_contains?: string | null
  speciality_not_contains?: string | null
  speciality_starts_with?: string | null
  speciality_not_starts_with?: string | null
  speciality_ends_with?: string | null
  speciality_not_ends_with?: string | null
  specialityArabic?: string | null
  specialityArabic_not?: string | null
  specialityArabic_in?: string[]
  specialityArabic_not_in?: string[]
  specialityArabic_lt?: string | null
  specialityArabic_lte?: string | null
  specialityArabic_gt?: string | null
  specialityArabic_gte?: string | null
  specialityArabic_contains?: string | null
  specialityArabic_not_contains?: string | null
  specialityArabic_starts_with?: string | null
  specialityArabic_not_starts_with?: string | null
  specialityArabic_ends_with?: string | null
  specialityArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: SpecialityWhereInput[]
  OR?: SpecialityWhereInput[]
  NOT?: SpecialityWhereInput[]
}
export type SpecialityWhereInputInputObject =
  | Extract<keyof SpecialityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'doctors_every', alias?: string  } 
  | { name: 'doctors_some', alias?: string  } 
  | { name: 'doctors_none', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'speciality_not', alias?: string  } 
  | { name: 'speciality_in', alias?: string  } 
  | { name: 'speciality_not_in', alias?: string  } 
  | { name: 'speciality_lt', alias?: string  } 
  | { name: 'speciality_lte', alias?: string  } 
  | { name: 'speciality_gt', alias?: string  } 
  | { name: 'speciality_gte', alias?: string  } 
  | { name: 'speciality_contains', alias?: string  } 
  | { name: 'speciality_not_contains', alias?: string  } 
  | { name: 'speciality_starts_with', alias?: string  } 
  | { name: 'speciality_not_starts_with', alias?: string  } 
  | { name: 'speciality_ends_with', alias?: string  } 
  | { name: 'speciality_not_ends_with', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  | { name: 'specialityArabic_not', alias?: string  } 
  | { name: 'specialityArabic_in', alias?: string  } 
  | { name: 'specialityArabic_not_in', alias?: string  } 
  | { name: 'specialityArabic_lt', alias?: string  } 
  | { name: 'specialityArabic_lte', alias?: string  } 
  | { name: 'specialityArabic_gt', alias?: string  } 
  | { name: 'specialityArabic_gte', alias?: string  } 
  | { name: 'specialityArabic_contains', alias?: string  } 
  | { name: 'specialityArabic_not_contains', alias?: string  } 
  | { name: 'specialityArabic_starts_with', alias?: string  } 
  | { name: 'specialityArabic_not_starts_with', alias?: string  } 
  | { name: 'specialityArabic_ends_with', alias?: string  } 
  | { name: 'specialityArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  addressArabic?: string | null
  addressArabic_not?: string | null
  addressArabic_in?: string[]
  addressArabic_not_in?: string[]
  addressArabic_lt?: string | null
  addressArabic_lte?: string | null
  addressArabic_gt?: string | null
  addressArabic_gte?: string | null
  addressArabic_contains?: string | null
  addressArabic_not_contains?: string | null
  addressArabic_starts_with?: string | null
  addressArabic_not_starts_with?: string | null
  addressArabic_ends_with?: string | null
  addressArabic_not_ends_with?: string | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  city?: CityWhereInput | null
  countryId?: CountryWhereInput | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  hospital?: string | null
  hospital_not?: string | null
  hospital_in?: string[]
  hospital_not_in?: string[]
  hospital_lt?: string | null
  hospital_lte?: string | null
  hospital_gt?: string | null
  hospital_gte?: string | null
  hospital_contains?: string | null
  hospital_not_contains?: string | null
  hospital_starts_with?: string | null
  hospital_not_starts_with?: string | null
  hospital_ends_with?: string | null
  hospital_not_ends_with?: string | null
  hospitalArabic?: string | null
  hospitalArabic_not?: string | null
  hospitalArabic_in?: string[]
  hospitalArabic_not_in?: string[]
  hospitalArabic_lt?: string | null
  hospitalArabic_lte?: string | null
  hospitalArabic_gt?: string | null
  hospitalArabic_gte?: string | null
  hospitalArabic_contains?: string | null
  hospitalArabic_not_contains?: string | null
  hospitalArabic_starts_with?: string | null
  hospitalArabic_not_starts_with?: string | null
  hospitalArabic_ends_with?: string | null
  hospitalArabic_not_ends_with?: string | null
  doctors_every?: DoctorWhereInput | null
  doctors_some?: DoctorWhereInput | null
  doctors_none?: DoctorWhereInput | null
  language?: string | null
  language_not?: string | null
  language_in?: string[]
  language_not_in?: string[]
  language_lt?: string | null
  language_lte?: string | null
  language_gt?: string | null
  language_gte?: string | null
  language_contains?: string | null
  language_not_contains?: string | null
  language_starts_with?: string | null
  language_not_starts_with?: string | null
  language_ends_with?: string | null
  language_not_ends_with?: string | null
  latitude?: string | null
  latitude_not?: string | null
  latitude_in?: string[]
  latitude_not_in?: string[]
  latitude_lt?: string | null
  latitude_lte?: string | null
  latitude_gt?: string | null
  latitude_gte?: string | null
  latitude_contains?: string | null
  latitude_not_contains?: string | null
  latitude_starts_with?: string | null
  latitude_not_starts_with?: string | null
  latitude_ends_with?: string | null
  latitude_not_ends_with?: string | null
  location?: string | null
  location_not?: string | null
  location_in?: string[]
  location_not_in?: string[]
  location_lt?: string | null
  location_lte?: string | null
  location_gt?: string | null
  location_gte?: string | null
  location_contains?: string | null
  location_not_contains?: string | null
  location_starts_with?: string | null
  location_not_starts_with?: string | null
  location_ends_with?: string | null
  location_not_ends_with?: string | null
  logo?: string | null
  logo_not?: string | null
  logo_in?: string[]
  logo_not_in?: string[]
  logo_lt?: string | null
  logo_lte?: string | null
  logo_gt?: string | null
  logo_gte?: string | null
  logo_contains?: string | null
  logo_not_contains?: string | null
  logo_starts_with?: string | null
  logo_not_starts_with?: string | null
  logo_ends_with?: string | null
  logo_not_ends_with?: string | null
  longitude?: string | null
  longitude_not?: string | null
  longitude_in?: string[]
  longitude_not_in?: string[]
  longitude_lt?: string | null
  longitude_lte?: string | null
  longitude_gt?: string | null
  longitude_gte?: string | null
  longitude_contains?: string | null
  longitude_not_contains?: string | null
  longitude_starts_with?: string | null
  longitude_not_starts_with?: string | null
  longitude_ends_with?: string | null
  longitude_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  phone1?: string | null
  phone1_not?: string | null
  phone1_in?: string[]
  phone1_not_in?: string[]
  phone1_lt?: string | null
  phone1_lte?: string | null
  phone1_gt?: string | null
  phone1_gte?: string | null
  phone1_contains?: string | null
  phone1_not_contains?: string | null
  phone1_starts_with?: string | null
  phone1_not_starts_with?: string | null
  phone1_ends_with?: string | null
  phone1_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  uniqeId?: string | null
  uniqeId_not?: string | null
  uniqeId_in?: string[]
  uniqeId_not_in?: string[]
  uniqeId_lt?: string | null
  uniqeId_lte?: string | null
  uniqeId_gt?: string | null
  uniqeId_gte?: string | null
  uniqeId_contains?: string | null
  uniqeId_not_contains?: string | null
  uniqeId_starts_with?: string | null
  uniqeId_not_starts_with?: string | null
  uniqeId_ends_with?: string | null
  uniqeId_not_ends_with?: string | null
  insurances_every?: InsuranceWhereInput | null
  insurances_some?: InsuranceWhereInput | null
  insurances_none?: InsuranceWhereInput | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  AND?: HospitalWhereInput[]
  OR?: HospitalWhereInput[]
  NOT?: HospitalWhereInput[]
}
export type HospitalWhereInputInputObject =
  | Extract<keyof HospitalWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'address_not', alias?: string  } 
  | { name: 'address_in', alias?: string  } 
  | { name: 'address_not_in', alias?: string  } 
  | { name: 'address_lt', alias?: string  } 
  | { name: 'address_lte', alias?: string  } 
  | { name: 'address_gt', alias?: string  } 
  | { name: 'address_gte', alias?: string  } 
  | { name: 'address_contains', alias?: string  } 
  | { name: 'address_not_contains', alias?: string  } 
  | { name: 'address_starts_with', alias?: string  } 
  | { name: 'address_not_starts_with', alias?: string  } 
  | { name: 'address_ends_with', alias?: string  } 
  | { name: 'address_not_ends_with', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'addressArabic_not', alias?: string  } 
  | { name: 'addressArabic_in', alias?: string  } 
  | { name: 'addressArabic_not_in', alias?: string  } 
  | { name: 'addressArabic_lt', alias?: string  } 
  | { name: 'addressArabic_lte', alias?: string  } 
  | { name: 'addressArabic_gt', alias?: string  } 
  | { name: 'addressArabic_gte', alias?: string  } 
  | { name: 'addressArabic_contains', alias?: string  } 
  | { name: 'addressArabic_not_contains', alias?: string  } 
  | { name: 'addressArabic_starts_with', alias?: string  } 
  | { name: 'addressArabic_not_starts_with', alias?: string  } 
  | { name: 'addressArabic_ends_with', alias?: string  } 
  | { name: 'addressArabic_not_ends_with', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospital_not', alias?: string  } 
  | { name: 'hospital_in', alias?: string  } 
  | { name: 'hospital_not_in', alias?: string  } 
  | { name: 'hospital_lt', alias?: string  } 
  | { name: 'hospital_lte', alias?: string  } 
  | { name: 'hospital_gt', alias?: string  } 
  | { name: 'hospital_gte', alias?: string  } 
  | { name: 'hospital_contains', alias?: string  } 
  | { name: 'hospital_not_contains', alias?: string  } 
  | { name: 'hospital_starts_with', alias?: string  } 
  | { name: 'hospital_not_starts_with', alias?: string  } 
  | { name: 'hospital_ends_with', alias?: string  } 
  | { name: 'hospital_not_ends_with', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'hospitalArabic_not', alias?: string  } 
  | { name: 'hospitalArabic_in', alias?: string  } 
  | { name: 'hospitalArabic_not_in', alias?: string  } 
  | { name: 'hospitalArabic_lt', alias?: string  } 
  | { name: 'hospitalArabic_lte', alias?: string  } 
  | { name: 'hospitalArabic_gt', alias?: string  } 
  | { name: 'hospitalArabic_gte', alias?: string  } 
  | { name: 'hospitalArabic_contains', alias?: string  } 
  | { name: 'hospitalArabic_not_contains', alias?: string  } 
  | { name: 'hospitalArabic_starts_with', alias?: string  } 
  | { name: 'hospitalArabic_not_starts_with', alias?: string  } 
  | { name: 'hospitalArabic_ends_with', alias?: string  } 
  | { name: 'hospitalArabic_not_ends_with', alias?: string  } 
  | { name: 'doctors_every', alias?: string  } 
  | { name: 'doctors_some', alias?: string  } 
  | { name: 'doctors_none', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'language_not', alias?: string  } 
  | { name: 'language_in', alias?: string  } 
  | { name: 'language_not_in', alias?: string  } 
  | { name: 'language_lt', alias?: string  } 
  | { name: 'language_lte', alias?: string  } 
  | { name: 'language_gt', alias?: string  } 
  | { name: 'language_gte', alias?: string  } 
  | { name: 'language_contains', alias?: string  } 
  | { name: 'language_not_contains', alias?: string  } 
  | { name: 'language_starts_with', alias?: string  } 
  | { name: 'language_not_starts_with', alias?: string  } 
  | { name: 'language_ends_with', alias?: string  } 
  | { name: 'language_not_ends_with', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'latitude_not', alias?: string  } 
  | { name: 'latitude_in', alias?: string  } 
  | { name: 'latitude_not_in', alias?: string  } 
  | { name: 'latitude_lt', alias?: string  } 
  | { name: 'latitude_lte', alias?: string  } 
  | { name: 'latitude_gt', alias?: string  } 
  | { name: 'latitude_gte', alias?: string  } 
  | { name: 'latitude_contains', alias?: string  } 
  | { name: 'latitude_not_contains', alias?: string  } 
  | { name: 'latitude_starts_with', alias?: string  } 
  | { name: 'latitude_not_starts_with', alias?: string  } 
  | { name: 'latitude_ends_with', alias?: string  } 
  | { name: 'latitude_not_ends_with', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'location_not', alias?: string  } 
  | { name: 'location_in', alias?: string  } 
  | { name: 'location_not_in', alias?: string  } 
  | { name: 'location_lt', alias?: string  } 
  | { name: 'location_lte', alias?: string  } 
  | { name: 'location_gt', alias?: string  } 
  | { name: 'location_gte', alias?: string  } 
  | { name: 'location_contains', alias?: string  } 
  | { name: 'location_not_contains', alias?: string  } 
  | { name: 'location_starts_with', alias?: string  } 
  | { name: 'location_not_starts_with', alias?: string  } 
  | { name: 'location_ends_with', alias?: string  } 
  | { name: 'location_not_ends_with', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'logo_not', alias?: string  } 
  | { name: 'logo_in', alias?: string  } 
  | { name: 'logo_not_in', alias?: string  } 
  | { name: 'logo_lt', alias?: string  } 
  | { name: 'logo_lte', alias?: string  } 
  | { name: 'logo_gt', alias?: string  } 
  | { name: 'logo_gte', alias?: string  } 
  | { name: 'logo_contains', alias?: string  } 
  | { name: 'logo_not_contains', alias?: string  } 
  | { name: 'logo_starts_with', alias?: string  } 
  | { name: 'logo_not_starts_with', alias?: string  } 
  | { name: 'logo_ends_with', alias?: string  } 
  | { name: 'logo_not_ends_with', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'longitude_not', alias?: string  } 
  | { name: 'longitude_in', alias?: string  } 
  | { name: 'longitude_not_in', alias?: string  } 
  | { name: 'longitude_lt', alias?: string  } 
  | { name: 'longitude_lte', alias?: string  } 
  | { name: 'longitude_gt', alias?: string  } 
  | { name: 'longitude_gte', alias?: string  } 
  | { name: 'longitude_contains', alias?: string  } 
  | { name: 'longitude_not_contains', alias?: string  } 
  | { name: 'longitude_starts_with', alias?: string  } 
  | { name: 'longitude_not_starts_with', alias?: string  } 
  | { name: 'longitude_ends_with', alias?: string  } 
  | { name: 'longitude_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'phone1_not', alias?: string  } 
  | { name: 'phone1_in', alias?: string  } 
  | { name: 'phone1_not_in', alias?: string  } 
  | { name: 'phone1_lt', alias?: string  } 
  | { name: 'phone1_lte', alias?: string  } 
  | { name: 'phone1_gt', alias?: string  } 
  | { name: 'phone1_gte', alias?: string  } 
  | { name: 'phone1_contains', alias?: string  } 
  | { name: 'phone1_not_contains', alias?: string  } 
  | { name: 'phone1_starts_with', alias?: string  } 
  | { name: 'phone1_not_starts_with', alias?: string  } 
  | { name: 'phone1_ends_with', alias?: string  } 
  | { name: 'phone1_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'uniqeId_not', alias?: string  } 
  | { name: 'uniqeId_in', alias?: string  } 
  | { name: 'uniqeId_not_in', alias?: string  } 
  | { name: 'uniqeId_lt', alias?: string  } 
  | { name: 'uniqeId_lte', alias?: string  } 
  | { name: 'uniqeId_gt', alias?: string  } 
  | { name: 'uniqeId_gte', alias?: string  } 
  | { name: 'uniqeId_contains', alias?: string  } 
  | { name: 'uniqeId_not_contains', alias?: string  } 
  | { name: 'uniqeId_starts_with', alias?: string  } 
  | { name: 'uniqeId_not_starts_with', alias?: string  } 
  | { name: 'uniqeId_ends_with', alias?: string  } 
  | { name: 'uniqeId_not_ends_with', alias?: string  } 
  | { name: 'insurances_every', alias?: string  } 
  | { name: 'insurances_some', alias?: string  } 
  | { name: 'insurances_none', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CityWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  city?: string | null
  city_not?: string | null
  city_in?: string[]
  city_not_in?: string[]
  city_lt?: string | null
  city_lte?: string | null
  city_gt?: string | null
  city_gte?: string | null
  city_contains?: string | null
  city_not_contains?: string | null
  city_starts_with?: string | null
  city_not_starts_with?: string | null
  city_ends_with?: string | null
  city_not_ends_with?: string | null
  cityArabic?: string | null
  cityArabic_not?: string | null
  cityArabic_in?: string[]
  cityArabic_not_in?: string[]
  cityArabic_lt?: string | null
  cityArabic_lte?: string | null
  cityArabic_gt?: string | null
  cityArabic_gte?: string | null
  cityArabic_contains?: string | null
  cityArabic_not_contains?: string | null
  cityArabic_starts_with?: string | null
  cityArabic_not_starts_with?: string | null
  cityArabic_ends_with?: string | null
  cityArabic_not_ends_with?: string | null
  countryId?: number | null
  countryId_not?: number | null
  countryId_in?: number[]
  countryId_not_in?: number[]
  countryId_lt?: number | null
  countryId_lte?: number | null
  countryId_gt?: number | null
  countryId_gte?: number | null
  hospital_every?: HospitalWhereInput | null
  hospital_some?: HospitalWhereInput | null
  hospital_none?: HospitalWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: CityWhereInput[]
  OR?: CityWhereInput[]
  NOT?: CityWhereInput[]
}
export type CityWhereInputInputObject =
  | Extract<keyof CityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'city_not', alias?: string  } 
  | { name: 'city_in', alias?: string  } 
  | { name: 'city_not_in', alias?: string  } 
  | { name: 'city_lt', alias?: string  } 
  | { name: 'city_lte', alias?: string  } 
  | { name: 'city_gt', alias?: string  } 
  | { name: 'city_gte', alias?: string  } 
  | { name: 'city_contains', alias?: string  } 
  | { name: 'city_not_contains', alias?: string  } 
  | { name: 'city_starts_with', alias?: string  } 
  | { name: 'city_not_starts_with', alias?: string  } 
  | { name: 'city_ends_with', alias?: string  } 
  | { name: 'city_not_ends_with', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'cityArabic_not', alias?: string  } 
  | { name: 'cityArabic_in', alias?: string  } 
  | { name: 'cityArabic_not_in', alias?: string  } 
  | { name: 'cityArabic_lt', alias?: string  } 
  | { name: 'cityArabic_lte', alias?: string  } 
  | { name: 'cityArabic_gt', alias?: string  } 
  | { name: 'cityArabic_gte', alias?: string  } 
  | { name: 'cityArabic_contains', alias?: string  } 
  | { name: 'cityArabic_not_contains', alias?: string  } 
  | { name: 'cityArabic_starts_with', alias?: string  } 
  | { name: 'cityArabic_not_starts_with', alias?: string  } 
  | { name: 'cityArabic_ends_with', alias?: string  } 
  | { name: 'cityArabic_not_ends_with', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'countryId_not', alias?: string  } 
  | { name: 'countryId_in', alias?: string  } 
  | { name: 'countryId_not_in', alias?: string  } 
  | { name: 'countryId_lt', alias?: string  } 
  | { name: 'countryId_lte', alias?: string  } 
  | { name: 'countryId_gt', alias?: string  } 
  | { name: 'countryId_gte', alias?: string  } 
  | { name: 'hospital_every', alias?: string  } 
  | { name: 'hospital_some', alias?: string  } 
  | { name: 'hospital_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CountryWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  country?: string | null
  country_not?: string | null
  country_in?: string[]
  country_not_in?: string[]
  country_lt?: string | null
  country_lte?: string | null
  country_gt?: string | null
  country_gte?: string | null
  country_contains?: string | null
  country_not_contains?: string | null
  country_starts_with?: string | null
  country_not_starts_with?: string | null
  country_ends_with?: string | null
  country_not_ends_with?: string | null
  countryArabic?: string | null
  countryArabic_not?: string | null
  countryArabic_in?: string[]
  countryArabic_not_in?: string[]
  countryArabic_lt?: string | null
  countryArabic_lte?: string | null
  countryArabic_gt?: string | null
  countryArabic_gte?: string | null
  countryArabic_contains?: string | null
  countryArabic_not_contains?: string | null
  countryArabic_starts_with?: string | null
  countryArabic_not_starts_with?: string | null
  countryArabic_ends_with?: string | null
  countryArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: CountryWhereInput[]
  OR?: CountryWhereInput[]
  NOT?: CountryWhereInput[]
}
export type CountryWhereInputInputObject =
  | Extract<keyof CountryWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'country_not', alias?: string  } 
  | { name: 'country_in', alias?: string  } 
  | { name: 'country_not_in', alias?: string  } 
  | { name: 'country_lt', alias?: string  } 
  | { name: 'country_lte', alias?: string  } 
  | { name: 'country_gt', alias?: string  } 
  | { name: 'country_gte', alias?: string  } 
  | { name: 'country_contains', alias?: string  } 
  | { name: 'country_not_contains', alias?: string  } 
  | { name: 'country_starts_with', alias?: string  } 
  | { name: 'country_not_starts_with', alias?: string  } 
  | { name: 'country_ends_with', alias?: string  } 
  | { name: 'country_not_ends_with', alias?: string  } 
  | { name: 'countryArabic', alias?: string  } 
  | { name: 'countryArabic_not', alias?: string  } 
  | { name: 'countryArabic_in', alias?: string  } 
  | { name: 'countryArabic_not_in', alias?: string  } 
  | { name: 'countryArabic_lt', alias?: string  } 
  | { name: 'countryArabic_lte', alias?: string  } 
  | { name: 'countryArabic_gt', alias?: string  } 
  | { name: 'countryArabic_gte', alias?: string  } 
  | { name: 'countryArabic_contains', alias?: string  } 
  | { name: 'countryArabic_not_contains', alias?: string  } 
  | { name: 'countryArabic_starts_with', alias?: string  } 
  | { name: 'countryArabic_not_starts_with', alias?: string  } 
  | { name: 'countryArabic_ends_with', alias?: string  } 
  | { name: 'countryArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InsuranceWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  countryId?: number | null
  countryId_not?: number | null
  countryId_in?: number[]
  countryId_not_in?: number[]
  countryId_lt?: number | null
  countryId_lte?: number | null
  countryId_gt?: number | null
  countryId_gte?: number | null
  hospitals_every?: HospitalWhereInput | null
  hospitals_some?: HospitalWhereInput | null
  hospitals_none?: HospitalWhereInput | null
  insurance?: string | null
  insurance_not?: string | null
  insurance_in?: string[]
  insurance_not_in?: string[]
  insurance_lt?: string | null
  insurance_lte?: string | null
  insurance_gt?: string | null
  insurance_gte?: string | null
  insurance_contains?: string | null
  insurance_not_contains?: string | null
  insurance_starts_with?: string | null
  insurance_not_starts_with?: string | null
  insurance_ends_with?: string | null
  insurance_not_ends_with?: string | null
  insuranceArabic?: string | null
  insuranceArabic_not?: string | null
  insuranceArabic_in?: string[]
  insuranceArabic_not_in?: string[]
  insuranceArabic_lt?: string | null
  insuranceArabic_lte?: string | null
  insuranceArabic_gt?: string | null
  insuranceArabic_gte?: string | null
  insuranceArabic_contains?: string | null
  insuranceArabic_not_contains?: string | null
  insuranceArabic_starts_with?: string | null
  insuranceArabic_not_starts_with?: string | null
  insuranceArabic_ends_with?: string | null
  insuranceArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: InsuranceWhereInput[]
  OR?: InsuranceWhereInput[]
  NOT?: InsuranceWhereInput[]
}
export type InsuranceWhereInputInputObject =
  | Extract<keyof InsuranceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'countryId_not', alias?: string  } 
  | { name: 'countryId_in', alias?: string  } 
  | { name: 'countryId_not_in', alias?: string  } 
  | { name: 'countryId_lt', alias?: string  } 
  | { name: 'countryId_lte', alias?: string  } 
  | { name: 'countryId_gt', alias?: string  } 
  | { name: 'countryId_gte', alias?: string  } 
  | { name: 'hospitals_every', alias?: string  } 
  | { name: 'hospitals_some', alias?: string  } 
  | { name: 'hospitals_none', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insurance_not', alias?: string  } 
  | { name: 'insurance_in', alias?: string  } 
  | { name: 'insurance_not_in', alias?: string  } 
  | { name: 'insurance_lt', alias?: string  } 
  | { name: 'insurance_lte', alias?: string  } 
  | { name: 'insurance_gt', alias?: string  } 
  | { name: 'insurance_gte', alias?: string  } 
  | { name: 'insurance_contains', alias?: string  } 
  | { name: 'insurance_not_contains', alias?: string  } 
  | { name: 'insurance_starts_with', alias?: string  } 
  | { name: 'insurance_not_starts_with', alias?: string  } 
  | { name: 'insurance_ends_with', alias?: string  } 
  | { name: 'insurance_not_ends_with', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  | { name: 'insuranceArabic_not', alias?: string  } 
  | { name: 'insuranceArabic_in', alias?: string  } 
  | { name: 'insuranceArabic_not_in', alias?: string  } 
  | { name: 'insuranceArabic_lt', alias?: string  } 
  | { name: 'insuranceArabic_lte', alias?: string  } 
  | { name: 'insuranceArabic_gt', alias?: string  } 
  | { name: 'insuranceArabic_gte', alias?: string  } 
  | { name: 'insuranceArabic_contains', alias?: string  } 
  | { name: 'insuranceArabic_not_contains', alias?: string  } 
  | { name: 'insuranceArabic_starts_with', alias?: string  } 
  | { name: 'insuranceArabic_not_starts_with', alias?: string  } 
  | { name: 'insuranceArabic_ends_with', alias?: string  } 
  | { name: 'insuranceArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apointmentDate?: string | null
  apointmentDate_not?: string | null
  apointmentDate_in?: string[]
  apointmentDate_not_in?: string[]
  apointmentDate_lt?: string | null
  apointmentDate_lte?: string | null
  apointmentDate_gt?: string | null
  apointmentDate_gte?: string | null
  apointmentDate_contains?: string | null
  apointmentDate_not_contains?: string | null
  apointmentDate_starts_with?: string | null
  apointmentDate_not_starts_with?: string | null
  apointmentDate_ends_with?: string | null
  apointmentDate_not_ends_with?: string | null
  apointmentFulldate?: number | null
  apointmentFulldate_not?: number | null
  apointmentFulldate_in?: number[]
  apointmentFulldate_not_in?: number[]
  apointmentFulldate_lt?: number | null
  apointmentFulldate_lte?: number | null
  apointmentFulldate_gt?: number | null
  apointmentFulldate_gte?: number | null
  apointmentTime?: string | null
  apointmentTime_not?: string | null
  apointmentTime_in?: string[]
  apointmentTime_not_in?: string[]
  apointmentTime_lt?: string | null
  apointmentTime_lte?: string | null
  apointmentTime_gt?: string | null
  apointmentTime_gte?: string | null
  apointmentTime_contains?: string | null
  apointmentTime_not_contains?: string | null
  apointmentTime_starts_with?: string | null
  apointmentTime_not_starts_with?: string | null
  apointmentTime_ends_with?: string | null
  apointmentTime_not_ends_with?: string | null
  diseaseId?: DiseaseWhereInput | null
  doctorArabic?: string | null
  doctorArabic_not?: string | null
  doctorArabic_in?: string[]
  doctorArabic_not_in?: string[]
  doctorArabic_lt?: string | null
  doctorArabic_lte?: string | null
  doctorArabic_gt?: string | null
  doctorArabic_gte?: string | null
  doctorArabic_contains?: string | null
  doctorArabic_not_contains?: string | null
  doctorArabic_starts_with?: string | null
  doctorArabic_not_starts_with?: string | null
  doctorArabic_ends_with?: string | null
  doctorArabic_not_ends_with?: string | null
  doctorId?: DoctorWhereInput | null
  doctorName?: string | null
  doctorName_not?: string | null
  doctorName_in?: string[]
  doctorName_not_in?: string[]
  doctorName_lt?: string | null
  doctorName_lte?: string | null
  doctorName_gt?: string | null
  doctorName_gte?: string | null
  doctorName_contains?: string | null
  doctorName_not_contains?: string | null
  doctorName_starts_with?: string | null
  doctorName_not_starts_with?: string | null
  doctorName_ends_with?: string | null
  doctorName_not_ends_with?: string | null
  dtId?: DoctorSheduleTimeWhereInput | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  hospitalId?: HospitalWhereInput | null
  isRead?: number | null
  isRead_not?: number | null
  isRead_in?: number[]
  isRead_not_in?: number[]
  isRead_lt?: number | null
  isRead_lte?: number | null
  isRead_gt?: number | null
  isRead_gte?: number | null
  optId?: OptTimeWhereInput | null
  patientId?: PatientWhereInput | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  phoneCode?: string | null
  phoneCode_not?: string | null
  phoneCode_in?: string[]
  phoneCode_not_in?: string[]
  phoneCode_lt?: string | null
  phoneCode_lte?: string | null
  phoneCode_gt?: string | null
  phoneCode_gte?: string | null
  phoneCode_contains?: string | null
  phoneCode_not_contains?: string | null
  phoneCode_starts_with?: string | null
  phoneCode_not_starts_with?: string | null
  phoneCode_ends_with?: string | null
  phoneCode_not_ends_with?: string | null
  scheduleTimeId?: SheduleTimeWhereInput | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  AND?: AppointmentWhereInput[]
  OR?: AppointmentWhereInput[]
  NOT?: AppointmentWhereInput[]
}
export type AppointmentWhereInputInputObject =
  | Extract<keyof AppointmentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentDate_not', alias?: string  } 
  | { name: 'apointmentDate_in', alias?: string  } 
  | { name: 'apointmentDate_not_in', alias?: string  } 
  | { name: 'apointmentDate_lt', alias?: string  } 
  | { name: 'apointmentDate_lte', alias?: string  } 
  | { name: 'apointmentDate_gt', alias?: string  } 
  | { name: 'apointmentDate_gte', alias?: string  } 
  | { name: 'apointmentDate_contains', alias?: string  } 
  | { name: 'apointmentDate_not_contains', alias?: string  } 
  | { name: 'apointmentDate_starts_with', alias?: string  } 
  | { name: 'apointmentDate_not_starts_with', alias?: string  } 
  | { name: 'apointmentDate_ends_with', alias?: string  } 
  | { name: 'apointmentDate_not_ends_with', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentFulldate_not', alias?: string  } 
  | { name: 'apointmentFulldate_in', alias?: string  } 
  | { name: 'apointmentFulldate_not_in', alias?: string  } 
  | { name: 'apointmentFulldate_lt', alias?: string  } 
  | { name: 'apointmentFulldate_lte', alias?: string  } 
  | { name: 'apointmentFulldate_gt', alias?: string  } 
  | { name: 'apointmentFulldate_gte', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'apointmentTime_not', alias?: string  } 
  | { name: 'apointmentTime_in', alias?: string  } 
  | { name: 'apointmentTime_not_in', alias?: string  } 
  | { name: 'apointmentTime_lt', alias?: string  } 
  | { name: 'apointmentTime_lte', alias?: string  } 
  | { name: 'apointmentTime_gt', alias?: string  } 
  | { name: 'apointmentTime_gte', alias?: string  } 
  | { name: 'apointmentTime_contains', alias?: string  } 
  | { name: 'apointmentTime_not_contains', alias?: string  } 
  | { name: 'apointmentTime_starts_with', alias?: string  } 
  | { name: 'apointmentTime_not_starts_with', alias?: string  } 
  | { name: 'apointmentTime_ends_with', alias?: string  } 
  | { name: 'apointmentTime_not_ends_with', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorArabic_not', alias?: string  } 
  | { name: 'doctorArabic_in', alias?: string  } 
  | { name: 'doctorArabic_not_in', alias?: string  } 
  | { name: 'doctorArabic_lt', alias?: string  } 
  | { name: 'doctorArabic_lte', alias?: string  } 
  | { name: 'doctorArabic_gt', alias?: string  } 
  | { name: 'doctorArabic_gte', alias?: string  } 
  | { name: 'doctorArabic_contains', alias?: string  } 
  | { name: 'doctorArabic_not_contains', alias?: string  } 
  | { name: 'doctorArabic_starts_with', alias?: string  } 
  | { name: 'doctorArabic_not_starts_with', alias?: string  } 
  | { name: 'doctorArabic_ends_with', alias?: string  } 
  | { name: 'doctorArabic_not_ends_with', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'doctorName_not', alias?: string  } 
  | { name: 'doctorName_in', alias?: string  } 
  | { name: 'doctorName_not_in', alias?: string  } 
  | { name: 'doctorName_lt', alias?: string  } 
  | { name: 'doctorName_lte', alias?: string  } 
  | { name: 'doctorName_gt', alias?: string  } 
  | { name: 'doctorName_gte', alias?: string  } 
  | { name: 'doctorName_contains', alias?: string  } 
  | { name: 'doctorName_not_contains', alias?: string  } 
  | { name: 'doctorName_starts_with', alias?: string  } 
  | { name: 'doctorName_not_starts_with', alias?: string  } 
  | { name: 'doctorName_ends_with', alias?: string  } 
  | { name: 'doctorName_not_ends_with', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'isRead_not', alias?: string  } 
  | { name: 'isRead_in', alias?: string  } 
  | { name: 'isRead_not_in', alias?: string  } 
  | { name: 'isRead_lt', alias?: string  } 
  | { name: 'isRead_lte', alias?: string  } 
  | { name: 'isRead_gt', alias?: string  } 
  | { name: 'isRead_gte', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'phoneCode_not', alias?: string  } 
  | { name: 'phoneCode_in', alias?: string  } 
  | { name: 'phoneCode_not_in', alias?: string  } 
  | { name: 'phoneCode_lt', alias?: string  } 
  | { name: 'phoneCode_lte', alias?: string  } 
  | { name: 'phoneCode_gt', alias?: string  } 
  | { name: 'phoneCode_gte', alias?: string  } 
  | { name: 'phoneCode_contains', alias?: string  } 
  | { name: 'phoneCode_not_contains', alias?: string  } 
  | { name: 'phoneCode_starts_with', alias?: string  } 
  | { name: 'phoneCode_not_starts_with', alias?: string  } 
  | { name: 'phoneCode_ends_with', alias?: string  } 
  | { name: 'phoneCode_not_ends_with', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DiseaseWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  disease?: string | null
  disease_not?: string | null
  disease_in?: string[]
  disease_not_in?: string[]
  disease_lt?: string | null
  disease_lte?: string | null
  disease_gt?: string | null
  disease_gte?: string | null
  disease_contains?: string | null
  disease_not_contains?: string | null
  disease_starts_with?: string | null
  disease_not_starts_with?: string | null
  disease_ends_with?: string | null
  disease_not_ends_with?: string | null
  diseaseArabic?: string | null
  diseaseArabic_not?: string | null
  diseaseArabic_in?: string[]
  diseaseArabic_not_in?: string[]
  diseaseArabic_lt?: string | null
  diseaseArabic_lte?: string | null
  diseaseArabic_gt?: string | null
  diseaseArabic_gte?: string | null
  diseaseArabic_contains?: string | null
  diseaseArabic_not_contains?: string | null
  diseaseArabic_starts_with?: string | null
  diseaseArabic_not_starts_with?: string | null
  diseaseArabic_ends_with?: string | null
  diseaseArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DiseaseWhereInput[]
  OR?: DiseaseWhereInput[]
  NOT?: DiseaseWhereInput[]
}
export type DiseaseWhereInputInputObject =
  | Extract<keyof DiseaseWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'disease', alias?: string  } 
  | { name: 'disease_not', alias?: string  } 
  | { name: 'disease_in', alias?: string  } 
  | { name: 'disease_not_in', alias?: string  } 
  | { name: 'disease_lt', alias?: string  } 
  | { name: 'disease_lte', alias?: string  } 
  | { name: 'disease_gt', alias?: string  } 
  | { name: 'disease_gte', alias?: string  } 
  | { name: 'disease_contains', alias?: string  } 
  | { name: 'disease_not_contains', alias?: string  } 
  | { name: 'disease_starts_with', alias?: string  } 
  | { name: 'disease_not_starts_with', alias?: string  } 
  | { name: 'disease_ends_with', alias?: string  } 
  | { name: 'disease_not_ends_with', alias?: string  } 
  | { name: 'diseaseArabic', alias?: string  } 
  | { name: 'diseaseArabic_not', alias?: string  } 
  | { name: 'diseaseArabic_in', alias?: string  } 
  | { name: 'diseaseArabic_not_in', alias?: string  } 
  | { name: 'diseaseArabic_lt', alias?: string  } 
  | { name: 'diseaseArabic_lte', alias?: string  } 
  | { name: 'diseaseArabic_gt', alias?: string  } 
  | { name: 'diseaseArabic_gte', alias?: string  } 
  | { name: 'diseaseArabic_contains', alias?: string  } 
  | { name: 'diseaseArabic_not_contains', alias?: string  } 
  | { name: 'diseaseArabic_starts_with', alias?: string  } 
  | { name: 'diseaseArabic_not_starts_with', alias?: string  } 
  | { name: 'diseaseArabic_ends_with', alias?: string  } 
  | { name: 'diseaseArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSheduleTimeWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  drSheduleId?: number | null
  drSheduleId_not?: number | null
  drSheduleId_in?: number[]
  drSheduleId_not_in?: number[]
  drSheduleId_lt?: number | null
  drSheduleId_lte?: number | null
  drSheduleId_gt?: number | null
  drSheduleId_gte?: number | null
  scheduleTime?: number | null
  scheduleTime_not?: number | null
  scheduleTime_in?: number[]
  scheduleTime_not_in?: number[]
  scheduleTime_lt?: number | null
  scheduleTime_lte?: number | null
  scheduleTime_gt?: number | null
  scheduleTime_gte?: number | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DoctorSheduleTimeWhereInput[]
  OR?: DoctorSheduleTimeWhereInput[]
  NOT?: DoctorSheduleTimeWhereInput[]
}
export type DoctorSheduleTimeWhereInputInputObject =
  | Extract<keyof DoctorSheduleTimeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'drSheduleId_not', alias?: string  } 
  | { name: 'drSheduleId_in', alias?: string  } 
  | { name: 'drSheduleId_not_in', alias?: string  } 
  | { name: 'drSheduleId_lt', alias?: string  } 
  | { name: 'drSheduleId_lte', alias?: string  } 
  | { name: 'drSheduleId_gt', alias?: string  } 
  | { name: 'drSheduleId_gte', alias?: string  } 
  | { name: 'scheduleTime', alias?: string  } 
  | { name: 'scheduleTime_not', alias?: string  } 
  | { name: 'scheduleTime_in', alias?: string  } 
  | { name: 'scheduleTime_not_in', alias?: string  } 
  | { name: 'scheduleTime_lt', alias?: string  } 
  | { name: 'scheduleTime_lte', alias?: string  } 
  | { name: 'scheduleTime_gt', alias?: string  } 
  | { name: 'scheduleTime_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptTimeWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  fifteenMins?: string | null
  fifteenMins_not?: string | null
  fifteenMins_in?: string[]
  fifteenMins_not_in?: string[]
  fifteenMins_lt?: string | null
  fifteenMins_lte?: string | null
  fifteenMins_gt?: string | null
  fifteenMins_gte?: string | null
  fifteenMins_contains?: string | null
  fifteenMins_not_contains?: string | null
  fifteenMins_starts_with?: string | null
  fifteenMins_not_starts_with?: string | null
  fifteenMins_ends_with?: string | null
  fifteenMins_not_ends_with?: string | null
  thirtyMins?: string | null
  thirtyMins_not?: string | null
  thirtyMins_in?: string[]
  thirtyMins_not_in?: string[]
  thirtyMins_lt?: string | null
  thirtyMins_lte?: string | null
  thirtyMins_gt?: string | null
  thirtyMins_gte?: string | null
  thirtyMins_contains?: string | null
  thirtyMins_not_contains?: string | null
  thirtyMins_starts_with?: string | null
  thirtyMins_not_starts_with?: string | null
  thirtyMins_ends_with?: string | null
  thirtyMins_not_ends_with?: string | null
  twentyMins?: string | null
  twentyMins_not?: string | null
  twentyMins_in?: string[]
  twentyMins_not_in?: string[]
  twentyMins_lt?: string | null
  twentyMins_lte?: string | null
  twentyMins_gt?: string | null
  twentyMins_gte?: string | null
  twentyMins_contains?: string | null
  twentyMins_not_contains?: string | null
  twentyMins_starts_with?: string | null
  twentyMins_not_starts_with?: string | null
  twentyMins_ends_with?: string | null
  twentyMins_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OptTimeWhereInput[]
  OR?: OptTimeWhereInput[]
  NOT?: OptTimeWhereInput[]
}
export type OptTimeWhereInputInputObject =
  | Extract<keyof OptTimeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'fifteenMins', alias?: string  } 
  | { name: 'fifteenMins_not', alias?: string  } 
  | { name: 'fifteenMins_in', alias?: string  } 
  | { name: 'fifteenMins_not_in', alias?: string  } 
  | { name: 'fifteenMins_lt', alias?: string  } 
  | { name: 'fifteenMins_lte', alias?: string  } 
  | { name: 'fifteenMins_gt', alias?: string  } 
  | { name: 'fifteenMins_gte', alias?: string  } 
  | { name: 'fifteenMins_contains', alias?: string  } 
  | { name: 'fifteenMins_not_contains', alias?: string  } 
  | { name: 'fifteenMins_starts_with', alias?: string  } 
  | { name: 'fifteenMins_not_starts_with', alias?: string  } 
  | { name: 'fifteenMins_ends_with', alias?: string  } 
  | { name: 'fifteenMins_not_ends_with', alias?: string  } 
  | { name: 'thirtyMins', alias?: string  } 
  | { name: 'thirtyMins_not', alias?: string  } 
  | { name: 'thirtyMins_in', alias?: string  } 
  | { name: 'thirtyMins_not_in', alias?: string  } 
  | { name: 'thirtyMins_lt', alias?: string  } 
  | { name: 'thirtyMins_lte', alias?: string  } 
  | { name: 'thirtyMins_gt', alias?: string  } 
  | { name: 'thirtyMins_gte', alias?: string  } 
  | { name: 'thirtyMins_contains', alias?: string  } 
  | { name: 'thirtyMins_not_contains', alias?: string  } 
  | { name: 'thirtyMins_starts_with', alias?: string  } 
  | { name: 'thirtyMins_not_starts_with', alias?: string  } 
  | { name: 'thirtyMins_ends_with', alias?: string  } 
  | { name: 'thirtyMins_not_ends_with', alias?: string  } 
  | { name: 'twentyMins', alias?: string  } 
  | { name: 'twentyMins_not', alias?: string  } 
  | { name: 'twentyMins_in', alias?: string  } 
  | { name: 'twentyMins_not_in', alias?: string  } 
  | { name: 'twentyMins_lt', alias?: string  } 
  | { name: 'twentyMins_lte', alias?: string  } 
  | { name: 'twentyMins_gt', alias?: string  } 
  | { name: 'twentyMins_gte', alias?: string  } 
  | { name: 'twentyMins_contains', alias?: string  } 
  | { name: 'twentyMins_not_contains', alias?: string  } 
  | { name: 'twentyMins_starts_with', alias?: string  } 
  | { name: 'twentyMins_not_starts_with', alias?: string  } 
  | { name: 'twentyMins_ends_with', alias?: string  } 
  | { name: 'twentyMins_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PatientWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  age?: number | null
  age_not?: number | null
  age_in?: number[]
  age_not_in?: number[]
  age_lt?: number | null
  age_lte?: number | null
  age_gt?: number | null
  age_gte?: number | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  dob?: string | null
  dob_not?: string | null
  dob_in?: string[]
  dob_not_in?: string[]
  dob_lt?: string | null
  dob_lte?: string | null
  dob_gt?: string | null
  dob_gte?: string | null
  dob_contains?: string | null
  dob_not_contains?: string | null
  dob_starts_with?: string | null
  dob_not_starts_with?: string | null
  dob_ends_with?: string | null
  dob_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  lastAction?: string | null
  lastAction_not?: string | null
  lastAction_in?: string[]
  lastAction_not_in?: string[]
  lastAction_lt?: string | null
  lastAction_lte?: string | null
  lastAction_gt?: string | null
  lastAction_gte?: string | null
  lastAction_contains?: string | null
  lastAction_not_contains?: string | null
  lastAction_starts_with?: string | null
  lastAction_not_starts_with?: string | null
  lastAction_ends_with?: string | null
  lastAction_not_ends_with?: string | null
  lastSeen?: string | null
  lastSeen_not?: string | null
  lastSeen_in?: string[]
  lastSeen_not_in?: string[]
  lastSeen_lt?: string | null
  lastSeen_lte?: string | null
  lastSeen_gt?: string | null
  lastSeen_gte?: string | null
  mailSubs?: number | null
  mailSubs_not?: number | null
  mailSubs_in?: number[]
  mailSubs_not_in?: number[]
  mailSubs_lt?: number | null
  mailSubs_lte?: number | null
  mailSubs_gt?: number | null
  mailSubs_gte?: number | null
  mobile?: string | null
  mobile_not?: string | null
  mobile_in?: string[]
  mobile_not_in?: string[]
  mobile_lt?: string | null
  mobile_lte?: string | null
  mobile_gt?: string | null
  mobile_gte?: string | null
  mobile_contains?: string | null
  mobile_not_contains?: string | null
  mobile_starts_with?: string | null
  mobile_not_starts_with?: string | null
  mobile_ends_with?: string | null
  mobile_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  uniqeId?: string | null
  uniqeId_not?: string | null
  uniqeId_in?: string[]
  uniqeId_not_in?: string[]
  uniqeId_lt?: string | null
  uniqeId_lte?: string | null
  uniqeId_gt?: string | null
  uniqeId_gte?: string | null
  uniqeId_contains?: string | null
  uniqeId_not_contains?: string | null
  uniqeId_starts_with?: string | null
  uniqeId_not_starts_with?: string | null
  uniqeId_ends_with?: string | null
  uniqeId_not_ends_with?: string | null
  AND?: PatientWhereInput[]
  OR?: PatientWhereInput[]
  NOT?: PatientWhereInput[]
}
export type PatientWhereInputInputObject =
  | Extract<keyof PatientWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'age_not', alias?: string  } 
  | { name: 'age_in', alias?: string  } 
  | { name: 'age_not_in', alias?: string  } 
  | { name: 'age_lt', alias?: string  } 
  | { name: 'age_lte', alias?: string  } 
  | { name: 'age_gt', alias?: string  } 
  | { name: 'age_gte', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'dob', alias?: string  } 
  | { name: 'dob_not', alias?: string  } 
  | { name: 'dob_in', alias?: string  } 
  | { name: 'dob_not_in', alias?: string  } 
  | { name: 'dob_lt', alias?: string  } 
  | { name: 'dob_lte', alias?: string  } 
  | { name: 'dob_gt', alias?: string  } 
  | { name: 'dob_gte', alias?: string  } 
  | { name: 'dob_contains', alias?: string  } 
  | { name: 'dob_not_contains', alias?: string  } 
  | { name: 'dob_starts_with', alias?: string  } 
  | { name: 'dob_not_starts_with', alias?: string  } 
  | { name: 'dob_ends_with', alias?: string  } 
  | { name: 'dob_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'lastAction', alias?: string  } 
  | { name: 'lastAction_not', alias?: string  } 
  | { name: 'lastAction_in', alias?: string  } 
  | { name: 'lastAction_not_in', alias?: string  } 
  | { name: 'lastAction_lt', alias?: string  } 
  | { name: 'lastAction_lte', alias?: string  } 
  | { name: 'lastAction_gt', alias?: string  } 
  | { name: 'lastAction_gte', alias?: string  } 
  | { name: 'lastAction_contains', alias?: string  } 
  | { name: 'lastAction_not_contains', alias?: string  } 
  | { name: 'lastAction_starts_with', alias?: string  } 
  | { name: 'lastAction_not_starts_with', alias?: string  } 
  | { name: 'lastAction_ends_with', alias?: string  } 
  | { name: 'lastAction_not_ends_with', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'lastSeen_not', alias?: string  } 
  | { name: 'lastSeen_in', alias?: string  } 
  | { name: 'lastSeen_not_in', alias?: string  } 
  | { name: 'lastSeen_lt', alias?: string  } 
  | { name: 'lastSeen_lte', alias?: string  } 
  | { name: 'lastSeen_gt', alias?: string  } 
  | { name: 'lastSeen_gte', alias?: string  } 
  | { name: 'mailSubs', alias?: string  } 
  | { name: 'mailSubs_not', alias?: string  } 
  | { name: 'mailSubs_in', alias?: string  } 
  | { name: 'mailSubs_not_in', alias?: string  } 
  | { name: 'mailSubs_lt', alias?: string  } 
  | { name: 'mailSubs_lte', alias?: string  } 
  | { name: 'mailSubs_gt', alias?: string  } 
  | { name: 'mailSubs_gte', alias?: string  } 
  | { name: 'mobile', alias?: string  } 
  | { name: 'mobile_not', alias?: string  } 
  | { name: 'mobile_in', alias?: string  } 
  | { name: 'mobile_not_in', alias?: string  } 
  | { name: 'mobile_lt', alias?: string  } 
  | { name: 'mobile_lte', alias?: string  } 
  | { name: 'mobile_gt', alias?: string  } 
  | { name: 'mobile_gte', alias?: string  } 
  | { name: 'mobile_contains', alias?: string  } 
  | { name: 'mobile_not_contains', alias?: string  } 
  | { name: 'mobile_starts_with', alias?: string  } 
  | { name: 'mobile_not_starts_with', alias?: string  } 
  | { name: 'mobile_ends_with', alias?: string  } 
  | { name: 'mobile_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'uniqeId_not', alias?: string  } 
  | { name: 'uniqeId_in', alias?: string  } 
  | { name: 'uniqeId_not_in', alias?: string  } 
  | { name: 'uniqeId_lt', alias?: string  } 
  | { name: 'uniqeId_lte', alias?: string  } 
  | { name: 'uniqeId_gt', alias?: string  } 
  | { name: 'uniqeId_gte', alias?: string  } 
  | { name: 'uniqeId_contains', alias?: string  } 
  | { name: 'uniqeId_not_contains', alias?: string  } 
  | { name: 'uniqeId_starts_with', alias?: string  } 
  | { name: 'uniqeId_not_starts_with', alias?: string  } 
  | { name: 'uniqeId_ends_with', alias?: string  } 
  | { name: 'uniqeId_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SheduleTimeWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  drSheduleId?: number | null
  drSheduleId_not?: number | null
  drSheduleId_in?: number[]
  drSheduleId_not_in?: number[]
  drSheduleId_lt?: number | null
  drSheduleId_lte?: number | null
  drSheduleId_gt?: number | null
  drSheduleId_gte?: number | null
  scheduleFullDate?: number | null
  scheduleFullDate_not?: number | null
  scheduleFullDate_in?: number[]
  scheduleFullDate_not_in?: number[]
  scheduleFullDate_lt?: number | null
  scheduleFullDate_lte?: number | null
  scheduleFullDate_gt?: number | null
  scheduleFullDate_gte?: number | null
  sheduleTime?: string | null
  sheduleTime_not?: string | null
  sheduleTime_in?: string[]
  sheduleTime_not_in?: string[]
  sheduleTime_lt?: string | null
  sheduleTime_lte?: string | null
  sheduleTime_gt?: string | null
  sheduleTime_gte?: string | null
  sheduleTime_contains?: string | null
  sheduleTime_not_contains?: string | null
  sheduleTime_starts_with?: string | null
  sheduleTime_not_starts_with?: string | null
  sheduleTime_ends_with?: string | null
  sheduleTime_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: SheduleTimeWhereInput[]
  OR?: SheduleTimeWhereInput[]
  NOT?: SheduleTimeWhereInput[]
}
export type SheduleTimeWhereInputInputObject =
  | Extract<keyof SheduleTimeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'drSheduleId_not', alias?: string  } 
  | { name: 'drSheduleId_in', alias?: string  } 
  | { name: 'drSheduleId_not_in', alias?: string  } 
  | { name: 'drSheduleId_lt', alias?: string  } 
  | { name: 'drSheduleId_lte', alias?: string  } 
  | { name: 'drSheduleId_gt', alias?: string  } 
  | { name: 'drSheduleId_gte', alias?: string  } 
  | { name: 'scheduleFullDate', alias?: string  } 
  | { name: 'scheduleFullDate_not', alias?: string  } 
  | { name: 'scheduleFullDate_in', alias?: string  } 
  | { name: 'scheduleFullDate_not_in', alias?: string  } 
  | { name: 'scheduleFullDate_lt', alias?: string  } 
  | { name: 'scheduleFullDate_lte', alias?: string  } 
  | { name: 'scheduleFullDate_gt', alias?: string  } 
  | { name: 'scheduleFullDate_gte', alias?: string  } 
  | { name: 'sheduleTime', alias?: string  } 
  | { name: 'sheduleTime_not', alias?: string  } 
  | { name: 'sheduleTime_in', alias?: string  } 
  | { name: 'sheduleTime_not_in', alias?: string  } 
  | { name: 'sheduleTime_lt', alias?: string  } 
  | { name: 'sheduleTime_lte', alias?: string  } 
  | { name: 'sheduleTime_gt', alias?: string  } 
  | { name: 'sheduleTime_gte', alias?: string  } 
  | { name: 'sheduleTime_contains', alias?: string  } 
  | { name: 'sheduleTime_not_contains', alias?: string  } 
  | { name: 'sheduleTime_starts_with', alias?: string  } 
  | { name: 'sheduleTime_not_starts_with', alias?: string  } 
  | { name: 'sheduleTime_ends_with', alias?: string  } 
  | { name: 'sheduleTime_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogWhereUniqueInput {
  id?: number | null
}
export type BlogWhereUniqueInputInputObject =
  | Extract<keyof BlogWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface BlogWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  bannerImage?: string | null
  bannerImage_not?: string | null
  bannerImage_in?: string[]
  bannerImage_not_in?: string[]
  bannerImage_lt?: string | null
  bannerImage_lte?: string | null
  bannerImage_gt?: string | null
  bannerImage_gte?: string | null
  bannerImage_contains?: string | null
  bannerImage_not_contains?: string | null
  bannerImage_starts_with?: string | null
  bannerImage_not_starts_with?: string | null
  bannerImage_ends_with?: string | null
  bannerImage_not_ends_with?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  hospitalId?: HospitalWhereInput | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: BlogWhereInput[]
  OR?: BlogWhereInput[]
  NOT?: BlogWhereInput[]
}
export type BlogWhereInputInputObject =
  | Extract<keyof BlogWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'bannerImage', alias?: string  } 
  | { name: 'bannerImage_not', alias?: string  } 
  | { name: 'bannerImage_in', alias?: string  } 
  | { name: 'bannerImage_not_in', alias?: string  } 
  | { name: 'bannerImage_lt', alias?: string  } 
  | { name: 'bannerImage_lte', alias?: string  } 
  | { name: 'bannerImage_gt', alias?: string  } 
  | { name: 'bannerImage_gte', alias?: string  } 
  | { name: 'bannerImage_contains', alias?: string  } 
  | { name: 'bannerImage_not_contains', alias?: string  } 
  | { name: 'bannerImage_starts_with', alias?: string  } 
  | { name: 'bannerImage_not_starts_with', alias?: string  } 
  | { name: 'bannerImage_ends_with', alias?: string  } 
  | { name: 'bannerImage_not_ends_with', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogCommentWhereUniqueInput {
  id?: number | null
}
export type BlogCommentWhereUniqueInputInputObject =
  | Extract<keyof BlogCommentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PostImageWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  isDefault?: number | null
  isDefault_not?: number | null
  isDefault_in?: number[]
  isDefault_not_in?: number[]
  isDefault_lt?: number | null
  isDefault_lte?: number | null
  isDefault_gt?: number | null
  isDefault_gte?: number | null
  pic?: string | null
  pic_not?: string | null
  pic_in?: string[]
  pic_not_in?: string[]
  pic_lt?: string | null
  pic_lte?: string | null
  pic_gt?: string | null
  pic_gte?: string | null
  pic_contains?: string | null
  pic_not_contains?: string | null
  pic_starts_with?: string | null
  pic_not_starts_with?: string | null
  pic_ends_with?: string | null
  pic_not_ends_with?: string | null
  postId?: BlogPostWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: PostImageWhereInput[]
  OR?: PostImageWhereInput[]
  NOT?: PostImageWhereInput[]
}
export type PostImageWhereInputInputObject =
  | Extract<keyof PostImageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'isDefault', alias?: string  } 
  | { name: 'isDefault_not', alias?: string  } 
  | { name: 'isDefault_in', alias?: string  } 
  | { name: 'isDefault_not_in', alias?: string  } 
  | { name: 'isDefault_lt', alias?: string  } 
  | { name: 'isDefault_lte', alias?: string  } 
  | { name: 'isDefault_gt', alias?: string  } 
  | { name: 'isDefault_gte', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  | { name: 'pic_not', alias?: string  } 
  | { name: 'pic_in', alias?: string  } 
  | { name: 'pic_not_in', alias?: string  } 
  | { name: 'pic_lt', alias?: string  } 
  | { name: 'pic_lte', alias?: string  } 
  | { name: 'pic_gt', alias?: string  } 
  | { name: 'pic_gte', alias?: string  } 
  | { name: 'pic_contains', alias?: string  } 
  | { name: 'pic_not_contains', alias?: string  } 
  | { name: 'pic_starts_with', alias?: string  } 
  | { name: 'pic_not_starts_with', alias?: string  } 
  | { name: 'pic_ends_with', alias?: string  } 
  | { name: 'pic_not_ends_with', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogPostWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  blogId?: BlogWhereInput | null
  hospitalId?: HospitalWhereInput | null
  logCreated?: string | null
  logCreated_not?: string | null
  logCreated_in?: string[]
  logCreated_not_in?: string[]
  logCreated_lt?: string | null
  logCreated_lte?: string | null
  logCreated_gt?: string | null
  logCreated_gte?: string | null
  postContent?: string | null
  postContent_not?: string | null
  postContent_in?: string[]
  postContent_not_in?: string[]
  postContent_lt?: string | null
  postContent_lte?: string | null
  postContent_gt?: string | null
  postContent_gte?: string | null
  postContent_contains?: string | null
  postContent_not_contains?: string | null
  postContent_starts_with?: string | null
  postContent_not_starts_with?: string | null
  postContent_ends_with?: string | null
  postContent_not_ends_with?: string | null
  postTitle?: string | null
  postTitle_not?: string | null
  postTitle_in?: string[]
  postTitle_not_in?: string[]
  postTitle_lt?: string | null
  postTitle_lte?: string | null
  postTitle_gt?: string | null
  postTitle_gte?: string | null
  postTitle_contains?: string | null
  postTitle_not_contains?: string | null
  postTitle_starts_with?: string | null
  postTitle_not_starts_with?: string | null
  postTitle_ends_with?: string | null
  postTitle_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  totalViewers?: number | null
  totalViewers_not?: number | null
  totalViewers_in?: number[]
  totalViewers_not_in?: number[]
  totalViewers_lt?: number | null
  totalViewers_lte?: number | null
  totalViewers_gt?: number | null
  totalViewers_gte?: number | null
  images_every?: PostImageWhereInput | null
  images_some?: PostImageWhereInput | null
  images_none?: PostImageWhereInput | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: BlogPostWhereInput[]
  OR?: BlogPostWhereInput[]
  NOT?: BlogPostWhereInput[]
}
export type BlogPostWhereInputInputObject =
  | Extract<keyof BlogPostWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'logCreated_not', alias?: string  } 
  | { name: 'logCreated_in', alias?: string  } 
  | { name: 'logCreated_not_in', alias?: string  } 
  | { name: 'logCreated_lt', alias?: string  } 
  | { name: 'logCreated_lte', alias?: string  } 
  | { name: 'logCreated_gt', alias?: string  } 
  | { name: 'logCreated_gte', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postContent_not', alias?: string  } 
  | { name: 'postContent_in', alias?: string  } 
  | { name: 'postContent_not_in', alias?: string  } 
  | { name: 'postContent_lt', alias?: string  } 
  | { name: 'postContent_lte', alias?: string  } 
  | { name: 'postContent_gt', alias?: string  } 
  | { name: 'postContent_gte', alias?: string  } 
  | { name: 'postContent_contains', alias?: string  } 
  | { name: 'postContent_not_contains', alias?: string  } 
  | { name: 'postContent_starts_with', alias?: string  } 
  | { name: 'postContent_not_starts_with', alias?: string  } 
  | { name: 'postContent_ends_with', alias?: string  } 
  | { name: 'postContent_not_ends_with', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'postTitle_not', alias?: string  } 
  | { name: 'postTitle_in', alias?: string  } 
  | { name: 'postTitle_not_in', alias?: string  } 
  | { name: 'postTitle_lt', alias?: string  } 
  | { name: 'postTitle_lte', alias?: string  } 
  | { name: 'postTitle_gt', alias?: string  } 
  | { name: 'postTitle_gte', alias?: string  } 
  | { name: 'postTitle_contains', alias?: string  } 
  | { name: 'postTitle_not_contains', alias?: string  } 
  | { name: 'postTitle_starts_with', alias?: string  } 
  | { name: 'postTitle_not_starts_with', alias?: string  } 
  | { name: 'postTitle_ends_with', alias?: string  } 
  | { name: 'postTitle_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  | { name: 'totalViewers_not', alias?: string  } 
  | { name: 'totalViewers_in', alias?: string  } 
  | { name: 'totalViewers_not_in', alias?: string  } 
  | { name: 'totalViewers_lt', alias?: string  } 
  | { name: 'totalViewers_lte', alias?: string  } 
  | { name: 'totalViewers_gt', alias?: string  } 
  | { name: 'totalViewers_gte', alias?: string  } 
  | { name: 'images_every', alias?: string  } 
  | { name: 'images_some', alias?: string  } 
  | { name: 'images_none', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogCommentWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  commentator?: number | null
  commentator_not?: number | null
  commentator_in?: number[]
  commentator_not_in?: number[]
  commentator_lt?: number | null
  commentator_lte?: number | null
  commentator_gt?: number | null
  commentator_gte?: number | null
  commentatorName?: string | null
  commentatorName_not?: string | null
  commentatorName_in?: string[]
  commentatorName_not_in?: string[]
  commentatorName_lt?: string | null
  commentatorName_lte?: string | null
  commentatorName_gt?: string | null
  commentatorName_gte?: string | null
  commentatorName_contains?: string | null
  commentatorName_not_contains?: string | null
  commentatorName_starts_with?: string | null
  commentatorName_not_starts_with?: string | null
  commentatorName_ends_with?: string | null
  commentatorName_not_ends_with?: string | null
  comments?: string | null
  comments_not?: string | null
  comments_in?: string[]
  comments_not_in?: string[]
  comments_lt?: string | null
  comments_lte?: string | null
  comments_gt?: string | null
  comments_gte?: string | null
  comments_contains?: string | null
  comments_not_contains?: string | null
  comments_starts_with?: string | null
  comments_not_starts_with?: string | null
  comments_ends_with?: string | null
  comments_not_ends_with?: string | null
  logCreated?: string | null
  logCreated_not?: string | null
  logCreated_in?: string[]
  logCreated_not_in?: string[]
  logCreated_lt?: string | null
  logCreated_lte?: string | null
  logCreated_gt?: string | null
  logCreated_gte?: string | null
  postId?: BlogPostWhereInput | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: BlogCommentWhereInput[]
  OR?: BlogCommentWhereInput[]
  NOT?: BlogCommentWhereInput[]
}
export type BlogCommentWhereInputInputObject =
  | Extract<keyof BlogCommentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'commentator', alias?: string  } 
  | { name: 'commentator_not', alias?: string  } 
  | { name: 'commentator_in', alias?: string  } 
  | { name: 'commentator_not_in', alias?: string  } 
  | { name: 'commentator_lt', alias?: string  } 
  | { name: 'commentator_lte', alias?: string  } 
  | { name: 'commentator_gt', alias?: string  } 
  | { name: 'commentator_gte', alias?: string  } 
  | { name: 'commentatorName', alias?: string  } 
  | { name: 'commentatorName_not', alias?: string  } 
  | { name: 'commentatorName_in', alias?: string  } 
  | { name: 'commentatorName_not_in', alias?: string  } 
  | { name: 'commentatorName_lt', alias?: string  } 
  | { name: 'commentatorName_lte', alias?: string  } 
  | { name: 'commentatorName_gt', alias?: string  } 
  | { name: 'commentatorName_gte', alias?: string  } 
  | { name: 'commentatorName_contains', alias?: string  } 
  | { name: 'commentatorName_not_contains', alias?: string  } 
  | { name: 'commentatorName_starts_with', alias?: string  } 
  | { name: 'commentatorName_not_starts_with', alias?: string  } 
  | { name: 'commentatorName_ends_with', alias?: string  } 
  | { name: 'commentatorName_not_ends_with', alias?: string  } 
  | { name: 'comments', alias?: string  } 
  | { name: 'comments_not', alias?: string  } 
  | { name: 'comments_in', alias?: string  } 
  | { name: 'comments_not_in', alias?: string  } 
  | { name: 'comments_lt', alias?: string  } 
  | { name: 'comments_lte', alias?: string  } 
  | { name: 'comments_gt', alias?: string  } 
  | { name: 'comments_gte', alias?: string  } 
  | { name: 'comments_contains', alias?: string  } 
  | { name: 'comments_not_contains', alias?: string  } 
  | { name: 'comments_starts_with', alias?: string  } 
  | { name: 'comments_not_starts_with', alias?: string  } 
  | { name: 'comments_ends_with', alias?: string  } 
  | { name: 'comments_not_ends_with', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'logCreated_not', alias?: string  } 
  | { name: 'logCreated_in', alias?: string  } 
  | { name: 'logCreated_not_in', alias?: string  } 
  | { name: 'logCreated_lt', alias?: string  } 
  | { name: 'logCreated_lte', alias?: string  } 
  | { name: 'logCreated_gt', alias?: string  } 
  | { name: 'logCreated_gte', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogPostWhereUniqueInput {
  id?: number | null
}
export type BlogPostWhereUniqueInputInputObject =
  | Extract<keyof BlogPostWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PostImageWhereUniqueInput {
  id?: number | null
}
export type PostImageWhereUniqueInputInputObject =
  | Extract<keyof PostImageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CityWhereUniqueInput {
  id?: number | null
}
export type CityWhereUniqueInputInputObject =
  | Extract<keyof CityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ContactUsWhereUniqueInput {
  id?: number | null
}
export type ContactUsWhereUniqueInputInputObject =
  | Extract<keyof ContactUsWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ContactUsWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  lat?: string | null
  lat_not?: string | null
  lat_in?: string[]
  lat_not_in?: string[]
  lat_lt?: string | null
  lat_lte?: string | null
  lat_gt?: string | null
  lat_gte?: string | null
  lat_contains?: string | null
  lat_not_contains?: string | null
  lat_starts_with?: string | null
  lat_not_starts_with?: string | null
  lat_ends_with?: string | null
  lat_not_ends_with?: string | null
  lon?: string | null
  lon_not?: string | null
  lon_in?: string[]
  lon_not_in?: string[]
  lon_lt?: string | null
  lon_lte?: string | null
  lon_gt?: string | null
  lon_gte?: string | null
  lon_contains?: string | null
  lon_not_contains?: string | null
  lon_starts_with?: string | null
  lon_not_starts_with?: string | null
  lon_ends_with?: string | null
  lon_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  pobox?: string | null
  pobox_not?: string | null
  pobox_in?: string[]
  pobox_not_in?: string[]
  pobox_lt?: string | null
  pobox_lte?: string | null
  pobox_gt?: string | null
  pobox_gte?: string | null
  pobox_contains?: string | null
  pobox_not_contains?: string | null
  pobox_starts_with?: string | null
  pobox_not_starts_with?: string | null
  pobox_ends_with?: string | null
  pobox_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: ContactUsWhereInput[]
  OR?: ContactUsWhereInput[]
  NOT?: ContactUsWhereInput[]
}
export type ContactUsWhereInputInputObject =
  | Extract<keyof ContactUsWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'address_not', alias?: string  } 
  | { name: 'address_in', alias?: string  } 
  | { name: 'address_not_in', alias?: string  } 
  | { name: 'address_lt', alias?: string  } 
  | { name: 'address_lte', alias?: string  } 
  | { name: 'address_gt', alias?: string  } 
  | { name: 'address_gte', alias?: string  } 
  | { name: 'address_contains', alias?: string  } 
  | { name: 'address_not_contains', alias?: string  } 
  | { name: 'address_starts_with', alias?: string  } 
  | { name: 'address_not_starts_with', alias?: string  } 
  | { name: 'address_ends_with', alias?: string  } 
  | { name: 'address_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lat_not', alias?: string  } 
  | { name: 'lat_in', alias?: string  } 
  | { name: 'lat_not_in', alias?: string  } 
  | { name: 'lat_lt', alias?: string  } 
  | { name: 'lat_lte', alias?: string  } 
  | { name: 'lat_gt', alias?: string  } 
  | { name: 'lat_gte', alias?: string  } 
  | { name: 'lat_contains', alias?: string  } 
  | { name: 'lat_not_contains', alias?: string  } 
  | { name: 'lat_starts_with', alias?: string  } 
  | { name: 'lat_not_starts_with', alias?: string  } 
  | { name: 'lat_ends_with', alias?: string  } 
  | { name: 'lat_not_ends_with', alias?: string  } 
  | { name: 'lon', alias?: string  } 
  | { name: 'lon_not', alias?: string  } 
  | { name: 'lon_in', alias?: string  } 
  | { name: 'lon_not_in', alias?: string  } 
  | { name: 'lon_lt', alias?: string  } 
  | { name: 'lon_lte', alias?: string  } 
  | { name: 'lon_gt', alias?: string  } 
  | { name: 'lon_gte', alias?: string  } 
  | { name: 'lon_contains', alias?: string  } 
  | { name: 'lon_not_contains', alias?: string  } 
  | { name: 'lon_starts_with', alias?: string  } 
  | { name: 'lon_not_starts_with', alias?: string  } 
  | { name: 'lon_ends_with', alias?: string  } 
  | { name: 'lon_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'pobox', alias?: string  } 
  | { name: 'pobox_not', alias?: string  } 
  | { name: 'pobox_in', alias?: string  } 
  | { name: 'pobox_not_in', alias?: string  } 
  | { name: 'pobox_lt', alias?: string  } 
  | { name: 'pobox_lte', alias?: string  } 
  | { name: 'pobox_gt', alias?: string  } 
  | { name: 'pobox_gte', alias?: string  } 
  | { name: 'pobox_contains', alias?: string  } 
  | { name: 'pobox_not_contains', alias?: string  } 
  | { name: 'pobox_starts_with', alias?: string  } 
  | { name: 'pobox_not_starts_with', alias?: string  } 
  | { name: 'pobox_ends_with', alias?: string  } 
  | { name: 'pobox_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CountryWhereUniqueInput {
  id?: number | null
}
export type CountryWhereUniqueInputInputObject =
  | Extract<keyof CountryWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DiseaseWhereUniqueInput {
  id?: number | null
}
export type DiseaseWhereUniqueInputInputObject =
  | Extract<keyof DiseaseWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DiseaseCoveredWhereUniqueInput {
  id?: number | null
}
export type DiseaseCoveredWhereUniqueInputInputObject =
  | Extract<keyof DiseaseCoveredWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DiseaseCoveredWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  diseaseId?: number | null
  diseaseId_not?: number | null
  diseaseId_in?: number[]
  diseaseId_not_in?: number[]
  diseaseId_lt?: number | null
  diseaseId_lte?: number | null
  diseaseId_gt?: number | null
  diseaseId_gte?: number | null
  insuranceCatId?: number | null
  insuranceCatId_not?: number | null
  insuranceCatId_in?: number[]
  insuranceCatId_not_in?: number[]
  insuranceCatId_lt?: number | null
  insuranceCatId_lte?: number | null
  insuranceCatId_gt?: number | null
  insuranceCatId_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DiseaseCoveredWhereInput[]
  OR?: DiseaseCoveredWhereInput[]
  NOT?: DiseaseCoveredWhereInput[]
}
export type DiseaseCoveredWhereInputInputObject =
  | Extract<keyof DiseaseCoveredWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'diseaseId_not', alias?: string  } 
  | { name: 'diseaseId_in', alias?: string  } 
  | { name: 'diseaseId_not_in', alias?: string  } 
  | { name: 'diseaseId_lt', alias?: string  } 
  | { name: 'diseaseId_lte', alias?: string  } 
  | { name: 'diseaseId_gt', alias?: string  } 
  | { name: 'diseaseId_gte', alias?: string  } 
  | { name: 'insuranceCatId', alias?: string  } 
  | { name: 'insuranceCatId_not', alias?: string  } 
  | { name: 'insuranceCatId_in', alias?: string  } 
  | { name: 'insuranceCatId_not_in', alias?: string  } 
  | { name: 'insuranceCatId_lt', alias?: string  } 
  | { name: 'insuranceCatId_lte', alias?: string  } 
  | { name: 'insuranceCatId_gt', alias?: string  } 
  | { name: 'insuranceCatId_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorWhereUniqueInput {
  id?: number | null
}
export type DoctorWhereUniqueInputInputObject =
  | Extract<keyof DoctorWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DoctorOldWhereUniqueInput {
  id?: number | null
}
export type DoctorOldWhereUniqueInputInputObject =
  | Extract<keyof DoctorOldWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DoctorsRatingWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  doctors?: DoctorOldWhereInput | null
  rating?: string | null
  rating_not?: string | null
  rating_in?: string[]
  rating_not_in?: string[]
  rating_lt?: string | null
  rating_lte?: string | null
  rating_gt?: string | null
  rating_gte?: string | null
  rating_contains?: string | null
  rating_not_contains?: string | null
  rating_starts_with?: string | null
  rating_not_starts_with?: string | null
  rating_ends_with?: string | null
  rating_not_ends_with?: string | null
  systemIp?: string | null
  systemIp_not?: string | null
  systemIp_in?: string[]
  systemIp_not_in?: string[]
  systemIp_lt?: string | null
  systemIp_lte?: string | null
  systemIp_gt?: string | null
  systemIp_gte?: string | null
  systemIp_contains?: string | null
  systemIp_not_contains?: string | null
  systemIp_starts_with?: string | null
  systemIp_not_starts_with?: string | null
  systemIp_ends_with?: string | null
  systemIp_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DoctorsRatingWhereInput[]
  OR?: DoctorsRatingWhereInput[]
  NOT?: DoctorsRatingWhereInput[]
}
export type DoctorsRatingWhereInputInputObject =
  | Extract<keyof DoctorsRatingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'rating_not', alias?: string  } 
  | { name: 'rating_in', alias?: string  } 
  | { name: 'rating_not_in', alias?: string  } 
  | { name: 'rating_lt', alias?: string  } 
  | { name: 'rating_lte', alias?: string  } 
  | { name: 'rating_gt', alias?: string  } 
  | { name: 'rating_gte', alias?: string  } 
  | { name: 'rating_contains', alias?: string  } 
  | { name: 'rating_not_contains', alias?: string  } 
  | { name: 'rating_starts_with', alias?: string  } 
  | { name: 'rating_not_starts_with', alias?: string  } 
  | { name: 'rating_ends_with', alias?: string  } 
  | { name: 'rating_not_ends_with', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  | { name: 'systemIp_not', alias?: string  } 
  | { name: 'systemIp_in', alias?: string  } 
  | { name: 'systemIp_not_in', alias?: string  } 
  | { name: 'systemIp_lt', alias?: string  } 
  | { name: 'systemIp_lte', alias?: string  } 
  | { name: 'systemIp_gt', alias?: string  } 
  | { name: 'systemIp_gte', alias?: string  } 
  | { name: 'systemIp_contains', alias?: string  } 
  | { name: 'systemIp_not_contains', alias?: string  } 
  | { name: 'systemIp_starts_with', alias?: string  } 
  | { name: 'systemIp_not_starts_with', alias?: string  } 
  | { name: 'systemIp_ends_with', alias?: string  } 
  | { name: 'systemIp_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorOldWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  designation?: string | null
  designation_not?: string | null
  designation_in?: string[]
  designation_not_in?: string[]
  designation_lt?: string | null
  designation_lte?: string | null
  designation_gt?: string | null
  designation_gte?: string | null
  designation_contains?: string | null
  designation_not_contains?: string | null
  designation_starts_with?: string | null
  designation_not_starts_with?: string | null
  designation_ends_with?: string | null
  designation_not_ends_with?: string | null
  doctorCv?: string | null
  doctorCv_not?: string | null
  doctorCv_in?: string[]
  doctorCv_not_in?: string[]
  doctorCv_lt?: string | null
  doctorCv_lte?: string | null
  doctorCv_gt?: string | null
  doctorCv_gte?: string | null
  doctorCv_contains?: string | null
  doctorCv_not_contains?: string | null
  doctorCv_starts_with?: string | null
  doctorCv_not_starts_with?: string | null
  doctorCv_ends_with?: string | null
  doctorCv_not_ends_with?: string | null
  doctorsRating_every?: DoctorsRatingWhereInput | null
  doctorsRating_some?: DoctorsRatingWhereInput | null
  doctorsRating_none?: DoctorsRatingWhereInput | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  mohcard?: string | null
  mohcard_not?: string | null
  mohcard_in?: string[]
  mohcard_not_in?: string[]
  mohcard_lt?: string | null
  mohcard_lte?: string | null
  mohcard_gt?: string | null
  mohcard_gte?: string | null
  mohcard_contains?: string | null
  mohcard_not_contains?: string | null
  mohcard_starts_with?: string | null
  mohcard_not_starts_with?: string | null
  mohcard_ends_with?: string | null
  mohcard_not_ends_with?: string | null
  mohId?: string | null
  mohId_not?: string | null
  mohId_in?: string[]
  mohId_not_in?: string[]
  mohId_lt?: string | null
  mohId_lte?: string | null
  mohId_gt?: string | null
  mohId_gte?: string | null
  mohId_contains?: string | null
  mohId_not_contains?: string | null
  mohId_starts_with?: string | null
  mohId_not_starts_with?: string | null
  mohId_ends_with?: string | null
  mohId_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  nameArabic?: string | null
  nameArabic_not?: string | null
  nameArabic_in?: string[]
  nameArabic_not_in?: string[]
  nameArabic_lt?: string | null
  nameArabic_lte?: string | null
  nameArabic_gt?: string | null
  nameArabic_gte?: string | null
  nameArabic_contains?: string | null
  nameArabic_not_contains?: string | null
  nameArabic_starts_with?: string | null
  nameArabic_not_starts_with?: string | null
  nameArabic_ends_with?: string | null
  nameArabic_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  fees?: string | null
  fees_not?: string | null
  fees_in?: string[]
  fees_not_in?: string[]
  fees_lt?: string | null
  fees_lte?: string | null
  fees_gt?: string | null
  fees_gte?: string | null
  fees_contains?: string | null
  fees_not_contains?: string | null
  fees_starts_with?: string | null
  fees_not_starts_with?: string | null
  fees_ends_with?: string | null
  fees_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  speciality?: SpecialityWhereInput | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DoctorOldWhereInput[]
  OR?: DoctorOldWhereInput[]
  NOT?: DoctorOldWhereInput[]
}
export type DoctorOldWhereInputInputObject =
  | Extract<keyof DoctorOldWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'designation_not', alias?: string  } 
  | { name: 'designation_in', alias?: string  } 
  | { name: 'designation_not_in', alias?: string  } 
  | { name: 'designation_lt', alias?: string  } 
  | { name: 'designation_lte', alias?: string  } 
  | { name: 'designation_gt', alias?: string  } 
  | { name: 'designation_gte', alias?: string  } 
  | { name: 'designation_contains', alias?: string  } 
  | { name: 'designation_not_contains', alias?: string  } 
  | { name: 'designation_starts_with', alias?: string  } 
  | { name: 'designation_not_starts_with', alias?: string  } 
  | { name: 'designation_ends_with', alias?: string  } 
  | { name: 'designation_not_ends_with', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorCv_not', alias?: string  } 
  | { name: 'doctorCv_in', alias?: string  } 
  | { name: 'doctorCv_not_in', alias?: string  } 
  | { name: 'doctorCv_lt', alias?: string  } 
  | { name: 'doctorCv_lte', alias?: string  } 
  | { name: 'doctorCv_gt', alias?: string  } 
  | { name: 'doctorCv_gte', alias?: string  } 
  | { name: 'doctorCv_contains', alias?: string  } 
  | { name: 'doctorCv_not_contains', alias?: string  } 
  | { name: 'doctorCv_starts_with', alias?: string  } 
  | { name: 'doctorCv_not_starts_with', alias?: string  } 
  | { name: 'doctorCv_ends_with', alias?: string  } 
  | { name: 'doctorCv_not_ends_with', alias?: string  } 
  | { name: 'doctorsRating_every', alias?: string  } 
  | { name: 'doctorsRating_some', alias?: string  } 
  | { name: 'doctorsRating_none', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohcard_not', alias?: string  } 
  | { name: 'mohcard_in', alias?: string  } 
  | { name: 'mohcard_not_in', alias?: string  } 
  | { name: 'mohcard_lt', alias?: string  } 
  | { name: 'mohcard_lte', alias?: string  } 
  | { name: 'mohcard_gt', alias?: string  } 
  | { name: 'mohcard_gte', alias?: string  } 
  | { name: 'mohcard_contains', alias?: string  } 
  | { name: 'mohcard_not_contains', alias?: string  } 
  | { name: 'mohcard_starts_with', alias?: string  } 
  | { name: 'mohcard_not_starts_with', alias?: string  } 
  | { name: 'mohcard_ends_with', alias?: string  } 
  | { name: 'mohcard_not_ends_with', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'mohId_not', alias?: string  } 
  | { name: 'mohId_in', alias?: string  } 
  | { name: 'mohId_not_in', alias?: string  } 
  | { name: 'mohId_lt', alias?: string  } 
  | { name: 'mohId_lte', alias?: string  } 
  | { name: 'mohId_gt', alias?: string  } 
  | { name: 'mohId_gte', alias?: string  } 
  | { name: 'mohId_contains', alias?: string  } 
  | { name: 'mohId_not_contains', alias?: string  } 
  | { name: 'mohId_starts_with', alias?: string  } 
  | { name: 'mohId_not_starts_with', alias?: string  } 
  | { name: 'mohId_ends_with', alias?: string  } 
  | { name: 'mohId_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'nameArabic_not', alias?: string  } 
  | { name: 'nameArabic_in', alias?: string  } 
  | { name: 'nameArabic_not_in', alias?: string  } 
  | { name: 'nameArabic_lt', alias?: string  } 
  | { name: 'nameArabic_lte', alias?: string  } 
  | { name: 'nameArabic_gt', alias?: string  } 
  | { name: 'nameArabic_gte', alias?: string  } 
  | { name: 'nameArabic_contains', alias?: string  } 
  | { name: 'nameArabic_not_contains', alias?: string  } 
  | { name: 'nameArabic_starts_with', alias?: string  } 
  | { name: 'nameArabic_not_starts_with', alias?: string  } 
  | { name: 'nameArabic_ends_with', alias?: string  } 
  | { name: 'nameArabic_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'fees_not', alias?: string  } 
  | { name: 'fees_in', alias?: string  } 
  | { name: 'fees_not_in', alias?: string  } 
  | { name: 'fees_lt', alias?: string  } 
  | { name: 'fees_lte', alias?: string  } 
  | { name: 'fees_gt', alias?: string  } 
  | { name: 'fees_gte', alias?: string  } 
  | { name: 'fees_contains', alias?: string  } 
  | { name: 'fees_not_contains', alias?: string  } 
  | { name: 'fees_starts_with', alias?: string  } 
  | { name: 'fees_not_starts_with', alias?: string  } 
  | { name: 'fees_ends_with', alias?: string  } 
  | { name: 'fees_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSheduleWhereUniqueInput {
  id?: number | null
}
export type DoctorSheduleWhereUniqueInputInputObject =
  | Extract<keyof DoctorSheduleWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DoctorSheduleWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  date?: number | null
  date_not?: number | null
  date_in?: number[]
  date_not_in?: number[]
  date_lt?: number | null
  date_lte?: number | null
  date_gt?: number | null
  date_gte?: number | null
  doctorId?: number | null
  doctorId_not?: number | null
  doctorId_in?: number[]
  doctorId_not_in?: number[]
  doctorId_lt?: number | null
  doctorId_lte?: number | null
  doctorId_gt?: number | null
  doctorId_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DoctorSheduleWhereInput[]
  OR?: DoctorSheduleWhereInput[]
  NOT?: DoctorSheduleWhereInput[]
}
export type DoctorSheduleWhereInputInputObject =
  | Extract<keyof DoctorSheduleWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'date_not', alias?: string  } 
  | { name: 'date_in', alias?: string  } 
  | { name: 'date_not_in', alias?: string  } 
  | { name: 'date_lt', alias?: string  } 
  | { name: 'date_lte', alias?: string  } 
  | { name: 'date_gt', alias?: string  } 
  | { name: 'date_gte', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorId_not', alias?: string  } 
  | { name: 'doctorId_in', alias?: string  } 
  | { name: 'doctorId_not_in', alias?: string  } 
  | { name: 'doctorId_lt', alias?: string  } 
  | { name: 'doctorId_lte', alias?: string  } 
  | { name: 'doctorId_gt', alias?: string  } 
  | { name: 'doctorId_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSheduleTimeWhereUniqueInput {
  id?: number | null
}
export type DoctorSheduleTimeWhereUniqueInputInputObject =
  | Extract<keyof DoctorSheduleTimeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DoctorSpecialityWhereInput {
  doctorId?: DoctorWhereInput | null
  specialityId?: SpecialityWhereInput | null
  AND?: DoctorSpecialityWhereInput[]
  OR?: DoctorSpecialityWhereInput[]
  NOT?: DoctorSpecialityWhereInput[]
}
export type DoctorSpecialityWhereInputInputObject =
  | Extract<keyof DoctorSpecialityWhereInput, string>
  | { name: 'doctorId', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorsRatingWhereUniqueInput {
  id?: number | null
}
export type DoctorsRatingWhereUniqueInputInputObject =
  | Extract<keyof DoctorsRatingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DrSheduleWhereUniqueInput {
  id?: number | null
}
export type DrSheduleWhereUniqueInputInputObject =
  | Extract<keyof DrSheduleWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DrSheduleWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  date?: string | null
  date_not?: string | null
  date_in?: string[]
  date_not_in?: string[]
  date_lt?: string | null
  date_lte?: string | null
  date_gt?: string | null
  date_gte?: string | null
  doctorId?: number | null
  doctorId_not?: number | null
  doctorId_in?: number[]
  doctorId_not_in?: number[]
  doctorId_lt?: number | null
  doctorId_lte?: number | null
  doctorId_gt?: number | null
  doctorId_gte?: number | null
  hospitalId?: number | null
  hospitalId_not?: number | null
  hospitalId_in?: number[]
  hospitalId_not_in?: number[]
  hospitalId_lt?: number | null
  hospitalId_lte?: number | null
  hospitalId_gt?: number | null
  hospitalId_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DrSheduleWhereInput[]
  OR?: DrSheduleWhereInput[]
  NOT?: DrSheduleWhereInput[]
}
export type DrSheduleWhereInputInputObject =
  | Extract<keyof DrSheduleWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'date_not', alias?: string  } 
  | { name: 'date_in', alias?: string  } 
  | { name: 'date_not_in', alias?: string  } 
  | { name: 'date_lt', alias?: string  } 
  | { name: 'date_lte', alias?: string  } 
  | { name: 'date_gt', alias?: string  } 
  | { name: 'date_gte', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorId_not', alias?: string  } 
  | { name: 'doctorId_in', alias?: string  } 
  | { name: 'doctorId_not_in', alias?: string  } 
  | { name: 'doctorId_lt', alias?: string  } 
  | { name: 'doctorId_lte', alias?: string  } 
  | { name: 'doctorId_gt', alias?: string  } 
  | { name: 'doctorId_gte', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'hospitalId_not', alias?: string  } 
  | { name: 'hospitalId_in', alias?: string  } 
  | { name: 'hospitalId_not_in', alias?: string  } 
  | { name: 'hospitalId_lt', alias?: string  } 
  | { name: 'hospitalId_lte', alias?: string  } 
  | { name: 'hospitalId_gt', alias?: string  } 
  | { name: 'hospitalId_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FacilityWhereUniqueInput {
  id?: number | null
}
export type FacilityWhereUniqueInputInputObject =
  | Extract<keyof FacilityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface FacilityWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  facility?: string | null
  facility_not?: string | null
  facility_in?: string[]
  facility_not_in?: string[]
  facility_lt?: string | null
  facility_lte?: string | null
  facility_gt?: string | null
  facility_gte?: string | null
  facility_contains?: string | null
  facility_not_contains?: string | null
  facility_starts_with?: string | null
  facility_not_starts_with?: string | null
  facility_ends_with?: string | null
  facility_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: FacilityWhereInput[]
  OR?: FacilityWhereInput[]
  NOT?: FacilityWhereInput[]
}
export type FacilityWhereInputInputObject =
  | Extract<keyof FacilityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'facility', alias?: string  } 
  | { name: 'facility_not', alias?: string  } 
  | { name: 'facility_in', alias?: string  } 
  | { name: 'facility_not_in', alias?: string  } 
  | { name: 'facility_lt', alias?: string  } 
  | { name: 'facility_lte', alias?: string  } 
  | { name: 'facility_gt', alias?: string  } 
  | { name: 'facility_gte', alias?: string  } 
  | { name: 'facility_contains', alias?: string  } 
  | { name: 'facility_not_contains', alias?: string  } 
  | { name: 'facility_starts_with', alias?: string  } 
  | { name: 'facility_not_starts_with', alias?: string  } 
  | { name: 'facility_ends_with', alias?: string  } 
  | { name: 'facility_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalWhereUniqueInput {
  id?: number | null
}
export type HospitalWhereUniqueInputInputObject =
  | Extract<keyof HospitalWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface HospitalDoctorWhereInput {
  dr?: DoctorWhereInput | null
  hospital?: HospitalWhereInput | null
  AND?: HospitalDoctorWhereInput[]
  OR?: HospitalDoctorWhereInput[]
  NOT?: HospitalDoctorWhereInput[]
}
export type HospitalDoctorWhereInputInputObject =
  | Extract<keyof HospitalDoctorWhereInput, string>
  | { name: 'dr', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalFacilityWhereUniqueInput {
  id?: number | null
}
export type HospitalFacilityWhereUniqueInputInputObject =
  | Extract<keyof HospitalFacilityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface HospitalFacilityWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  facilityId?: number | null
  facilityId_not?: number | null
  facilityId_in?: number[]
  facilityId_not_in?: number[]
  facilityId_lt?: number | null
  facilityId_lte?: number | null
  facilityId_gt?: number | null
  facilityId_gte?: number | null
  hospitalId?: number | null
  hospitalId_not?: number | null
  hospitalId_in?: number[]
  hospitalId_not_in?: number[]
  hospitalId_lt?: number | null
  hospitalId_lte?: number | null
  hospitalId_gt?: number | null
  hospitalId_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: HospitalFacilityWhereInput[]
  OR?: HospitalFacilityWhereInput[]
  NOT?: HospitalFacilityWhereInput[]
}
export type HospitalFacilityWhereInputInputObject =
  | Extract<keyof HospitalFacilityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'facilityId', alias?: string  } 
  | { name: 'facilityId_not', alias?: string  } 
  | { name: 'facilityId_in', alias?: string  } 
  | { name: 'facilityId_not_in', alias?: string  } 
  | { name: 'facilityId_lt', alias?: string  } 
  | { name: 'facilityId_lte', alias?: string  } 
  | { name: 'facilityId_gt', alias?: string  } 
  | { name: 'facilityId_gte', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'hospitalId_not', alias?: string  } 
  | { name: 'hospitalId_in', alias?: string  } 
  | { name: 'hospitalId_not_in', alias?: string  } 
  | { name: 'hospitalId_lt', alias?: string  } 
  | { name: 'hospitalId_lte', alias?: string  } 
  | { name: 'hospitalId_gt', alias?: string  } 
  | { name: 'hospitalId_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalInsuranceWhereInput {
  hospitalId?: HospitalWhereInput | null
  insurance?: InsuranceWhereInput | null
  AND?: HospitalInsuranceWhereInput[]
  OR?: HospitalInsuranceWhereInput[]
  NOT?: HospitalInsuranceWhereInput[]
}
export type HospitalInsuranceWhereInputInputObject =
  | Extract<keyof HospitalInsuranceWhereInput, string>
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalRatingWhereUniqueInput {
  id?: number | null
}
export type HospitalRatingWhereUniqueInputInputObject =
  | Extract<keyof HospitalRatingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface HospitalRatingWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  hospitalId?: number | null
  hospitalId_not?: number | null
  hospitalId_in?: number[]
  hospitalId_not_in?: number[]
  hospitalId_lt?: number | null
  hospitalId_lte?: number | null
  hospitalId_gt?: number | null
  hospitalId_gte?: number | null
  rating?: string | null
  rating_not?: string | null
  rating_in?: string[]
  rating_not_in?: string[]
  rating_lt?: string | null
  rating_lte?: string | null
  rating_gt?: string | null
  rating_gte?: string | null
  rating_contains?: string | null
  rating_not_contains?: string | null
  rating_starts_with?: string | null
  rating_not_starts_with?: string | null
  rating_ends_with?: string | null
  rating_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: HospitalRatingWhereInput[]
  OR?: HospitalRatingWhereInput[]
  NOT?: HospitalRatingWhereInput[]
}
export type HospitalRatingWhereInputInputObject =
  | Extract<keyof HospitalRatingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'hospitalId_not', alias?: string  } 
  | { name: 'hospitalId_in', alias?: string  } 
  | { name: 'hospitalId_not_in', alias?: string  } 
  | { name: 'hospitalId_lt', alias?: string  } 
  | { name: 'hospitalId_lte', alias?: string  } 
  | { name: 'hospitalId_gt', alias?: string  } 
  | { name: 'hospitalId_gte', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'rating_not', alias?: string  } 
  | { name: 'rating_in', alias?: string  } 
  | { name: 'rating_not_in', alias?: string  } 
  | { name: 'rating_lt', alias?: string  } 
  | { name: 'rating_lte', alias?: string  } 
  | { name: 'rating_gt', alias?: string  } 
  | { name: 'rating_gte', alias?: string  } 
  | { name: 'rating_contains', alias?: string  } 
  | { name: 'rating_not_contains', alias?: string  } 
  | { name: 'rating_starts_with', alias?: string  } 
  | { name: 'rating_not_starts_with', alias?: string  } 
  | { name: 'rating_ends_with', alias?: string  } 
  | { name: 'rating_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface IllnessWhereUniqueInput {
  id?: number | null
}
export type IllnessWhereUniqueInputInputObject =
  | Extract<keyof IllnessWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface IllnessWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  illness?: string | null
  illness_not?: string | null
  illness_in?: string[]
  illness_not_in?: string[]
  illness_lt?: string | null
  illness_lte?: string | null
  illness_gt?: string | null
  illness_gte?: string | null
  illness_contains?: string | null
  illness_not_contains?: string | null
  illness_starts_with?: string | null
  illness_not_starts_with?: string | null
  illness_ends_with?: string | null
  illness_not_ends_with?: string | null
  illnessArabic?: string | null
  illnessArabic_not?: string | null
  illnessArabic_in?: string[]
  illnessArabic_not_in?: string[]
  illnessArabic_lt?: string | null
  illnessArabic_lte?: string | null
  illnessArabic_gt?: string | null
  illnessArabic_gte?: string | null
  illnessArabic_contains?: string | null
  illnessArabic_not_contains?: string | null
  illnessArabic_starts_with?: string | null
  illnessArabic_not_starts_with?: string | null
  illnessArabic_ends_with?: string | null
  illnessArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: IllnessWhereInput[]
  OR?: IllnessWhereInput[]
  NOT?: IllnessWhereInput[]
}
export type IllnessWhereInputInputObject =
  | Extract<keyof IllnessWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'illness', alias?: string  } 
  | { name: 'illness_not', alias?: string  } 
  | { name: 'illness_in', alias?: string  } 
  | { name: 'illness_not_in', alias?: string  } 
  | { name: 'illness_lt', alias?: string  } 
  | { name: 'illness_lte', alias?: string  } 
  | { name: 'illness_gt', alias?: string  } 
  | { name: 'illness_gte', alias?: string  } 
  | { name: 'illness_contains', alias?: string  } 
  | { name: 'illness_not_contains', alias?: string  } 
  | { name: 'illness_starts_with', alias?: string  } 
  | { name: 'illness_not_starts_with', alias?: string  } 
  | { name: 'illness_ends_with', alias?: string  } 
  | { name: 'illness_not_ends_with', alias?: string  } 
  | { name: 'illnessArabic', alias?: string  } 
  | { name: 'illnessArabic_not', alias?: string  } 
  | { name: 'illnessArabic_in', alias?: string  } 
  | { name: 'illnessArabic_not_in', alias?: string  } 
  | { name: 'illnessArabic_lt', alias?: string  } 
  | { name: 'illnessArabic_lte', alias?: string  } 
  | { name: 'illnessArabic_gt', alias?: string  } 
  | { name: 'illnessArabic_gte', alias?: string  } 
  | { name: 'illnessArabic_contains', alias?: string  } 
  | { name: 'illnessArabic_not_contains', alias?: string  } 
  | { name: 'illnessArabic_starts_with', alias?: string  } 
  | { name: 'illnessArabic_not_starts_with', alias?: string  } 
  | { name: 'illnessArabic_ends_with', alias?: string  } 
  | { name: 'illnessArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InsuranceWhereUniqueInput {
  id?: number | null
}
export type InsuranceWhereUniqueInputInputObject =
  | Extract<keyof InsuranceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface InsuranceCategoryWhereUniqueInput {
  id?: number | null
}
export type InsuranceCategoryWhereUniqueInputInputObject =
  | Extract<keyof InsuranceCategoryWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface InsuranceCategoryWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  category?: string | null
  category_not?: string | null
  category_in?: string[]
  category_not_in?: string[]
  category_lt?: string | null
  category_lte?: string | null
  category_gt?: string | null
  category_gte?: string | null
  category_contains?: string | null
  category_not_contains?: string | null
  category_starts_with?: string | null
  category_not_starts_with?: string | null
  category_ends_with?: string | null
  category_not_ends_with?: string | null
  insuranceId?: number | null
  insuranceId_not?: number | null
  insuranceId_in?: number[]
  insuranceId_not_in?: number[]
  insuranceId_lt?: number | null
  insuranceId_lte?: number | null
  insuranceId_gt?: number | null
  insuranceId_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: InsuranceCategoryWhereInput[]
  OR?: InsuranceCategoryWhereInput[]
  NOT?: InsuranceCategoryWhereInput[]
}
export type InsuranceCategoryWhereInputInputObject =
  | Extract<keyof InsuranceCategoryWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'category_not', alias?: string  } 
  | { name: 'category_in', alias?: string  } 
  | { name: 'category_not_in', alias?: string  } 
  | { name: 'category_lt', alias?: string  } 
  | { name: 'category_lte', alias?: string  } 
  | { name: 'category_gt', alias?: string  } 
  | { name: 'category_gte', alias?: string  } 
  | { name: 'category_contains', alias?: string  } 
  | { name: 'category_not_contains', alias?: string  } 
  | { name: 'category_starts_with', alias?: string  } 
  | { name: 'category_not_starts_with', alias?: string  } 
  | { name: 'category_ends_with', alias?: string  } 
  | { name: 'category_not_ends_with', alias?: string  } 
  | { name: 'insuranceId', alias?: string  } 
  | { name: 'insuranceId_not', alias?: string  } 
  | { name: 'insuranceId_in', alias?: string  } 
  | { name: 'insuranceId_not_in', alias?: string  } 
  | { name: 'insuranceId_lt', alias?: string  } 
  | { name: 'insuranceId_lte', alias?: string  } 
  | { name: 'insuranceId_gt', alias?: string  } 
  | { name: 'insuranceId_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface JobWhereUniqueInput {
  id?: number | null
}
export type JobWhereUniqueInputInputObject =
  | Extract<keyof JobWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface JobWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  position?: string | null
  position_not?: string | null
  position_in?: string[]
  position_not_in?: string[]
  position_lt?: string | null
  position_lte?: string | null
  position_gt?: string | null
  position_gte?: string | null
  position_contains?: string | null
  position_not_contains?: string | null
  position_starts_with?: string | null
  position_not_starts_with?: string | null
  position_ends_with?: string | null
  position_not_ends_with?: string | null
  positionArabic?: string | null
  positionArabic_not?: string | null
  positionArabic_in?: string[]
  positionArabic_not_in?: string[]
  positionArabic_lt?: string | null
  positionArabic_lte?: string | null
  positionArabic_gt?: string | null
  positionArabic_gte?: string | null
  positionArabic_contains?: string | null
  positionArabic_not_contains?: string | null
  positionArabic_starts_with?: string | null
  positionArabic_not_starts_with?: string | null
  positionArabic_ends_with?: string | null
  positionArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: JobWhereInput[]
  OR?: JobWhereInput[]
  NOT?: JobWhereInput[]
}
export type JobWhereInputInputObject =
  | Extract<keyof JobWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'position_not', alias?: string  } 
  | { name: 'position_in', alias?: string  } 
  | { name: 'position_not_in', alias?: string  } 
  | { name: 'position_lt', alias?: string  } 
  | { name: 'position_lte', alias?: string  } 
  | { name: 'position_gt', alias?: string  } 
  | { name: 'position_gte', alias?: string  } 
  | { name: 'position_contains', alias?: string  } 
  | { name: 'position_not_contains', alias?: string  } 
  | { name: 'position_starts_with', alias?: string  } 
  | { name: 'position_not_starts_with', alias?: string  } 
  | { name: 'position_ends_with', alias?: string  } 
  | { name: 'position_not_ends_with', alias?: string  } 
  | { name: 'positionArabic', alias?: string  } 
  | { name: 'positionArabic_not', alias?: string  } 
  | { name: 'positionArabic_in', alias?: string  } 
  | { name: 'positionArabic_not_in', alias?: string  } 
  | { name: 'positionArabic_lt', alias?: string  } 
  | { name: 'positionArabic_lte', alias?: string  } 
  | { name: 'positionArabic_gt', alias?: string  } 
  | { name: 'positionArabic_gte', alias?: string  } 
  | { name: 'positionArabic_contains', alias?: string  } 
  | { name: 'positionArabic_not_contains', alias?: string  } 
  | { name: 'positionArabic_starts_with', alias?: string  } 
  | { name: 'positionArabic_not_starts_with', alias?: string  } 
  | { name: 'positionArabic_ends_with', alias?: string  } 
  | { name: 'positionArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LanguageWhereUniqueInput {
  id?: number | null
}
export type LanguageWhereUniqueInputInputObject =
  | Extract<keyof LanguageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface LanguageWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  language?: string | null
  language_not?: string | null
  language_in?: string[]
  language_not_in?: string[]
  language_lt?: string | null
  language_lte?: string | null
  language_gt?: string | null
  language_gte?: string | null
  language_contains?: string | null
  language_not_contains?: string | null
  language_starts_with?: string | null
  language_not_starts_with?: string | null
  language_ends_with?: string | null
  language_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: LanguageWhereInput[]
  OR?: LanguageWhereInput[]
  NOT?: LanguageWhereInput[]
}
export type LanguageWhereInputInputObject =
  | Extract<keyof LanguageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'language_not', alias?: string  } 
  | { name: 'language_in', alias?: string  } 
  | { name: 'language_not_in', alias?: string  } 
  | { name: 'language_lt', alias?: string  } 
  | { name: 'language_lte', alias?: string  } 
  | { name: 'language_gt', alias?: string  } 
  | { name: 'language_gte', alias?: string  } 
  | { name: 'language_contains', alias?: string  } 
  | { name: 'language_not_contains', alias?: string  } 
  | { name: 'language_starts_with', alias?: string  } 
  | { name: 'language_not_starts_with', alias?: string  } 
  | { name: 'language_ends_with', alias?: string  } 
  | { name: 'language_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MessageWhereUniqueInput {
  id?: number | null
}
export type MessageWhereUniqueInputInputObject =
  | Extract<keyof MessageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MessageWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  fromUser?: number | null
  fromUser_not?: number | null
  fromUser_in?: number[]
  fromUser_not_in?: number[]
  fromUser_lt?: number | null
  fromUser_lte?: number | null
  fromUser_gt?: number | null
  fromUser_gte?: number | null
  isDelete?: number | null
  isDelete_not?: number | null
  isDelete_in?: number[]
  isDelete_not_in?: number[]
  isDelete_lt?: number | null
  isDelete_lte?: number | null
  isDelete_gt?: number | null
  isDelete_gte?: number | null
  isRead?: number | null
  isRead_not?: number | null
  isRead_in?: number[]
  isRead_not_in?: number[]
  isRead_lt?: number | null
  isRead_lte?: number | null
  isRead_gt?: number | null
  isRead_gte?: number | null
  logCreate?: string | null
  logCreate_not?: string | null
  logCreate_in?: string[]
  logCreate_not_in?: string[]
  logCreate_lt?: string | null
  logCreate_lte?: string | null
  logCreate_gt?: string | null
  logCreate_gte?: string | null
  message?: string | null
  message_not?: string | null
  message_in?: string[]
  message_not_in?: string[]
  message_lt?: string | null
  message_lte?: string | null
  message_gt?: string | null
  message_gte?: string | null
  message_contains?: string | null
  message_not_contains?: string | null
  message_starts_with?: string | null
  message_not_starts_with?: string | null
  message_ends_with?: string | null
  message_not_ends_with?: string | null
  sentBy?: number | null
  sentBy_not?: number | null
  sentBy_in?: number[]
  sentBy_not_in?: number[]
  sentBy_lt?: number | null
  sentBy_lte?: number | null
  sentBy_gt?: number | null
  sentBy_gte?: number | null
  toUser?: number | null
  toUser_not?: number | null
  toUser_in?: number[]
  toUser_not_in?: number[]
  toUser_lt?: number | null
  toUser_lte?: number | null
  toUser_gt?: number | null
  toUser_gte?: number | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MessageWhereInput[]
  OR?: MessageWhereInput[]
  NOT?: MessageWhereInput[]
}
export type MessageWhereInputInputObject =
  | Extract<keyof MessageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'fromUser', alias?: string  } 
  | { name: 'fromUser_not', alias?: string  } 
  | { name: 'fromUser_in', alias?: string  } 
  | { name: 'fromUser_not_in', alias?: string  } 
  | { name: 'fromUser_lt', alias?: string  } 
  | { name: 'fromUser_lte', alias?: string  } 
  | { name: 'fromUser_gt', alias?: string  } 
  | { name: 'fromUser_gte', alias?: string  } 
  | { name: 'isDelete', alias?: string  } 
  | { name: 'isDelete_not', alias?: string  } 
  | { name: 'isDelete_in', alias?: string  } 
  | { name: 'isDelete_not_in', alias?: string  } 
  | { name: 'isDelete_lt', alias?: string  } 
  | { name: 'isDelete_lte', alias?: string  } 
  | { name: 'isDelete_gt', alias?: string  } 
  | { name: 'isDelete_gte', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'isRead_not', alias?: string  } 
  | { name: 'isRead_in', alias?: string  } 
  | { name: 'isRead_not_in', alias?: string  } 
  | { name: 'isRead_lt', alias?: string  } 
  | { name: 'isRead_lte', alias?: string  } 
  | { name: 'isRead_gt', alias?: string  } 
  | { name: 'isRead_gte', alias?: string  } 
  | { name: 'logCreate', alias?: string  } 
  | { name: 'logCreate_not', alias?: string  } 
  | { name: 'logCreate_in', alias?: string  } 
  | { name: 'logCreate_not_in', alias?: string  } 
  | { name: 'logCreate_lt', alias?: string  } 
  | { name: 'logCreate_lte', alias?: string  } 
  | { name: 'logCreate_gt', alias?: string  } 
  | { name: 'logCreate_gte', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'message_not', alias?: string  } 
  | { name: 'message_in', alias?: string  } 
  | { name: 'message_not_in', alias?: string  } 
  | { name: 'message_lt', alias?: string  } 
  | { name: 'message_lte', alias?: string  } 
  | { name: 'message_gt', alias?: string  } 
  | { name: 'message_gte', alias?: string  } 
  | { name: 'message_contains', alias?: string  } 
  | { name: 'message_not_contains', alias?: string  } 
  | { name: 'message_starts_with', alias?: string  } 
  | { name: 'message_not_starts_with', alias?: string  } 
  | { name: 'message_ends_with', alias?: string  } 
  | { name: 'message_not_ends_with', alias?: string  } 
  | { name: 'sentBy', alias?: string  } 
  | { name: 'sentBy_not', alias?: string  } 
  | { name: 'sentBy_in', alias?: string  } 
  | { name: 'sentBy_not_in', alias?: string  } 
  | { name: 'sentBy_lt', alias?: string  } 
  | { name: 'sentBy_lte', alias?: string  } 
  | { name: 'sentBy_gt', alias?: string  } 
  | { name: 'sentBy_gte', alias?: string  } 
  | { name: 'toUser', alias?: string  } 
  | { name: 'toUser_not', alias?: string  } 
  | { name: 'toUser_in', alias?: string  } 
  | { name: 'toUser_not_in', alias?: string  } 
  | { name: 'toUser_lt', alias?: string  } 
  | { name: 'toUser_lte', alias?: string  } 
  | { name: 'toUser_gt', alias?: string  } 
  | { name: 'toUser_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MigrationWhereUniqueInput {
  id?: number | null
}
export type MigrationWhereUniqueInputInputObject =
  | Extract<keyof MigrationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MigrationWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  batch?: number | null
  batch_not?: number | null
  batch_in?: number[]
  batch_not_in?: number[]
  batch_lt?: number | null
  batch_lte?: number | null
  batch_gt?: number | null
  batch_gte?: number | null
  migration?: string | null
  migration_not?: string | null
  migration_in?: string[]
  migration_not_in?: string[]
  migration_lt?: string | null
  migration_lte?: string | null
  migration_gt?: string | null
  migration_gte?: string | null
  migration_contains?: string | null
  migration_not_contains?: string | null
  migration_starts_with?: string | null
  migration_not_starts_with?: string | null
  migration_ends_with?: string | null
  migration_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MigrationWhereInput[]
  OR?: MigrationWhereInput[]
  NOT?: MigrationWhereInput[]
}
export type MigrationWhereInputInputObject =
  | Extract<keyof MigrationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  | { name: 'batch_not', alias?: string  } 
  | { name: 'batch_in', alias?: string  } 
  | { name: 'batch_not_in', alias?: string  } 
  | { name: 'batch_lt', alias?: string  } 
  | { name: 'batch_lte', alias?: string  } 
  | { name: 'batch_gt', alias?: string  } 
  | { name: 'batch_gte', alias?: string  } 
  | { name: 'migration', alias?: string  } 
  | { name: 'migration_not', alias?: string  } 
  | { name: 'migration_in', alias?: string  } 
  | { name: 'migration_not_in', alias?: string  } 
  | { name: 'migration_lt', alias?: string  } 
  | { name: 'migration_lte', alias?: string  } 
  | { name: 'migration_gt', alias?: string  } 
  | { name: 'migration_gte', alias?: string  } 
  | { name: 'migration_contains', alias?: string  } 
  | { name: 'migration_not_contains', alias?: string  } 
  | { name: 'migration_starts_with', alias?: string  } 
  | { name: 'migration_not_starts_with', alias?: string  } 
  | { name: 'migration_ends_with', alias?: string  } 
  | { name: 'migration_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OfferWhereUniqueInput {
  id?: number | null
}
export type OfferWhereUniqueInputInputObject =
  | Extract<keyof OfferWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OfferWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  descriptionArabic?: string | null
  descriptionArabic_not?: string | null
  descriptionArabic_in?: string[]
  descriptionArabic_not_in?: string[]
  descriptionArabic_lt?: string | null
  descriptionArabic_lte?: string | null
  descriptionArabic_gt?: string | null
  descriptionArabic_gte?: string | null
  descriptionArabic_contains?: string | null
  descriptionArabic_not_contains?: string | null
  descriptionArabic_starts_with?: string | null
  descriptionArabic_not_starts_with?: string | null
  descriptionArabic_ends_with?: string | null
  descriptionArabic_not_ends_with?: string | null
  endDate?: string | null
  endDate_not?: string | null
  endDate_in?: string[]
  endDate_not_in?: string[]
  endDate_lt?: string | null
  endDate_lte?: string | null
  endDate_gt?: string | null
  endDate_gte?: string | null
  heading?: string | null
  heading_not?: string | null
  heading_in?: string[]
  heading_not_in?: string[]
  heading_lt?: string | null
  heading_lte?: string | null
  heading_gt?: string | null
  heading_gte?: string | null
  heading_contains?: string | null
  heading_not_contains?: string | null
  heading_starts_with?: string | null
  heading_not_starts_with?: string | null
  heading_ends_with?: string | null
  heading_not_ends_with?: string | null
  headingArabic?: string | null
  headingArabic_not?: string | null
  headingArabic_in?: string[]
  headingArabic_not_in?: string[]
  headingArabic_lt?: string | null
  headingArabic_lte?: string | null
  headingArabic_gt?: string | null
  headingArabic_gte?: string | null
  headingArabic_contains?: string | null
  headingArabic_not_contains?: string | null
  headingArabic_starts_with?: string | null
  headingArabic_not_starts_with?: string | null
  headingArabic_ends_with?: string | null
  headingArabic_not_ends_with?: string | null
  hospitalId?: number | null
  hospitalId_not?: number | null
  hospitalId_in?: number[]
  hospitalId_not_in?: number[]
  hospitalId_lt?: number | null
  hospitalId_lte?: number | null
  hospitalId_gt?: number | null
  hospitalId_gte?: number | null
  offerImage?: string | null
  offerImage_not?: string | null
  offerImage_in?: string[]
  offerImage_not_in?: string[]
  offerImage_lt?: string | null
  offerImage_lte?: string | null
  offerImage_gt?: string | null
  offerImage_gte?: string | null
  offerImage_contains?: string | null
  offerImage_not_contains?: string | null
  offerImage_starts_with?: string | null
  offerImage_not_starts_with?: string | null
  offerImage_ends_with?: string | null
  offerImage_not_ends_with?: string | null
  position?: number | null
  position_not?: number | null
  position_in?: number[]
  position_not_in?: number[]
  position_lt?: number | null
  position_lte?: number | null
  position_gt?: number | null
  position_gte?: number | null
  startDate?: string | null
  startDate_not?: string | null
  startDate_in?: string[]
  startDate_not_in?: string[]
  startDate_lt?: string | null
  startDate_lte?: string | null
  startDate_gt?: string | null
  startDate_gte?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  type?: number | null
  type_not?: number | null
  type_in?: number[]
  type_not_in?: number[]
  type_lt?: number | null
  type_lte?: number | null
  type_gt?: number | null
  type_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OfferWhereInput[]
  OR?: OfferWhereInput[]
  NOT?: OfferWhereInput[]
}
export type OfferWhereInputInputObject =
  | Extract<keyof OfferWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'descriptionArabic', alias?: string  } 
  | { name: 'descriptionArabic_not', alias?: string  } 
  | { name: 'descriptionArabic_in', alias?: string  } 
  | { name: 'descriptionArabic_not_in', alias?: string  } 
  | { name: 'descriptionArabic_lt', alias?: string  } 
  | { name: 'descriptionArabic_lte', alias?: string  } 
  | { name: 'descriptionArabic_gt', alias?: string  } 
  | { name: 'descriptionArabic_gte', alias?: string  } 
  | { name: 'descriptionArabic_contains', alias?: string  } 
  | { name: 'descriptionArabic_not_contains', alias?: string  } 
  | { name: 'descriptionArabic_starts_with', alias?: string  } 
  | { name: 'descriptionArabic_not_starts_with', alias?: string  } 
  | { name: 'descriptionArabic_ends_with', alias?: string  } 
  | { name: 'descriptionArabic_not_ends_with', alias?: string  } 
  | { name: 'endDate', alias?: string  } 
  | { name: 'endDate_not', alias?: string  } 
  | { name: 'endDate_in', alias?: string  } 
  | { name: 'endDate_not_in', alias?: string  } 
  | { name: 'endDate_lt', alias?: string  } 
  | { name: 'endDate_lte', alias?: string  } 
  | { name: 'endDate_gt', alias?: string  } 
  | { name: 'endDate_gte', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  | { name: 'heading_not', alias?: string  } 
  | { name: 'heading_in', alias?: string  } 
  | { name: 'heading_not_in', alias?: string  } 
  | { name: 'heading_lt', alias?: string  } 
  | { name: 'heading_lte', alias?: string  } 
  | { name: 'heading_gt', alias?: string  } 
  | { name: 'heading_gte', alias?: string  } 
  | { name: 'heading_contains', alias?: string  } 
  | { name: 'heading_not_contains', alias?: string  } 
  | { name: 'heading_starts_with', alias?: string  } 
  | { name: 'heading_not_starts_with', alias?: string  } 
  | { name: 'heading_ends_with', alias?: string  } 
  | { name: 'heading_not_ends_with', alias?: string  } 
  | { name: 'headingArabic', alias?: string  } 
  | { name: 'headingArabic_not', alias?: string  } 
  | { name: 'headingArabic_in', alias?: string  } 
  | { name: 'headingArabic_not_in', alias?: string  } 
  | { name: 'headingArabic_lt', alias?: string  } 
  | { name: 'headingArabic_lte', alias?: string  } 
  | { name: 'headingArabic_gt', alias?: string  } 
  | { name: 'headingArabic_gte', alias?: string  } 
  | { name: 'headingArabic_contains', alias?: string  } 
  | { name: 'headingArabic_not_contains', alias?: string  } 
  | { name: 'headingArabic_starts_with', alias?: string  } 
  | { name: 'headingArabic_not_starts_with', alias?: string  } 
  | { name: 'headingArabic_ends_with', alias?: string  } 
  | { name: 'headingArabic_not_ends_with', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'hospitalId_not', alias?: string  } 
  | { name: 'hospitalId_in', alias?: string  } 
  | { name: 'hospitalId_not_in', alias?: string  } 
  | { name: 'hospitalId_lt', alias?: string  } 
  | { name: 'hospitalId_lte', alias?: string  } 
  | { name: 'hospitalId_gt', alias?: string  } 
  | { name: 'hospitalId_gte', alias?: string  } 
  | { name: 'offerImage', alias?: string  } 
  | { name: 'offerImage_not', alias?: string  } 
  | { name: 'offerImage_in', alias?: string  } 
  | { name: 'offerImage_not_in', alias?: string  } 
  | { name: 'offerImage_lt', alias?: string  } 
  | { name: 'offerImage_lte', alias?: string  } 
  | { name: 'offerImage_gt', alias?: string  } 
  | { name: 'offerImage_gte', alias?: string  } 
  | { name: 'offerImage_contains', alias?: string  } 
  | { name: 'offerImage_not_contains', alias?: string  } 
  | { name: 'offerImage_starts_with', alias?: string  } 
  | { name: 'offerImage_not_starts_with', alias?: string  } 
  | { name: 'offerImage_ends_with', alias?: string  } 
  | { name: 'offerImage_not_ends_with', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'position_not', alias?: string  } 
  | { name: 'position_in', alias?: string  } 
  | { name: 'position_not_in', alias?: string  } 
  | { name: 'position_lt', alias?: string  } 
  | { name: 'position_lte', alias?: string  } 
  | { name: 'position_gt', alias?: string  } 
  | { name: 'position_gte', alias?: string  } 
  | { name: 'startDate', alias?: string  } 
  | { name: 'startDate_not', alias?: string  } 
  | { name: 'startDate_in', alias?: string  } 
  | { name: 'startDate_not_in', alias?: string  } 
  | { name: 'startDate_lt', alias?: string  } 
  | { name: 'startDate_lte', alias?: string  } 
  | { name: 'startDate_gt', alias?: string  } 
  | { name: 'startDate_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineAppointmentWhereUniqueInput {
  id?: number | null
}
export type OnlineAppointmentWhereUniqueInputInputObject =
  | Extract<keyof OnlineAppointmentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OnlineAppointmentWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apointmentDate?: string | null
  apointmentDate_not?: string | null
  apointmentDate_in?: string[]
  apointmentDate_not_in?: string[]
  apointmentDate_lt?: string | null
  apointmentDate_lte?: string | null
  apointmentDate_gt?: string | null
  apointmentDate_gte?: string | null
  apointmentDate_contains?: string | null
  apointmentDate_not_contains?: string | null
  apointmentDate_starts_with?: string | null
  apointmentDate_not_starts_with?: string | null
  apointmentDate_ends_with?: string | null
  apointmentDate_not_ends_with?: string | null
  apointmentFulldate?: number | null
  apointmentFulldate_not?: number | null
  apointmentFulldate_in?: number[]
  apointmentFulldate_not_in?: number[]
  apointmentFulldate_lt?: number | null
  apointmentFulldate_lte?: number | null
  apointmentFulldate_gt?: number | null
  apointmentFulldate_gte?: number | null
  apointmentTime?: string | null
  apointmentTime_not?: string | null
  apointmentTime_in?: string[]
  apointmentTime_not_in?: string[]
  apointmentTime_lt?: string | null
  apointmentTime_lte?: string | null
  apointmentTime_gt?: string | null
  apointmentTime_gte?: string | null
  apointmentTime_contains?: string | null
  apointmentTime_not_contains?: string | null
  apointmentTime_starts_with?: string | null
  apointmentTime_not_starts_with?: string | null
  apointmentTime_ends_with?: string | null
  apointmentTime_not_ends_with?: string | null
  diseaseId?: number | null
  diseaseId_not?: number | null
  diseaseId_in?: number[]
  diseaseId_not_in?: number[]
  diseaseId_lt?: number | null
  diseaseId_lte?: number | null
  diseaseId_gt?: number | null
  diseaseId_gte?: number | null
  doctorArabic?: string | null
  doctorArabic_not?: string | null
  doctorArabic_in?: string[]
  doctorArabic_not_in?: string[]
  doctorArabic_lt?: string | null
  doctorArabic_lte?: string | null
  doctorArabic_gt?: string | null
  doctorArabic_gte?: string | null
  doctorArabic_contains?: string | null
  doctorArabic_not_contains?: string | null
  doctorArabic_starts_with?: string | null
  doctorArabic_not_starts_with?: string | null
  doctorArabic_ends_with?: string | null
  doctorArabic_not_ends_with?: string | null
  doctorId?: number | null
  doctorId_not?: number | null
  doctorId_in?: number[]
  doctorId_not_in?: number[]
  doctorId_lt?: number | null
  doctorId_lte?: number | null
  doctorId_gt?: number | null
  doctorId_gte?: number | null
  doctorName?: string | null
  doctorName_not?: string | null
  doctorName_in?: string[]
  doctorName_not_in?: string[]
  doctorName_lt?: string | null
  doctorName_lte?: string | null
  doctorName_gt?: string | null
  doctorName_gte?: string | null
  doctorName_contains?: string | null
  doctorName_not_contains?: string | null
  doctorName_starts_with?: string | null
  doctorName_not_starts_with?: string | null
  doctorName_ends_with?: string | null
  doctorName_not_ends_with?: string | null
  dtId?: number | null
  dtId_not?: number | null
  dtId_in?: number[]
  dtId_not_in?: number[]
  dtId_lt?: number | null
  dtId_lte?: number | null
  dtId_gt?: number | null
  dtId_gte?: number | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  optId?: number | null
  optId_not?: number | null
  optId_in?: number[]
  optId_not_in?: number[]
  optId_lt?: number | null
  optId_lte?: number | null
  optId_gt?: number | null
  optId_gte?: number | null
  patientId?: number | null
  patientId_not?: number | null
  patientId_in?: number[]
  patientId_not_in?: number[]
  patientId_lt?: number | null
  patientId_lte?: number | null
  patientId_gt?: number | null
  patientId_gte?: number | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  phoneCode?: string | null
  phoneCode_not?: string | null
  phoneCode_in?: string[]
  phoneCode_not_in?: string[]
  phoneCode_lt?: string | null
  phoneCode_lte?: string | null
  phoneCode_gt?: string | null
  phoneCode_gte?: string | null
  phoneCode_contains?: string | null
  phoneCode_not_contains?: string | null
  phoneCode_starts_with?: string | null
  phoneCode_not_starts_with?: string | null
  phoneCode_ends_with?: string | null
  phoneCode_not_ends_with?: string | null
  scheduleTimeId?: number | null
  scheduleTimeId_not?: number | null
  scheduleTimeId_in?: number[]
  scheduleTimeId_not_in?: number[]
  scheduleTimeId_lt?: number | null
  scheduleTimeId_lte?: number | null
  scheduleTimeId_gt?: number | null
  scheduleTimeId_gte?: number | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OnlineAppointmentWhereInput[]
  OR?: OnlineAppointmentWhereInput[]
  NOT?: OnlineAppointmentWhereInput[]
}
export type OnlineAppointmentWhereInputInputObject =
  | Extract<keyof OnlineAppointmentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentDate_not', alias?: string  } 
  | { name: 'apointmentDate_in', alias?: string  } 
  | { name: 'apointmentDate_not_in', alias?: string  } 
  | { name: 'apointmentDate_lt', alias?: string  } 
  | { name: 'apointmentDate_lte', alias?: string  } 
  | { name: 'apointmentDate_gt', alias?: string  } 
  | { name: 'apointmentDate_gte', alias?: string  } 
  | { name: 'apointmentDate_contains', alias?: string  } 
  | { name: 'apointmentDate_not_contains', alias?: string  } 
  | { name: 'apointmentDate_starts_with', alias?: string  } 
  | { name: 'apointmentDate_not_starts_with', alias?: string  } 
  | { name: 'apointmentDate_ends_with', alias?: string  } 
  | { name: 'apointmentDate_not_ends_with', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentFulldate_not', alias?: string  } 
  | { name: 'apointmentFulldate_in', alias?: string  } 
  | { name: 'apointmentFulldate_not_in', alias?: string  } 
  | { name: 'apointmentFulldate_lt', alias?: string  } 
  | { name: 'apointmentFulldate_lte', alias?: string  } 
  | { name: 'apointmentFulldate_gt', alias?: string  } 
  | { name: 'apointmentFulldate_gte', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'apointmentTime_not', alias?: string  } 
  | { name: 'apointmentTime_in', alias?: string  } 
  | { name: 'apointmentTime_not_in', alias?: string  } 
  | { name: 'apointmentTime_lt', alias?: string  } 
  | { name: 'apointmentTime_lte', alias?: string  } 
  | { name: 'apointmentTime_gt', alias?: string  } 
  | { name: 'apointmentTime_gte', alias?: string  } 
  | { name: 'apointmentTime_contains', alias?: string  } 
  | { name: 'apointmentTime_not_contains', alias?: string  } 
  | { name: 'apointmentTime_starts_with', alias?: string  } 
  | { name: 'apointmentTime_not_starts_with', alias?: string  } 
  | { name: 'apointmentTime_ends_with', alias?: string  } 
  | { name: 'apointmentTime_not_ends_with', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'diseaseId_not', alias?: string  } 
  | { name: 'diseaseId_in', alias?: string  } 
  | { name: 'diseaseId_not_in', alias?: string  } 
  | { name: 'diseaseId_lt', alias?: string  } 
  | { name: 'diseaseId_lte', alias?: string  } 
  | { name: 'diseaseId_gt', alias?: string  } 
  | { name: 'diseaseId_gte', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorArabic_not', alias?: string  } 
  | { name: 'doctorArabic_in', alias?: string  } 
  | { name: 'doctorArabic_not_in', alias?: string  } 
  | { name: 'doctorArabic_lt', alias?: string  } 
  | { name: 'doctorArabic_lte', alias?: string  } 
  | { name: 'doctorArabic_gt', alias?: string  } 
  | { name: 'doctorArabic_gte', alias?: string  } 
  | { name: 'doctorArabic_contains', alias?: string  } 
  | { name: 'doctorArabic_not_contains', alias?: string  } 
  | { name: 'doctorArabic_starts_with', alias?: string  } 
  | { name: 'doctorArabic_not_starts_with', alias?: string  } 
  | { name: 'doctorArabic_ends_with', alias?: string  } 
  | { name: 'doctorArabic_not_ends_with', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorId_not', alias?: string  } 
  | { name: 'doctorId_in', alias?: string  } 
  | { name: 'doctorId_not_in', alias?: string  } 
  | { name: 'doctorId_lt', alias?: string  } 
  | { name: 'doctorId_lte', alias?: string  } 
  | { name: 'doctorId_gt', alias?: string  } 
  | { name: 'doctorId_gte', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'doctorName_not', alias?: string  } 
  | { name: 'doctorName_in', alias?: string  } 
  | { name: 'doctorName_not_in', alias?: string  } 
  | { name: 'doctorName_lt', alias?: string  } 
  | { name: 'doctorName_lte', alias?: string  } 
  | { name: 'doctorName_gt', alias?: string  } 
  | { name: 'doctorName_gte', alias?: string  } 
  | { name: 'doctorName_contains', alias?: string  } 
  | { name: 'doctorName_not_contains', alias?: string  } 
  | { name: 'doctorName_starts_with', alias?: string  } 
  | { name: 'doctorName_not_starts_with', alias?: string  } 
  | { name: 'doctorName_ends_with', alias?: string  } 
  | { name: 'doctorName_not_ends_with', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'dtId_not', alias?: string  } 
  | { name: 'dtId_in', alias?: string  } 
  | { name: 'dtId_not_in', alias?: string  } 
  | { name: 'dtId_lt', alias?: string  } 
  | { name: 'dtId_lte', alias?: string  } 
  | { name: 'dtId_gt', alias?: string  } 
  | { name: 'dtId_gte', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'optId_not', alias?: string  } 
  | { name: 'optId_in', alias?: string  } 
  | { name: 'optId_not_in', alias?: string  } 
  | { name: 'optId_lt', alias?: string  } 
  | { name: 'optId_lte', alias?: string  } 
  | { name: 'optId_gt', alias?: string  } 
  | { name: 'optId_gte', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'patientId_not', alias?: string  } 
  | { name: 'patientId_in', alias?: string  } 
  | { name: 'patientId_not_in', alias?: string  } 
  | { name: 'patientId_lt', alias?: string  } 
  | { name: 'patientId_lte', alias?: string  } 
  | { name: 'patientId_gt', alias?: string  } 
  | { name: 'patientId_gte', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'phoneCode_not', alias?: string  } 
  | { name: 'phoneCode_in', alias?: string  } 
  | { name: 'phoneCode_not_in', alias?: string  } 
  | { name: 'phoneCode_lt', alias?: string  } 
  | { name: 'phoneCode_lte', alias?: string  } 
  | { name: 'phoneCode_gt', alias?: string  } 
  | { name: 'phoneCode_gte', alias?: string  } 
  | { name: 'phoneCode_contains', alias?: string  } 
  | { name: 'phoneCode_not_contains', alias?: string  } 
  | { name: 'phoneCode_starts_with', alias?: string  } 
  | { name: 'phoneCode_not_starts_with', alias?: string  } 
  | { name: 'phoneCode_ends_with', alias?: string  } 
  | { name: 'phoneCode_not_ends_with', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'scheduleTimeId_not', alias?: string  } 
  | { name: 'scheduleTimeId_in', alias?: string  } 
  | { name: 'scheduleTimeId_not_in', alias?: string  } 
  | { name: 'scheduleTimeId_lt', alias?: string  } 
  | { name: 'scheduleTimeId_lte', alias?: string  } 
  | { name: 'scheduleTimeId_gt', alias?: string  } 
  | { name: 'scheduleTimeId_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineDoctorWhereUniqueInput {
  id?: number | null
}
export type OnlineDoctorWhereUniqueInputInputObject =
  | Extract<keyof OnlineDoctorWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OnlineDoctorWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  designation?: string | null
  designation_not?: string | null
  designation_in?: string[]
  designation_not_in?: string[]
  designation_lt?: string | null
  designation_lte?: string | null
  designation_gt?: string | null
  designation_gte?: string | null
  designation_contains?: string | null
  designation_not_contains?: string | null
  designation_starts_with?: string | null
  designation_not_starts_with?: string | null
  designation_ends_with?: string | null
  designation_not_ends_with?: string | null
  doctorCv?: string | null
  doctorCv_not?: string | null
  doctorCv_in?: string[]
  doctorCv_not_in?: string[]
  doctorCv_lt?: string | null
  doctorCv_lte?: string | null
  doctorCv_gt?: string | null
  doctorCv_gte?: string | null
  doctorCv_contains?: string | null
  doctorCv_not_contains?: string | null
  doctorCv_starts_with?: string | null
  doctorCv_not_starts_with?: string | null
  doctorCv_ends_with?: string | null
  doctorCv_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  lastSeen?: string | null
  lastSeen_not?: string | null
  lastSeen_in?: string[]
  lastSeen_not_in?: string[]
  lastSeen_lt?: string | null
  lastSeen_lte?: string | null
  lastSeen_gt?: string | null
  lastSeen_gte?: string | null
  mohcard?: string | null
  mohcard_not?: string | null
  mohcard_in?: string[]
  mohcard_not_in?: string[]
  mohcard_lt?: string | null
  mohcard_lte?: string | null
  mohcard_gt?: string | null
  mohcard_gte?: string | null
  mohcard_contains?: string | null
  mohcard_not_contains?: string | null
  mohcard_starts_with?: string | null
  mohcard_not_starts_with?: string | null
  mohcard_ends_with?: string | null
  mohcard_not_ends_with?: string | null
  mohId?: string | null
  mohId_not?: string | null
  mohId_in?: string[]
  mohId_not_in?: string[]
  mohId_lt?: string | null
  mohId_lte?: string | null
  mohId_gt?: string | null
  mohId_gte?: string | null
  mohId_contains?: string | null
  mohId_not_contains?: string | null
  mohId_starts_with?: string | null
  mohId_not_starts_with?: string | null
  mohId_ends_with?: string | null
  mohId_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  nameArabic?: string | null
  nameArabic_not?: string | null
  nameArabic_in?: string[]
  nameArabic_not_in?: string[]
  nameArabic_lt?: string | null
  nameArabic_lte?: string | null
  nameArabic_gt?: string | null
  nameArabic_gte?: string | null
  nameArabic_contains?: string | null
  nameArabic_not_contains?: string | null
  nameArabic_starts_with?: string | null
  nameArabic_not_starts_with?: string | null
  nameArabic_ends_with?: string | null
  nameArabic_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  specialityId?: number | null
  specialityId_not?: number | null
  specialityId_in?: number[]
  specialityId_not_in?: number[]
  specialityId_lt?: number | null
  specialityId_lte?: number | null
  specialityId_gt?: number | null
  specialityId_gte?: number | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  AND?: OnlineDoctorWhereInput[]
  OR?: OnlineDoctorWhereInput[]
  NOT?: OnlineDoctorWhereInput[]
}
export type OnlineDoctorWhereInputInputObject =
  | Extract<keyof OnlineDoctorWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'designation_not', alias?: string  } 
  | { name: 'designation_in', alias?: string  } 
  | { name: 'designation_not_in', alias?: string  } 
  | { name: 'designation_lt', alias?: string  } 
  | { name: 'designation_lte', alias?: string  } 
  | { name: 'designation_gt', alias?: string  } 
  | { name: 'designation_gte', alias?: string  } 
  | { name: 'designation_contains', alias?: string  } 
  | { name: 'designation_not_contains', alias?: string  } 
  | { name: 'designation_starts_with', alias?: string  } 
  | { name: 'designation_not_starts_with', alias?: string  } 
  | { name: 'designation_ends_with', alias?: string  } 
  | { name: 'designation_not_ends_with', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorCv_not', alias?: string  } 
  | { name: 'doctorCv_in', alias?: string  } 
  | { name: 'doctorCv_not_in', alias?: string  } 
  | { name: 'doctorCv_lt', alias?: string  } 
  | { name: 'doctorCv_lte', alias?: string  } 
  | { name: 'doctorCv_gt', alias?: string  } 
  | { name: 'doctorCv_gte', alias?: string  } 
  | { name: 'doctorCv_contains', alias?: string  } 
  | { name: 'doctorCv_not_contains', alias?: string  } 
  | { name: 'doctorCv_starts_with', alias?: string  } 
  | { name: 'doctorCv_not_starts_with', alias?: string  } 
  | { name: 'doctorCv_ends_with', alias?: string  } 
  | { name: 'doctorCv_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'lastSeen_not', alias?: string  } 
  | { name: 'lastSeen_in', alias?: string  } 
  | { name: 'lastSeen_not_in', alias?: string  } 
  | { name: 'lastSeen_lt', alias?: string  } 
  | { name: 'lastSeen_lte', alias?: string  } 
  | { name: 'lastSeen_gt', alias?: string  } 
  | { name: 'lastSeen_gte', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohcard_not', alias?: string  } 
  | { name: 'mohcard_in', alias?: string  } 
  | { name: 'mohcard_not_in', alias?: string  } 
  | { name: 'mohcard_lt', alias?: string  } 
  | { name: 'mohcard_lte', alias?: string  } 
  | { name: 'mohcard_gt', alias?: string  } 
  | { name: 'mohcard_gte', alias?: string  } 
  | { name: 'mohcard_contains', alias?: string  } 
  | { name: 'mohcard_not_contains', alias?: string  } 
  | { name: 'mohcard_starts_with', alias?: string  } 
  | { name: 'mohcard_not_starts_with', alias?: string  } 
  | { name: 'mohcard_ends_with', alias?: string  } 
  | { name: 'mohcard_not_ends_with', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'mohId_not', alias?: string  } 
  | { name: 'mohId_in', alias?: string  } 
  | { name: 'mohId_not_in', alias?: string  } 
  | { name: 'mohId_lt', alias?: string  } 
  | { name: 'mohId_lte', alias?: string  } 
  | { name: 'mohId_gt', alias?: string  } 
  | { name: 'mohId_gte', alias?: string  } 
  | { name: 'mohId_contains', alias?: string  } 
  | { name: 'mohId_not_contains', alias?: string  } 
  | { name: 'mohId_starts_with', alias?: string  } 
  | { name: 'mohId_not_starts_with', alias?: string  } 
  | { name: 'mohId_ends_with', alias?: string  } 
  | { name: 'mohId_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'nameArabic_not', alias?: string  } 
  | { name: 'nameArabic_in', alias?: string  } 
  | { name: 'nameArabic_not_in', alias?: string  } 
  | { name: 'nameArabic_lt', alias?: string  } 
  | { name: 'nameArabic_lte', alias?: string  } 
  | { name: 'nameArabic_gt', alias?: string  } 
  | { name: 'nameArabic_gte', alias?: string  } 
  | { name: 'nameArabic_contains', alias?: string  } 
  | { name: 'nameArabic_not_contains', alias?: string  } 
  | { name: 'nameArabic_starts_with', alias?: string  } 
  | { name: 'nameArabic_not_starts_with', alias?: string  } 
  | { name: 'nameArabic_ends_with', alias?: string  } 
  | { name: 'nameArabic_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialityId_not', alias?: string  } 
  | { name: 'specialityId_in', alias?: string  } 
  | { name: 'specialityId_not_in', alias?: string  } 
  | { name: 'specialityId_lt', alias?: string  } 
  | { name: 'specialityId_lte', alias?: string  } 
  | { name: 'specialityId_gt', alias?: string  } 
  | { name: 'specialityId_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineRatingWhereUniqueInput {
  id?: number | null
}
export type OnlineRatingWhereUniqueInputInputObject =
  | Extract<keyof OnlineRatingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OnlineRatingWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  doctorsId?: number | null
  doctorsId_not?: number | null
  doctorsId_in?: number[]
  doctorsId_not_in?: number[]
  doctorsId_lt?: number | null
  doctorsId_lte?: number | null
  doctorsId_gt?: number | null
  doctorsId_gte?: number | null
  rating?: string | null
  rating_not?: string | null
  rating_in?: string[]
  rating_not_in?: string[]
  rating_lt?: string | null
  rating_lte?: string | null
  rating_gt?: string | null
  rating_gte?: string | null
  rating_contains?: string | null
  rating_not_contains?: string | null
  rating_starts_with?: string | null
  rating_not_starts_with?: string | null
  rating_ends_with?: string | null
  rating_not_ends_with?: string | null
  systemIp?: string | null
  systemIp_not?: string | null
  systemIp_in?: string[]
  systemIp_not_in?: string[]
  systemIp_lt?: string | null
  systemIp_lte?: string | null
  systemIp_gt?: string | null
  systemIp_gte?: string | null
  systemIp_contains?: string | null
  systemIp_not_contains?: string | null
  systemIp_starts_with?: string | null
  systemIp_not_starts_with?: string | null
  systemIp_ends_with?: string | null
  systemIp_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OnlineRatingWhereInput[]
  OR?: OnlineRatingWhereInput[]
  NOT?: OnlineRatingWhereInput[]
}
export type OnlineRatingWhereInputInputObject =
  | Extract<keyof OnlineRatingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'doctorsId', alias?: string  } 
  | { name: 'doctorsId_not', alias?: string  } 
  | { name: 'doctorsId_in', alias?: string  } 
  | { name: 'doctorsId_not_in', alias?: string  } 
  | { name: 'doctorsId_lt', alias?: string  } 
  | { name: 'doctorsId_lte', alias?: string  } 
  | { name: 'doctorsId_gt', alias?: string  } 
  | { name: 'doctorsId_gte', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'rating_not', alias?: string  } 
  | { name: 'rating_in', alias?: string  } 
  | { name: 'rating_not_in', alias?: string  } 
  | { name: 'rating_lt', alias?: string  } 
  | { name: 'rating_lte', alias?: string  } 
  | { name: 'rating_gt', alias?: string  } 
  | { name: 'rating_gte', alias?: string  } 
  | { name: 'rating_contains', alias?: string  } 
  | { name: 'rating_not_contains', alias?: string  } 
  | { name: 'rating_starts_with', alias?: string  } 
  | { name: 'rating_not_starts_with', alias?: string  } 
  | { name: 'rating_ends_with', alias?: string  } 
  | { name: 'rating_not_ends_with', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  | { name: 'systemIp_not', alias?: string  } 
  | { name: 'systemIp_in', alias?: string  } 
  | { name: 'systemIp_not_in', alias?: string  } 
  | { name: 'systemIp_lt', alias?: string  } 
  | { name: 'systemIp_lte', alias?: string  } 
  | { name: 'systemIp_gt', alias?: string  } 
  | { name: 'systemIp_gte', alias?: string  } 
  | { name: 'systemIp_contains', alias?: string  } 
  | { name: 'systemIp_not_contains', alias?: string  } 
  | { name: 'systemIp_starts_with', alias?: string  } 
  | { name: 'systemIp_not_starts_with', alias?: string  } 
  | { name: 'systemIp_ends_with', alias?: string  } 
  | { name: 'systemIp_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptTimeWhereUniqueInput {
  id?: number | null
}
export type OptTimeWhereUniqueInputInputObject =
  | Extract<keyof OptTimeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PasswordResetWhereUniqueInput {
  id?: number | null
}
export type PasswordResetWhereUniqueInputInputObject =
  | Extract<keyof PasswordResetWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PasswordResetWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  token?: string | null
  token_not?: string | null
  token_in?: string[]
  token_not_in?: string[]
  token_lt?: string | null
  token_lte?: string | null
  token_gt?: string | null
  token_gte?: string | null
  token_contains?: string | null
  token_not_contains?: string | null
  token_starts_with?: string | null
  token_not_starts_with?: string | null
  token_ends_with?: string | null
  token_not_ends_with?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: PasswordResetWhereInput[]
  OR?: PasswordResetWhereInput[]
  NOT?: PasswordResetWhereInput[]
}
export type PasswordResetWhereInputInputObject =
  | Extract<keyof PasswordResetWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'token_not', alias?: string  } 
  | { name: 'token_in', alias?: string  } 
  | { name: 'token_not_in', alias?: string  } 
  | { name: 'token_lt', alias?: string  } 
  | { name: 'token_lte', alias?: string  } 
  | { name: 'token_gt', alias?: string  } 
  | { name: 'token_gte', alias?: string  } 
  | { name: 'token_contains', alias?: string  } 
  | { name: 'token_not_contains', alias?: string  } 
  | { name: 'token_starts_with', alias?: string  } 
  | { name: 'token_not_starts_with', alias?: string  } 
  | { name: 'token_ends_with', alias?: string  } 
  | { name: 'token_not_ends_with', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PatientWhereUniqueInput {
  id?: number | null
}
export type PatientWhereUniqueInputInputObject =
  | Extract<keyof PatientWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SearchDesignWhereUniqueInput {
  id?: number | null
}
export type SearchDesignWhereUniqueInputInputObject =
  | Extract<keyof SearchDesignWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SearchDesignWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  addressColor?: string | null
  addressColor_not?: string | null
  addressColor_in?: string[]
  addressColor_not_in?: string[]
  addressColor_lt?: string | null
  addressColor_lte?: string | null
  addressColor_gt?: string | null
  addressColor_gte?: string | null
  addressColor_contains?: string | null
  addressColor_not_contains?: string | null
  addressColor_starts_with?: string | null
  addressColor_not_starts_with?: string | null
  addressColor_ends_with?: string | null
  addressColor_not_ends_with?: string | null
  addressFamily?: string | null
  addressFamily_not?: string | null
  addressFamily_in?: string[]
  addressFamily_not_in?: string[]
  addressFamily_lt?: string | null
  addressFamily_lte?: string | null
  addressFamily_gt?: string | null
  addressFamily_gte?: string | null
  addressFamily_contains?: string | null
  addressFamily_not_contains?: string | null
  addressFamily_starts_with?: string | null
  addressFamily_not_starts_with?: string | null
  addressFamily_ends_with?: string | null
  addressFamily_not_ends_with?: string | null
  addressStyle?: string | null
  addressStyle_not?: string | null
  addressStyle_in?: string[]
  addressStyle_not_in?: string[]
  addressStyle_lt?: string | null
  addressStyle_lte?: string | null
  addressStyle_gt?: string | null
  addressStyle_gte?: string | null
  addressStyle_contains?: string | null
  addressStyle_not_contains?: string | null
  addressStyle_starts_with?: string | null
  addressStyle_not_starts_with?: string | null
  addressStyle_ends_with?: string | null
  addressStyle_not_ends_with?: string | null
  designationColor?: string | null
  designationColor_not?: string | null
  designationColor_in?: string[]
  designationColor_not_in?: string[]
  designationColor_lt?: string | null
  designationColor_lte?: string | null
  designationColor_gt?: string | null
  designationColor_gte?: string | null
  designationColor_contains?: string | null
  designationColor_not_contains?: string | null
  designationColor_starts_with?: string | null
  designationColor_not_starts_with?: string | null
  designationColor_ends_with?: string | null
  designationColor_not_ends_with?: string | null
  designationFamily?: string | null
  designationFamily_not?: string | null
  designationFamily_in?: string[]
  designationFamily_not_in?: string[]
  designationFamily_lt?: string | null
  designationFamily_lte?: string | null
  designationFamily_gt?: string | null
  designationFamily_gte?: string | null
  designationFamily_contains?: string | null
  designationFamily_not_contains?: string | null
  designationFamily_starts_with?: string | null
  designationFamily_not_starts_with?: string | null
  designationFamily_ends_with?: string | null
  designationFamily_not_ends_with?: string | null
  designationStyle?: string | null
  designationStyle_not?: string | null
  designationStyle_in?: string[]
  designationStyle_not_in?: string[]
  designationStyle_lt?: string | null
  designationStyle_lte?: string | null
  designationStyle_gt?: string | null
  designationStyle_gte?: string | null
  designationStyle_contains?: string | null
  designationStyle_not_contains?: string | null
  designationStyle_starts_with?: string | null
  designationStyle_not_starts_with?: string | null
  designationStyle_ends_with?: string | null
  designationStyle_not_ends_with?: string | null
  doctorColor?: string | null
  doctorColor_not?: string | null
  doctorColor_in?: string[]
  doctorColor_not_in?: string[]
  doctorColor_lt?: string | null
  doctorColor_lte?: string | null
  doctorColor_gt?: string | null
  doctorColor_gte?: string | null
  doctorColor_contains?: string | null
  doctorColor_not_contains?: string | null
  doctorColor_starts_with?: string | null
  doctorColor_not_starts_with?: string | null
  doctorColor_ends_with?: string | null
  doctorColor_not_ends_with?: string | null
  doctorFamily?: string | null
  doctorFamily_not?: string | null
  doctorFamily_in?: string[]
  doctorFamily_not_in?: string[]
  doctorFamily_lt?: string | null
  doctorFamily_lte?: string | null
  doctorFamily_gt?: string | null
  doctorFamily_gte?: string | null
  doctorFamily_contains?: string | null
  doctorFamily_not_contains?: string | null
  doctorFamily_starts_with?: string | null
  doctorFamily_not_starts_with?: string | null
  doctorFamily_ends_with?: string | null
  doctorFamily_not_ends_with?: string | null
  doctorStyle?: string | null
  doctorStyle_not?: string | null
  doctorStyle_in?: string[]
  doctorStyle_not_in?: string[]
  doctorStyle_lt?: string | null
  doctorStyle_lte?: string | null
  doctorStyle_gt?: string | null
  doctorStyle_gte?: string | null
  doctorStyle_contains?: string | null
  doctorStyle_not_contains?: string | null
  doctorStyle_starts_with?: string | null
  doctorStyle_not_starts_with?: string | null
  doctorStyle_ends_with?: string | null
  doctorStyle_not_ends_with?: string | null
  emailColor?: string | null
  emailColor_not?: string | null
  emailColor_in?: string[]
  emailColor_not_in?: string[]
  emailColor_lt?: string | null
  emailColor_lte?: string | null
  emailColor_gt?: string | null
  emailColor_gte?: string | null
  emailColor_contains?: string | null
  emailColor_not_contains?: string | null
  emailColor_starts_with?: string | null
  emailColor_not_starts_with?: string | null
  emailColor_ends_with?: string | null
  emailColor_not_ends_with?: string | null
  emailFamily?: string | null
  emailFamily_not?: string | null
  emailFamily_in?: string[]
  emailFamily_not_in?: string[]
  emailFamily_lt?: string | null
  emailFamily_lte?: string | null
  emailFamily_gt?: string | null
  emailFamily_gte?: string | null
  emailFamily_contains?: string | null
  emailFamily_not_contains?: string | null
  emailFamily_starts_with?: string | null
  emailFamily_not_starts_with?: string | null
  emailFamily_ends_with?: string | null
  emailFamily_not_ends_with?: string | null
  emailStyle?: string | null
  emailStyle_not?: string | null
  emailStyle_in?: string[]
  emailStyle_not_in?: string[]
  emailStyle_lt?: string | null
  emailStyle_lte?: string | null
  emailStyle_gt?: string | null
  emailStyle_gte?: string | null
  emailStyle_contains?: string | null
  emailStyle_not_contains?: string | null
  emailStyle_starts_with?: string | null
  emailStyle_not_starts_with?: string | null
  emailStyle_ends_with?: string | null
  emailStyle_not_ends_with?: string | null
  nameColor?: string | null
  nameColor_not?: string | null
  nameColor_in?: string[]
  nameColor_not_in?: string[]
  nameColor_lt?: string | null
  nameColor_lte?: string | null
  nameColor_gt?: string | null
  nameColor_gte?: string | null
  nameColor_contains?: string | null
  nameColor_not_contains?: string | null
  nameColor_starts_with?: string | null
  nameColor_not_starts_with?: string | null
  nameColor_ends_with?: string | null
  nameColor_not_ends_with?: string | null
  nameFamily?: string | null
  nameFamily_not?: string | null
  nameFamily_in?: string[]
  nameFamily_not_in?: string[]
  nameFamily_lt?: string | null
  nameFamily_lte?: string | null
  nameFamily_gt?: string | null
  nameFamily_gte?: string | null
  nameFamily_contains?: string | null
  nameFamily_not_contains?: string | null
  nameFamily_starts_with?: string | null
  nameFamily_not_starts_with?: string | null
  nameFamily_ends_with?: string | null
  nameFamily_not_ends_with?: string | null
  nameStyle?: string | null
  nameStyle_not?: string | null
  nameStyle_in?: string[]
  nameStyle_not_in?: string[]
  nameStyle_lt?: string | null
  nameStyle_lte?: string | null
  nameStyle_gt?: string | null
  nameStyle_gte?: string | null
  nameStyle_contains?: string | null
  nameStyle_not_contains?: string | null
  nameStyle_starts_with?: string | null
  nameStyle_not_starts_with?: string | null
  nameStyle_ends_with?: string | null
  nameStyle_not_ends_with?: string | null
  phoneColor?: string | null
  phoneColor_not?: string | null
  phoneColor_in?: string[]
  phoneColor_not_in?: string[]
  phoneColor_lt?: string | null
  phoneColor_lte?: string | null
  phoneColor_gt?: string | null
  phoneColor_gte?: string | null
  phoneColor_contains?: string | null
  phoneColor_not_contains?: string | null
  phoneColor_starts_with?: string | null
  phoneColor_not_starts_with?: string | null
  phoneColor_ends_with?: string | null
  phoneColor_not_ends_with?: string | null
  phoneFamily?: string | null
  phoneFamily_not?: string | null
  phoneFamily_in?: string[]
  phoneFamily_not_in?: string[]
  phoneFamily_lt?: string | null
  phoneFamily_lte?: string | null
  phoneFamily_gt?: string | null
  phoneFamily_gte?: string | null
  phoneFamily_contains?: string | null
  phoneFamily_not_contains?: string | null
  phoneFamily_starts_with?: string | null
  phoneFamily_not_starts_with?: string | null
  phoneFamily_ends_with?: string | null
  phoneFamily_not_ends_with?: string | null
  phoneStyle?: string | null
  phoneStyle_not?: string | null
  phoneStyle_in?: string[]
  phoneStyle_not_in?: string[]
  phoneStyle_lt?: string | null
  phoneStyle_lte?: string | null
  phoneStyle_gt?: string | null
  phoneStyle_gte?: string | null
  phoneStyle_contains?: string | null
  phoneStyle_not_contains?: string | null
  phoneStyle_starts_with?: string | null
  phoneStyle_not_starts_with?: string | null
  phoneStyle_ends_with?: string | null
  phoneStyle_not_ends_with?: string | null
  ratingColor?: string | null
  ratingColor_not?: string | null
  ratingColor_in?: string[]
  ratingColor_not_in?: string[]
  ratingColor_lt?: string | null
  ratingColor_lte?: string | null
  ratingColor_gt?: string | null
  ratingColor_gte?: string | null
  ratingColor_contains?: string | null
  ratingColor_not_contains?: string | null
  ratingColor_starts_with?: string | null
  ratingColor_not_starts_with?: string | null
  ratingColor_ends_with?: string | null
  ratingColor_not_ends_with?: string | null
  ratingFamily?: string | null
  ratingFamily_not?: string | null
  ratingFamily_in?: string[]
  ratingFamily_not_in?: string[]
  ratingFamily_lt?: string | null
  ratingFamily_lte?: string | null
  ratingFamily_gt?: string | null
  ratingFamily_gte?: string | null
  ratingFamily_contains?: string | null
  ratingFamily_not_contains?: string | null
  ratingFamily_starts_with?: string | null
  ratingFamily_not_starts_with?: string | null
  ratingFamily_ends_with?: string | null
  ratingFamily_not_ends_with?: string | null
  ratingStyle?: string | null
  ratingStyle_not?: string | null
  ratingStyle_in?: string[]
  ratingStyle_not_in?: string[]
  ratingStyle_lt?: string | null
  ratingStyle_lte?: string | null
  ratingStyle_gt?: string | null
  ratingStyle_gte?: string | null
  ratingStyle_contains?: string | null
  ratingStyle_not_contains?: string | null
  ratingStyle_starts_with?: string | null
  ratingStyle_not_starts_with?: string | null
  ratingStyle_ends_with?: string | null
  ratingStyle_not_ends_with?: string | null
  specialityColor?: string | null
  specialityColor_not?: string | null
  specialityColor_in?: string[]
  specialityColor_not_in?: string[]
  specialityColor_lt?: string | null
  specialityColor_lte?: string | null
  specialityColor_gt?: string | null
  specialityColor_gte?: string | null
  specialityColor_contains?: string | null
  specialityColor_not_contains?: string | null
  specialityColor_starts_with?: string | null
  specialityColor_not_starts_with?: string | null
  specialityColor_ends_with?: string | null
  specialityColor_not_ends_with?: string | null
  specialityFamily?: string | null
  specialityFamily_not?: string | null
  specialityFamily_in?: string[]
  specialityFamily_not_in?: string[]
  specialityFamily_lt?: string | null
  specialityFamily_lte?: string | null
  specialityFamily_gt?: string | null
  specialityFamily_gte?: string | null
  specialityFamily_contains?: string | null
  specialityFamily_not_contains?: string | null
  specialityFamily_starts_with?: string | null
  specialityFamily_not_starts_with?: string | null
  specialityFamily_ends_with?: string | null
  specialityFamily_not_ends_with?: string | null
  specialityStyle?: string | null
  specialityStyle_not?: string | null
  specialityStyle_in?: string[]
  specialityStyle_not_in?: string[]
  specialityStyle_lt?: string | null
  specialityStyle_lte?: string | null
  specialityStyle_gt?: string | null
  specialityStyle_gte?: string | null
  specialityStyle_contains?: string | null
  specialityStyle_not_contains?: string | null
  specialityStyle_starts_with?: string | null
  specialityStyle_not_starts_with?: string | null
  specialityStyle_ends_with?: string | null
  specialityStyle_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: SearchDesignWhereInput[]
  OR?: SearchDesignWhereInput[]
  NOT?: SearchDesignWhereInput[]
}
export type SearchDesignWhereInputInputObject =
  | Extract<keyof SearchDesignWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'addressColor', alias?: string  } 
  | { name: 'addressColor_not', alias?: string  } 
  | { name: 'addressColor_in', alias?: string  } 
  | { name: 'addressColor_not_in', alias?: string  } 
  | { name: 'addressColor_lt', alias?: string  } 
  | { name: 'addressColor_lte', alias?: string  } 
  | { name: 'addressColor_gt', alias?: string  } 
  | { name: 'addressColor_gte', alias?: string  } 
  | { name: 'addressColor_contains', alias?: string  } 
  | { name: 'addressColor_not_contains', alias?: string  } 
  | { name: 'addressColor_starts_with', alias?: string  } 
  | { name: 'addressColor_not_starts_with', alias?: string  } 
  | { name: 'addressColor_ends_with', alias?: string  } 
  | { name: 'addressColor_not_ends_with', alias?: string  } 
  | { name: 'addressFamily', alias?: string  } 
  | { name: 'addressFamily_not', alias?: string  } 
  | { name: 'addressFamily_in', alias?: string  } 
  | { name: 'addressFamily_not_in', alias?: string  } 
  | { name: 'addressFamily_lt', alias?: string  } 
  | { name: 'addressFamily_lte', alias?: string  } 
  | { name: 'addressFamily_gt', alias?: string  } 
  | { name: 'addressFamily_gte', alias?: string  } 
  | { name: 'addressFamily_contains', alias?: string  } 
  | { name: 'addressFamily_not_contains', alias?: string  } 
  | { name: 'addressFamily_starts_with', alias?: string  } 
  | { name: 'addressFamily_not_starts_with', alias?: string  } 
  | { name: 'addressFamily_ends_with', alias?: string  } 
  | { name: 'addressFamily_not_ends_with', alias?: string  } 
  | { name: 'addressStyle', alias?: string  } 
  | { name: 'addressStyle_not', alias?: string  } 
  | { name: 'addressStyle_in', alias?: string  } 
  | { name: 'addressStyle_not_in', alias?: string  } 
  | { name: 'addressStyle_lt', alias?: string  } 
  | { name: 'addressStyle_lte', alias?: string  } 
  | { name: 'addressStyle_gt', alias?: string  } 
  | { name: 'addressStyle_gte', alias?: string  } 
  | { name: 'addressStyle_contains', alias?: string  } 
  | { name: 'addressStyle_not_contains', alias?: string  } 
  | { name: 'addressStyle_starts_with', alias?: string  } 
  | { name: 'addressStyle_not_starts_with', alias?: string  } 
  | { name: 'addressStyle_ends_with', alias?: string  } 
  | { name: 'addressStyle_not_ends_with', alias?: string  } 
  | { name: 'designationColor', alias?: string  } 
  | { name: 'designationColor_not', alias?: string  } 
  | { name: 'designationColor_in', alias?: string  } 
  | { name: 'designationColor_not_in', alias?: string  } 
  | { name: 'designationColor_lt', alias?: string  } 
  | { name: 'designationColor_lte', alias?: string  } 
  | { name: 'designationColor_gt', alias?: string  } 
  | { name: 'designationColor_gte', alias?: string  } 
  | { name: 'designationColor_contains', alias?: string  } 
  | { name: 'designationColor_not_contains', alias?: string  } 
  | { name: 'designationColor_starts_with', alias?: string  } 
  | { name: 'designationColor_not_starts_with', alias?: string  } 
  | { name: 'designationColor_ends_with', alias?: string  } 
  | { name: 'designationColor_not_ends_with', alias?: string  } 
  | { name: 'designationFamily', alias?: string  } 
  | { name: 'designationFamily_not', alias?: string  } 
  | { name: 'designationFamily_in', alias?: string  } 
  | { name: 'designationFamily_not_in', alias?: string  } 
  | { name: 'designationFamily_lt', alias?: string  } 
  | { name: 'designationFamily_lte', alias?: string  } 
  | { name: 'designationFamily_gt', alias?: string  } 
  | { name: 'designationFamily_gte', alias?: string  } 
  | { name: 'designationFamily_contains', alias?: string  } 
  | { name: 'designationFamily_not_contains', alias?: string  } 
  | { name: 'designationFamily_starts_with', alias?: string  } 
  | { name: 'designationFamily_not_starts_with', alias?: string  } 
  | { name: 'designationFamily_ends_with', alias?: string  } 
  | { name: 'designationFamily_not_ends_with', alias?: string  } 
  | { name: 'designationStyle', alias?: string  } 
  | { name: 'designationStyle_not', alias?: string  } 
  | { name: 'designationStyle_in', alias?: string  } 
  | { name: 'designationStyle_not_in', alias?: string  } 
  | { name: 'designationStyle_lt', alias?: string  } 
  | { name: 'designationStyle_lte', alias?: string  } 
  | { name: 'designationStyle_gt', alias?: string  } 
  | { name: 'designationStyle_gte', alias?: string  } 
  | { name: 'designationStyle_contains', alias?: string  } 
  | { name: 'designationStyle_not_contains', alias?: string  } 
  | { name: 'designationStyle_starts_with', alias?: string  } 
  | { name: 'designationStyle_not_starts_with', alias?: string  } 
  | { name: 'designationStyle_ends_with', alias?: string  } 
  | { name: 'designationStyle_not_ends_with', alias?: string  } 
  | { name: 'doctorColor', alias?: string  } 
  | { name: 'doctorColor_not', alias?: string  } 
  | { name: 'doctorColor_in', alias?: string  } 
  | { name: 'doctorColor_not_in', alias?: string  } 
  | { name: 'doctorColor_lt', alias?: string  } 
  | { name: 'doctorColor_lte', alias?: string  } 
  | { name: 'doctorColor_gt', alias?: string  } 
  | { name: 'doctorColor_gte', alias?: string  } 
  | { name: 'doctorColor_contains', alias?: string  } 
  | { name: 'doctorColor_not_contains', alias?: string  } 
  | { name: 'doctorColor_starts_with', alias?: string  } 
  | { name: 'doctorColor_not_starts_with', alias?: string  } 
  | { name: 'doctorColor_ends_with', alias?: string  } 
  | { name: 'doctorColor_not_ends_with', alias?: string  } 
  | { name: 'doctorFamily', alias?: string  } 
  | { name: 'doctorFamily_not', alias?: string  } 
  | { name: 'doctorFamily_in', alias?: string  } 
  | { name: 'doctorFamily_not_in', alias?: string  } 
  | { name: 'doctorFamily_lt', alias?: string  } 
  | { name: 'doctorFamily_lte', alias?: string  } 
  | { name: 'doctorFamily_gt', alias?: string  } 
  | { name: 'doctorFamily_gte', alias?: string  } 
  | { name: 'doctorFamily_contains', alias?: string  } 
  | { name: 'doctorFamily_not_contains', alias?: string  } 
  | { name: 'doctorFamily_starts_with', alias?: string  } 
  | { name: 'doctorFamily_not_starts_with', alias?: string  } 
  | { name: 'doctorFamily_ends_with', alias?: string  } 
  | { name: 'doctorFamily_not_ends_with', alias?: string  } 
  | { name: 'doctorStyle', alias?: string  } 
  | { name: 'doctorStyle_not', alias?: string  } 
  | { name: 'doctorStyle_in', alias?: string  } 
  | { name: 'doctorStyle_not_in', alias?: string  } 
  | { name: 'doctorStyle_lt', alias?: string  } 
  | { name: 'doctorStyle_lte', alias?: string  } 
  | { name: 'doctorStyle_gt', alias?: string  } 
  | { name: 'doctorStyle_gte', alias?: string  } 
  | { name: 'doctorStyle_contains', alias?: string  } 
  | { name: 'doctorStyle_not_contains', alias?: string  } 
  | { name: 'doctorStyle_starts_with', alias?: string  } 
  | { name: 'doctorStyle_not_starts_with', alias?: string  } 
  | { name: 'doctorStyle_ends_with', alias?: string  } 
  | { name: 'doctorStyle_not_ends_with', alias?: string  } 
  | { name: 'emailColor', alias?: string  } 
  | { name: 'emailColor_not', alias?: string  } 
  | { name: 'emailColor_in', alias?: string  } 
  | { name: 'emailColor_not_in', alias?: string  } 
  | { name: 'emailColor_lt', alias?: string  } 
  | { name: 'emailColor_lte', alias?: string  } 
  | { name: 'emailColor_gt', alias?: string  } 
  | { name: 'emailColor_gte', alias?: string  } 
  | { name: 'emailColor_contains', alias?: string  } 
  | { name: 'emailColor_not_contains', alias?: string  } 
  | { name: 'emailColor_starts_with', alias?: string  } 
  | { name: 'emailColor_not_starts_with', alias?: string  } 
  | { name: 'emailColor_ends_with', alias?: string  } 
  | { name: 'emailColor_not_ends_with', alias?: string  } 
  | { name: 'emailFamily', alias?: string  } 
  | { name: 'emailFamily_not', alias?: string  } 
  | { name: 'emailFamily_in', alias?: string  } 
  | { name: 'emailFamily_not_in', alias?: string  } 
  | { name: 'emailFamily_lt', alias?: string  } 
  | { name: 'emailFamily_lte', alias?: string  } 
  | { name: 'emailFamily_gt', alias?: string  } 
  | { name: 'emailFamily_gte', alias?: string  } 
  | { name: 'emailFamily_contains', alias?: string  } 
  | { name: 'emailFamily_not_contains', alias?: string  } 
  | { name: 'emailFamily_starts_with', alias?: string  } 
  | { name: 'emailFamily_not_starts_with', alias?: string  } 
  | { name: 'emailFamily_ends_with', alias?: string  } 
  | { name: 'emailFamily_not_ends_with', alias?: string  } 
  | { name: 'emailStyle', alias?: string  } 
  | { name: 'emailStyle_not', alias?: string  } 
  | { name: 'emailStyle_in', alias?: string  } 
  | { name: 'emailStyle_not_in', alias?: string  } 
  | { name: 'emailStyle_lt', alias?: string  } 
  | { name: 'emailStyle_lte', alias?: string  } 
  | { name: 'emailStyle_gt', alias?: string  } 
  | { name: 'emailStyle_gte', alias?: string  } 
  | { name: 'emailStyle_contains', alias?: string  } 
  | { name: 'emailStyle_not_contains', alias?: string  } 
  | { name: 'emailStyle_starts_with', alias?: string  } 
  | { name: 'emailStyle_not_starts_with', alias?: string  } 
  | { name: 'emailStyle_ends_with', alias?: string  } 
  | { name: 'emailStyle_not_ends_with', alias?: string  } 
  | { name: 'nameColor', alias?: string  } 
  | { name: 'nameColor_not', alias?: string  } 
  | { name: 'nameColor_in', alias?: string  } 
  | { name: 'nameColor_not_in', alias?: string  } 
  | { name: 'nameColor_lt', alias?: string  } 
  | { name: 'nameColor_lte', alias?: string  } 
  | { name: 'nameColor_gt', alias?: string  } 
  | { name: 'nameColor_gte', alias?: string  } 
  | { name: 'nameColor_contains', alias?: string  } 
  | { name: 'nameColor_not_contains', alias?: string  } 
  | { name: 'nameColor_starts_with', alias?: string  } 
  | { name: 'nameColor_not_starts_with', alias?: string  } 
  | { name: 'nameColor_ends_with', alias?: string  } 
  | { name: 'nameColor_not_ends_with', alias?: string  } 
  | { name: 'nameFamily', alias?: string  } 
  | { name: 'nameFamily_not', alias?: string  } 
  | { name: 'nameFamily_in', alias?: string  } 
  | { name: 'nameFamily_not_in', alias?: string  } 
  | { name: 'nameFamily_lt', alias?: string  } 
  | { name: 'nameFamily_lte', alias?: string  } 
  | { name: 'nameFamily_gt', alias?: string  } 
  | { name: 'nameFamily_gte', alias?: string  } 
  | { name: 'nameFamily_contains', alias?: string  } 
  | { name: 'nameFamily_not_contains', alias?: string  } 
  | { name: 'nameFamily_starts_with', alias?: string  } 
  | { name: 'nameFamily_not_starts_with', alias?: string  } 
  | { name: 'nameFamily_ends_with', alias?: string  } 
  | { name: 'nameFamily_not_ends_with', alias?: string  } 
  | { name: 'nameStyle', alias?: string  } 
  | { name: 'nameStyle_not', alias?: string  } 
  | { name: 'nameStyle_in', alias?: string  } 
  | { name: 'nameStyle_not_in', alias?: string  } 
  | { name: 'nameStyle_lt', alias?: string  } 
  | { name: 'nameStyle_lte', alias?: string  } 
  | { name: 'nameStyle_gt', alias?: string  } 
  | { name: 'nameStyle_gte', alias?: string  } 
  | { name: 'nameStyle_contains', alias?: string  } 
  | { name: 'nameStyle_not_contains', alias?: string  } 
  | { name: 'nameStyle_starts_with', alias?: string  } 
  | { name: 'nameStyle_not_starts_with', alias?: string  } 
  | { name: 'nameStyle_ends_with', alias?: string  } 
  | { name: 'nameStyle_not_ends_with', alias?: string  } 
  | { name: 'phoneColor', alias?: string  } 
  | { name: 'phoneColor_not', alias?: string  } 
  | { name: 'phoneColor_in', alias?: string  } 
  | { name: 'phoneColor_not_in', alias?: string  } 
  | { name: 'phoneColor_lt', alias?: string  } 
  | { name: 'phoneColor_lte', alias?: string  } 
  | { name: 'phoneColor_gt', alias?: string  } 
  | { name: 'phoneColor_gte', alias?: string  } 
  | { name: 'phoneColor_contains', alias?: string  } 
  | { name: 'phoneColor_not_contains', alias?: string  } 
  | { name: 'phoneColor_starts_with', alias?: string  } 
  | { name: 'phoneColor_not_starts_with', alias?: string  } 
  | { name: 'phoneColor_ends_with', alias?: string  } 
  | { name: 'phoneColor_not_ends_with', alias?: string  } 
  | { name: 'phoneFamily', alias?: string  } 
  | { name: 'phoneFamily_not', alias?: string  } 
  | { name: 'phoneFamily_in', alias?: string  } 
  | { name: 'phoneFamily_not_in', alias?: string  } 
  | { name: 'phoneFamily_lt', alias?: string  } 
  | { name: 'phoneFamily_lte', alias?: string  } 
  | { name: 'phoneFamily_gt', alias?: string  } 
  | { name: 'phoneFamily_gte', alias?: string  } 
  | { name: 'phoneFamily_contains', alias?: string  } 
  | { name: 'phoneFamily_not_contains', alias?: string  } 
  | { name: 'phoneFamily_starts_with', alias?: string  } 
  | { name: 'phoneFamily_not_starts_with', alias?: string  } 
  | { name: 'phoneFamily_ends_with', alias?: string  } 
  | { name: 'phoneFamily_not_ends_with', alias?: string  } 
  | { name: 'phoneStyle', alias?: string  } 
  | { name: 'phoneStyle_not', alias?: string  } 
  | { name: 'phoneStyle_in', alias?: string  } 
  | { name: 'phoneStyle_not_in', alias?: string  } 
  | { name: 'phoneStyle_lt', alias?: string  } 
  | { name: 'phoneStyle_lte', alias?: string  } 
  | { name: 'phoneStyle_gt', alias?: string  } 
  | { name: 'phoneStyle_gte', alias?: string  } 
  | { name: 'phoneStyle_contains', alias?: string  } 
  | { name: 'phoneStyle_not_contains', alias?: string  } 
  | { name: 'phoneStyle_starts_with', alias?: string  } 
  | { name: 'phoneStyle_not_starts_with', alias?: string  } 
  | { name: 'phoneStyle_ends_with', alias?: string  } 
  | { name: 'phoneStyle_not_ends_with', alias?: string  } 
  | { name: 'ratingColor', alias?: string  } 
  | { name: 'ratingColor_not', alias?: string  } 
  | { name: 'ratingColor_in', alias?: string  } 
  | { name: 'ratingColor_not_in', alias?: string  } 
  | { name: 'ratingColor_lt', alias?: string  } 
  | { name: 'ratingColor_lte', alias?: string  } 
  | { name: 'ratingColor_gt', alias?: string  } 
  | { name: 'ratingColor_gte', alias?: string  } 
  | { name: 'ratingColor_contains', alias?: string  } 
  | { name: 'ratingColor_not_contains', alias?: string  } 
  | { name: 'ratingColor_starts_with', alias?: string  } 
  | { name: 'ratingColor_not_starts_with', alias?: string  } 
  | { name: 'ratingColor_ends_with', alias?: string  } 
  | { name: 'ratingColor_not_ends_with', alias?: string  } 
  | { name: 'ratingFamily', alias?: string  } 
  | { name: 'ratingFamily_not', alias?: string  } 
  | { name: 'ratingFamily_in', alias?: string  } 
  | { name: 'ratingFamily_not_in', alias?: string  } 
  | { name: 'ratingFamily_lt', alias?: string  } 
  | { name: 'ratingFamily_lte', alias?: string  } 
  | { name: 'ratingFamily_gt', alias?: string  } 
  | { name: 'ratingFamily_gte', alias?: string  } 
  | { name: 'ratingFamily_contains', alias?: string  } 
  | { name: 'ratingFamily_not_contains', alias?: string  } 
  | { name: 'ratingFamily_starts_with', alias?: string  } 
  | { name: 'ratingFamily_not_starts_with', alias?: string  } 
  | { name: 'ratingFamily_ends_with', alias?: string  } 
  | { name: 'ratingFamily_not_ends_with', alias?: string  } 
  | { name: 'ratingStyle', alias?: string  } 
  | { name: 'ratingStyle_not', alias?: string  } 
  | { name: 'ratingStyle_in', alias?: string  } 
  | { name: 'ratingStyle_not_in', alias?: string  } 
  | { name: 'ratingStyle_lt', alias?: string  } 
  | { name: 'ratingStyle_lte', alias?: string  } 
  | { name: 'ratingStyle_gt', alias?: string  } 
  | { name: 'ratingStyle_gte', alias?: string  } 
  | { name: 'ratingStyle_contains', alias?: string  } 
  | { name: 'ratingStyle_not_contains', alias?: string  } 
  | { name: 'ratingStyle_starts_with', alias?: string  } 
  | { name: 'ratingStyle_not_starts_with', alias?: string  } 
  | { name: 'ratingStyle_ends_with', alias?: string  } 
  | { name: 'ratingStyle_not_ends_with', alias?: string  } 
  | { name: 'specialityColor', alias?: string  } 
  | { name: 'specialityColor_not', alias?: string  } 
  | { name: 'specialityColor_in', alias?: string  } 
  | { name: 'specialityColor_not_in', alias?: string  } 
  | { name: 'specialityColor_lt', alias?: string  } 
  | { name: 'specialityColor_lte', alias?: string  } 
  | { name: 'specialityColor_gt', alias?: string  } 
  | { name: 'specialityColor_gte', alias?: string  } 
  | { name: 'specialityColor_contains', alias?: string  } 
  | { name: 'specialityColor_not_contains', alias?: string  } 
  | { name: 'specialityColor_starts_with', alias?: string  } 
  | { name: 'specialityColor_not_starts_with', alias?: string  } 
  | { name: 'specialityColor_ends_with', alias?: string  } 
  | { name: 'specialityColor_not_ends_with', alias?: string  } 
  | { name: 'specialityFamily', alias?: string  } 
  | { name: 'specialityFamily_not', alias?: string  } 
  | { name: 'specialityFamily_in', alias?: string  } 
  | { name: 'specialityFamily_not_in', alias?: string  } 
  | { name: 'specialityFamily_lt', alias?: string  } 
  | { name: 'specialityFamily_lte', alias?: string  } 
  | { name: 'specialityFamily_gt', alias?: string  } 
  | { name: 'specialityFamily_gte', alias?: string  } 
  | { name: 'specialityFamily_contains', alias?: string  } 
  | { name: 'specialityFamily_not_contains', alias?: string  } 
  | { name: 'specialityFamily_starts_with', alias?: string  } 
  | { name: 'specialityFamily_not_starts_with', alias?: string  } 
  | { name: 'specialityFamily_ends_with', alias?: string  } 
  | { name: 'specialityFamily_not_ends_with', alias?: string  } 
  | { name: 'specialityStyle', alias?: string  } 
  | { name: 'specialityStyle_not', alias?: string  } 
  | { name: 'specialityStyle_in', alias?: string  } 
  | { name: 'specialityStyle_not_in', alias?: string  } 
  | { name: 'specialityStyle_lt', alias?: string  } 
  | { name: 'specialityStyle_lte', alias?: string  } 
  | { name: 'specialityStyle_gt', alias?: string  } 
  | { name: 'specialityStyle_gte', alias?: string  } 
  | { name: 'specialityStyle_contains', alias?: string  } 
  | { name: 'specialityStyle_not_contains', alias?: string  } 
  | { name: 'specialityStyle_starts_with', alias?: string  } 
  | { name: 'specialityStyle_not_starts_with', alias?: string  } 
  | { name: 'specialityStyle_ends_with', alias?: string  } 
  | { name: 'specialityStyle_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SheduleTimeWhereUniqueInput {
  id?: number | null
}
export type SheduleTimeWhereUniqueInputInputObject =
  | Extract<keyof SheduleTimeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SliderWhereUniqueInput {
  id?: number | null
}
export type SliderWhereUniqueInputInputObject =
  | Extract<keyof SliderWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SliderWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  arabicHeading?: string | null
  arabicHeading_not?: string | null
  arabicHeading_in?: string[]
  arabicHeading_not_in?: string[]
  arabicHeading_lt?: string | null
  arabicHeading_lte?: string | null
  arabicHeading_gt?: string | null
  arabicHeading_gte?: string | null
  arabicHeading_contains?: string | null
  arabicHeading_not_contains?: string | null
  arabicHeading_starts_with?: string | null
  arabicHeading_not_starts_with?: string | null
  arabicHeading_ends_with?: string | null
  arabicHeading_not_ends_with?: string | null
  banner?: string | null
  banner_not?: string | null
  banner_in?: string[]
  banner_not_in?: string[]
  banner_lt?: string | null
  banner_lte?: string | null
  banner_gt?: string | null
  banner_gte?: string | null
  banner_contains?: string | null
  banner_not_contains?: string | null
  banner_starts_with?: string | null
  banner_not_starts_with?: string | null
  banner_ends_with?: string | null
  banner_not_ends_with?: string | null
  heading?: string | null
  heading_not?: string | null
  heading_in?: string[]
  heading_not_in?: string[]
  heading_lt?: string | null
  heading_lte?: string | null
  heading_gt?: string | null
  heading_gte?: string | null
  heading_contains?: string | null
  heading_not_contains?: string | null
  heading_starts_with?: string | null
  heading_not_starts_with?: string | null
  heading_ends_with?: string | null
  heading_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: SliderWhereInput[]
  OR?: SliderWhereInput[]
  NOT?: SliderWhereInput[]
}
export type SliderWhereInputInputObject =
  | Extract<keyof SliderWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'arabicHeading', alias?: string  } 
  | { name: 'arabicHeading_not', alias?: string  } 
  | { name: 'arabicHeading_in', alias?: string  } 
  | { name: 'arabicHeading_not_in', alias?: string  } 
  | { name: 'arabicHeading_lt', alias?: string  } 
  | { name: 'arabicHeading_lte', alias?: string  } 
  | { name: 'arabicHeading_gt', alias?: string  } 
  | { name: 'arabicHeading_gte', alias?: string  } 
  | { name: 'arabicHeading_contains', alias?: string  } 
  | { name: 'arabicHeading_not_contains', alias?: string  } 
  | { name: 'arabicHeading_starts_with', alias?: string  } 
  | { name: 'arabicHeading_not_starts_with', alias?: string  } 
  | { name: 'arabicHeading_ends_with', alias?: string  } 
  | { name: 'arabicHeading_not_ends_with', alias?: string  } 
  | { name: 'banner', alias?: string  } 
  | { name: 'banner_not', alias?: string  } 
  | { name: 'banner_in', alias?: string  } 
  | { name: 'banner_not_in', alias?: string  } 
  | { name: 'banner_lt', alias?: string  } 
  | { name: 'banner_lte', alias?: string  } 
  | { name: 'banner_gt', alias?: string  } 
  | { name: 'banner_gte', alias?: string  } 
  | { name: 'banner_contains', alias?: string  } 
  | { name: 'banner_not_contains', alias?: string  } 
  | { name: 'banner_starts_with', alias?: string  } 
  | { name: 'banner_not_starts_with', alias?: string  } 
  | { name: 'banner_ends_with', alias?: string  } 
  | { name: 'banner_not_ends_with', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  | { name: 'heading_not', alias?: string  } 
  | { name: 'heading_in', alias?: string  } 
  | { name: 'heading_not_in', alias?: string  } 
  | { name: 'heading_lt', alias?: string  } 
  | { name: 'heading_lte', alias?: string  } 
  | { name: 'heading_gt', alias?: string  } 
  | { name: 'heading_gte', alias?: string  } 
  | { name: 'heading_contains', alias?: string  } 
  | { name: 'heading_not_contains', alias?: string  } 
  | { name: 'heading_starts_with', alias?: string  } 
  | { name: 'heading_not_starts_with', alias?: string  } 
  | { name: 'heading_ends_with', alias?: string  } 
  | { name: 'heading_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpecialityWhereUniqueInput {
  id?: number | null
}
export type SpecialityWhereUniqueInputInputObject =
  | Extract<keyof SpecialityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface EmailSubscriptionWhereUniqueInput {
  id?: number | null
}
export type EmailSubscriptionWhereUniqueInputInputObject =
  | Extract<keyof EmailSubscriptionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface EmailSubscriptionWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: EmailSubscriptionWhereInput[]
  OR?: EmailSubscriptionWhereInput[]
  NOT?: EmailSubscriptionWhereInput[]
}
export type EmailSubscriptionWhereInputInputObject =
  | Extract<keyof EmailSubscriptionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereUniqueInput {
  id?: number | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface UserWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  rememberToken?: string | null
  rememberToken_not?: string | null
  rememberToken_in?: string[]
  rememberToken_not_in?: string[]
  rememberToken_lt?: string | null
  rememberToken_lte?: string | null
  rememberToken_gt?: string | null
  rememberToken_gte?: string | null
  rememberToken_contains?: string | null
  rememberToken_not_contains?: string | null
  rememberToken_starts_with?: string | null
  rememberToken_not_starts_with?: string | null
  rememberToken_ends_with?: string | null
  rememberToken_not_ends_with?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'rememberToken', alias?: string  } 
  | { name: 'rememberToken_not', alias?: string  } 
  | { name: 'rememberToken_in', alias?: string  } 
  | { name: 'rememberToken_not_in', alias?: string  } 
  | { name: 'rememberToken_lt', alias?: string  } 
  | { name: 'rememberToken_lte', alias?: string  } 
  | { name: 'rememberToken_gt', alias?: string  } 
  | { name: 'rememberToken_gte', alias?: string  } 
  | { name: 'rememberToken_contains', alias?: string  } 
  | { name: 'rememberToken_not_contains', alias?: string  } 
  | { name: 'rememberToken_starts_with', alias?: string  } 
  | { name: 'rememberToken_not_starts_with', alias?: string  } 
  | { name: 'rememberToken_ends_with', alias?: string  } 
  | { name: 'rememberToken_not_ends_with', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VideoRequestWhereUniqueInput {
  id?: number | null
}
export type VideoRequestWhereUniqueInputInputObject =
  | Extract<keyof VideoRequestWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface VideoRequestWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  doctorId?: number | null
  doctorId_not?: number | null
  doctorId_in?: number[]
  doctorId_not_in?: number[]
  doctorId_lt?: number | null
  doctorId_lte?: number | null
  doctorId_gt?: number | null
  doctorId_gte?: number | null
  joinCall?: number | null
  joinCall_not?: number | null
  joinCall_in?: number[]
  joinCall_not_in?: number[]
  joinCall_lt?: number | null
  joinCall_lte?: number | null
  joinCall_gt?: number | null
  joinCall_gte?: number | null
  patientId?: number | null
  patientId_not?: number | null
  patientId_in?: number[]
  patientId_not_in?: number[]
  patientId_lt?: number | null
  patientId_lte?: number | null
  patientId_gt?: number | null
  patientId_gte?: number | null
  requestDate?: number | null
  requestDate_not?: number | null
  requestDate_in?: number[]
  requestDate_not_in?: number[]
  requestDate_lt?: number | null
  requestDate_lte?: number | null
  requestDate_gt?: number | null
  requestDate_gte?: number | null
  videoCode?: number | null
  videoCode_not?: number | null
  videoCode_in?: number[]
  videoCode_not_in?: number[]
  videoCode_lt?: number | null
  videoCode_lte?: number | null
  videoCode_gt?: number | null
  videoCode_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: VideoRequestWhereInput[]
  OR?: VideoRequestWhereInput[]
  NOT?: VideoRequestWhereInput[]
}
export type VideoRequestWhereInputInputObject =
  | Extract<keyof VideoRequestWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorId_not', alias?: string  } 
  | { name: 'doctorId_in', alias?: string  } 
  | { name: 'doctorId_not_in', alias?: string  } 
  | { name: 'doctorId_lt', alias?: string  } 
  | { name: 'doctorId_lte', alias?: string  } 
  | { name: 'doctorId_gt', alias?: string  } 
  | { name: 'doctorId_gte', alias?: string  } 
  | { name: 'joinCall', alias?: string  } 
  | { name: 'joinCall_not', alias?: string  } 
  | { name: 'joinCall_in', alias?: string  } 
  | { name: 'joinCall_not_in', alias?: string  } 
  | { name: 'joinCall_lt', alias?: string  } 
  | { name: 'joinCall_lte', alias?: string  } 
  | { name: 'joinCall_gt', alias?: string  } 
  | { name: 'joinCall_gte', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'patientId_not', alias?: string  } 
  | { name: 'patientId_in', alias?: string  } 
  | { name: 'patientId_not_in', alias?: string  } 
  | { name: 'patientId_lt', alias?: string  } 
  | { name: 'patientId_lte', alias?: string  } 
  | { name: 'patientId_gt', alias?: string  } 
  | { name: 'patientId_gte', alias?: string  } 
  | { name: 'requestDate', alias?: string  } 
  | { name: 'requestDate_not', alias?: string  } 
  | { name: 'requestDate_in', alias?: string  } 
  | { name: 'requestDate_not_in', alias?: string  } 
  | { name: 'requestDate_lt', alias?: string  } 
  | { name: 'requestDate_lte', alias?: string  } 
  | { name: 'requestDate_gt', alias?: string  } 
  | { name: 'requestDate_gte', alias?: string  } 
  | { name: 'videoCode', alias?: string  } 
  | { name: 'videoCode_not', alias?: string  } 
  | { name: 'videoCode_in', alias?: string  } 
  | { name: 'videoCode_not_in', alias?: string  } 
  | { name: 'videoCode_lt', alias?: string  } 
  | { name: 'videoCode_lte', alias?: string  } 
  | { name: 'videoCode_gt', alias?: string  } 
  | { name: 'videoCode_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VisitorWhereUniqueInput {
  id?: number | null
}
export type VisitorWhereUniqueInputInputObject =
  | Extract<keyof VisitorWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface VisitorWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  country?: string | null
  country_not?: string | null
  country_in?: string[]
  country_not_in?: string[]
  country_lt?: string | null
  country_lte?: string | null
  country_gt?: string | null
  country_gte?: string | null
  country_contains?: string | null
  country_not_contains?: string | null
  country_starts_with?: string | null
  country_not_starts_with?: string | null
  country_ends_with?: string | null
  country_not_ends_with?: string | null
  hits?: number | null
  hits_not?: number | null
  hits_in?: number[]
  hits_not_in?: number[]
  hits_lt?: number | null
  hits_lte?: number | null
  hits_gt?: number | null
  hits_gte?: number | null
  ipAddress?: string | null
  ipAddress_not?: string | null
  ipAddress_in?: string[]
  ipAddress_not_in?: string[]
  ipAddress_lt?: string | null
  ipAddress_lte?: string | null
  ipAddress_gt?: string | null
  ipAddress_gte?: string | null
  ipAddress_contains?: string | null
  ipAddress_not_contains?: string | null
  ipAddress_starts_with?: string | null
  ipAddress_not_starts_with?: string | null
  ipAddress_ends_with?: string | null
  ipAddress_not_ends_with?: string | null
  visitDate?: string | null
  visitDate_not?: string | null
  visitDate_in?: string[]
  visitDate_not_in?: string[]
  visitDate_lt?: string | null
  visitDate_lte?: string | null
  visitDate_gt?: string | null
  visitDate_gte?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: VisitorWhereInput[]
  OR?: VisitorWhereInput[]
  NOT?: VisitorWhereInput[]
}
export type VisitorWhereInputInputObject =
  | Extract<keyof VisitorWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'country_not', alias?: string  } 
  | { name: 'country_in', alias?: string  } 
  | { name: 'country_not_in', alias?: string  } 
  | { name: 'country_lt', alias?: string  } 
  | { name: 'country_lte', alias?: string  } 
  | { name: 'country_gt', alias?: string  } 
  | { name: 'country_gte', alias?: string  } 
  | { name: 'country_contains', alias?: string  } 
  | { name: 'country_not_contains', alias?: string  } 
  | { name: 'country_starts_with', alias?: string  } 
  | { name: 'country_not_starts_with', alias?: string  } 
  | { name: 'country_ends_with', alias?: string  } 
  | { name: 'country_not_ends_with', alias?: string  } 
  | { name: 'hits', alias?: string  } 
  | { name: 'hits_not', alias?: string  } 
  | { name: 'hits_in', alias?: string  } 
  | { name: 'hits_not_in', alias?: string  } 
  | { name: 'hits_lt', alias?: string  } 
  | { name: 'hits_lte', alias?: string  } 
  | { name: 'hits_gt', alias?: string  } 
  | { name: 'hits_gte', alias?: string  } 
  | { name: 'ipAddress', alias?: string  } 
  | { name: 'ipAddress_not', alias?: string  } 
  | { name: 'ipAddress_in', alias?: string  } 
  | { name: 'ipAddress_not_in', alias?: string  } 
  | { name: 'ipAddress_lt', alias?: string  } 
  | { name: 'ipAddress_lte', alias?: string  } 
  | { name: 'ipAddress_gt', alias?: string  } 
  | { name: 'ipAddress_gte', alias?: string  } 
  | { name: 'ipAddress_contains', alias?: string  } 
  | { name: 'ipAddress_not_contains', alias?: string  } 
  | { name: 'ipAddress_starts_with', alias?: string  } 
  | { name: 'ipAddress_not_starts_with', alias?: string  } 
  | { name: 'ipAddress_ends_with', alias?: string  } 
  | { name: 'ipAddress_not_ends_with', alias?: string  } 
  | { name: 'visitDate', alias?: string  } 
  | { name: 'visitDate_not', alias?: string  } 
  | { name: 'visitDate_in', alias?: string  } 
  | { name: 'visitDate_not_in', alias?: string  } 
  | { name: 'visitDate_lt', alias?: string  } 
  | { name: 'visitDate_lte', alias?: string  } 
  | { name: 'visitDate_gt', alias?: string  } 
  | { name: 'visitDate_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TranslationWhereUniqueInput {
  id?: number | null
}
export type TranslationWhereUniqueInputInputObject =
  | Extract<keyof TranslationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TranslationWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  arabi?: string | null
  arabi_not?: string | null
  arabi_in?: string[]
  arabi_not_in?: string[]
  arabi_lt?: string | null
  arabi_lte?: string | null
  arabi_gt?: string | null
  arabi_gte?: string | null
  arabi_contains?: string | null
  arabi_not_contains?: string | null
  arabi_starts_with?: string | null
  arabi_not_starts_with?: string | null
  arabi_ends_with?: string | null
  arabi_not_ends_with?: string | null
  english?: string | null
  english_not?: string | null
  english_in?: string[]
  english_not_in?: string[]
  english_lt?: string | null
  english_lte?: string | null
  english_gt?: string | null
  english_gte?: string | null
  english_contains?: string | null
  english_not_contains?: string | null
  english_starts_with?: string | null
  english_not_starts_with?: string | null
  english_ends_with?: string | null
  english_not_ends_with?: string | null
  index?: string | null
  index_not?: string | null
  index_in?: string[]
  index_not_in?: string[]
  index_lt?: string | null
  index_lte?: string | null
  index_gt?: string | null
  index_gte?: string | null
  index_contains?: string | null
  index_not_contains?: string | null
  index_starts_with?: string | null
  index_not_starts_with?: string | null
  index_ends_with?: string | null
  index_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: TranslationWhereInput[]
  OR?: TranslationWhereInput[]
  NOT?: TranslationWhereInput[]
}
export type TranslationWhereInputInputObject =
  | Extract<keyof TranslationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'arabi', alias?: string  } 
  | { name: 'arabi_not', alias?: string  } 
  | { name: 'arabi_in', alias?: string  } 
  | { name: 'arabi_not_in', alias?: string  } 
  | { name: 'arabi_lt', alias?: string  } 
  | { name: 'arabi_lte', alias?: string  } 
  | { name: 'arabi_gt', alias?: string  } 
  | { name: 'arabi_gte', alias?: string  } 
  | { name: 'arabi_contains', alias?: string  } 
  | { name: 'arabi_not_contains', alias?: string  } 
  | { name: 'arabi_starts_with', alias?: string  } 
  | { name: 'arabi_not_starts_with', alias?: string  } 
  | { name: 'arabi_ends_with', alias?: string  } 
  | { name: 'arabi_not_ends_with', alias?: string  } 
  | { name: 'english', alias?: string  } 
  | { name: 'english_not', alias?: string  } 
  | { name: 'english_in', alias?: string  } 
  | { name: 'english_not_in', alias?: string  } 
  | { name: 'english_lt', alias?: string  } 
  | { name: 'english_lte', alias?: string  } 
  | { name: 'english_gt', alias?: string  } 
  | { name: 'english_gte', alias?: string  } 
  | { name: 'english_contains', alias?: string  } 
  | { name: 'english_not_contains', alias?: string  } 
  | { name: 'english_starts_with', alias?: string  } 
  | { name: 'english_not_starts_with', alias?: string  } 
  | { name: 'english_ends_with', alias?: string  } 
  | { name: 'english_not_ends_with', alias?: string  } 
  | { name: 'index', alias?: string  } 
  | { name: 'index_not', alias?: string  } 
  | { name: 'index_in', alias?: string  } 
  | { name: 'index_not_in', alias?: string  } 
  | { name: 'index_lt', alias?: string  } 
  | { name: 'index_lte', alias?: string  } 
  | { name: 'index_gt', alias?: string  } 
  | { name: 'index_gte', alias?: string  } 
  | { name: 'index_contains', alias?: string  } 
  | { name: 'index_not_contains', alias?: string  } 
  | { name: 'index_starts_with', alias?: string  } 
  | { name: 'index_not_starts_with', alias?: string  } 
  | { name: 'index_ends_with', alias?: string  } 
  | { name: 'index_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PageWhereUniqueInput {
  id?: number | null
  slug?: string | null
  slug_ar?: string | null
}
export type PageWhereUniqueInputInputObject =
  | Extract<keyof PageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_ar', alias?: string  } 
  
export interface PageWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  slug?: string | null
  slug_not?: string | null
  slug_in?: string[]
  slug_not_in?: string[]
  slug_lt?: string | null
  slug_lte?: string | null
  slug_gt?: string | null
  slug_gte?: string | null
  slug_contains?: string | null
  slug_not_contains?: string | null
  slug_starts_with?: string | null
  slug_not_starts_with?: string | null
  slug_ends_with?: string | null
  slug_not_ends_with?: string | null
  slug_ar?: string | null
  slug_ar_not?: string | null
  slug_ar_in?: string[]
  slug_ar_not_in?: string[]
  slug_ar_lt?: string | null
  slug_ar_lte?: string | null
  slug_ar_gt?: string | null
  slug_ar_gte?: string | null
  slug_ar_contains?: string | null
  slug_ar_not_contains?: string | null
  slug_ar_starts_with?: string | null
  slug_ar_not_starts_with?: string | null
  slug_ar_ends_with?: string | null
  slug_ar_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  title_ar?: string | null
  title_ar_not?: string | null
  title_ar_in?: string[]
  title_ar_not_in?: string[]
  title_ar_lt?: string | null
  title_ar_lte?: string | null
  title_ar_gt?: string | null
  title_ar_gte?: string | null
  title_ar_contains?: string | null
  title_ar_not_contains?: string | null
  title_ar_starts_with?: string | null
  title_ar_not_starts_with?: string | null
  title_ar_ends_with?: string | null
  title_ar_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  content_ar?: string | null
  content_ar_not?: string | null
  content_ar_in?: string[]
  content_ar_not_in?: string[]
  content_ar_lt?: string | null
  content_ar_lte?: string | null
  content_ar_gt?: string | null
  content_ar_gte?: string | null
  content_ar_contains?: string | null
  content_ar_not_contains?: string | null
  content_ar_starts_with?: string | null
  content_ar_not_starts_with?: string | null
  content_ar_ends_with?: string | null
  content_ar_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: PageWhereInput[]
  OR?: PageWhereInput[]
  NOT?: PageWhereInput[]
}
export type PageWhereInputInputObject =
  | Extract<keyof PageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_not', alias?: string  } 
  | { name: 'slug_in', alias?: string  } 
  | { name: 'slug_not_in', alias?: string  } 
  | { name: 'slug_lt', alias?: string  } 
  | { name: 'slug_lte', alias?: string  } 
  | { name: 'slug_gt', alias?: string  } 
  | { name: 'slug_gte', alias?: string  } 
  | { name: 'slug_contains', alias?: string  } 
  | { name: 'slug_not_contains', alias?: string  } 
  | { name: 'slug_starts_with', alias?: string  } 
  | { name: 'slug_not_starts_with', alias?: string  } 
  | { name: 'slug_ends_with', alias?: string  } 
  | { name: 'slug_not_ends_with', alias?: string  } 
  | { name: 'slug_ar', alias?: string  } 
  | { name: 'slug_ar_not', alias?: string  } 
  | { name: 'slug_ar_in', alias?: string  } 
  | { name: 'slug_ar_not_in', alias?: string  } 
  | { name: 'slug_ar_lt', alias?: string  } 
  | { name: 'slug_ar_lte', alias?: string  } 
  | { name: 'slug_ar_gt', alias?: string  } 
  | { name: 'slug_ar_gte', alias?: string  } 
  | { name: 'slug_ar_contains', alias?: string  } 
  | { name: 'slug_ar_not_contains', alias?: string  } 
  | { name: 'slug_ar_starts_with', alias?: string  } 
  | { name: 'slug_ar_not_starts_with', alias?: string  } 
  | { name: 'slug_ar_ends_with', alias?: string  } 
  | { name: 'slug_ar_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'title_ar', alias?: string  } 
  | { name: 'title_ar_not', alias?: string  } 
  | { name: 'title_ar_in', alias?: string  } 
  | { name: 'title_ar_not_in', alias?: string  } 
  | { name: 'title_ar_lt', alias?: string  } 
  | { name: 'title_ar_lte', alias?: string  } 
  | { name: 'title_ar_gt', alias?: string  } 
  | { name: 'title_ar_gte', alias?: string  } 
  | { name: 'title_ar_contains', alias?: string  } 
  | { name: 'title_ar_not_contains', alias?: string  } 
  | { name: 'title_ar_starts_with', alias?: string  } 
  | { name: 'title_ar_not_starts_with', alias?: string  } 
  | { name: 'title_ar_ends_with', alias?: string  } 
  | { name: 'title_ar_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'content_ar', alias?: string  } 
  | { name: 'content_ar_not', alias?: string  } 
  | { name: 'content_ar_in', alias?: string  } 
  | { name: 'content_ar_not_in', alias?: string  } 
  | { name: 'content_ar_lt', alias?: string  } 
  | { name: 'content_ar_lte', alias?: string  } 
  | { name: 'content_ar_gt', alias?: string  } 
  | { name: 'content_ar_gte', alias?: string  } 
  | { name: 'content_ar_contains', alias?: string  } 
  | { name: 'content_ar_not_contains', alias?: string  } 
  | { name: 'content_ar_starts_with', alias?: string  } 
  | { name: 'content_ar_not_starts_with', alias?: string  } 
  | { name: 'content_ar_ends_with', alias?: string  } 
  | { name: 'content_ar_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AboutUsCreateInput {
  id?: number | null
  arabicContent?: string
  englishContent?: string
}
export type AboutUsCreateInputInputObject =
  | Extract<keyof AboutUsCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'arabicContent', alias?: string  } 
  | { name: 'englishContent', alias?: string  } 
  
export interface AboutUsUpdateInput {
  arabicContent?: string | null
  englishContent?: string | null
}
export type AboutUsUpdateInputInputObject =
  | Extract<keyof AboutUsUpdateInput, string>
  | { name: 'arabicContent', alias?: string  } 
  | { name: 'englishContent', alias?: string  } 
  
export interface AboutUsUpdateManyMutationInput {
  arabicContent?: string | null
  englishContent?: string | null
}
export type AboutUsUpdateManyMutationInputInputObject =
  | Extract<keyof AboutUsUpdateManyMutationInput, string>
  | { name: 'arabicContent', alias?: string  } 
  | { name: 'englishContent', alias?: string  } 
  
export interface AdminCreateInput {
  id?: number | null
  email?: string
  pass?: string | null
  superAdmin?: number | null
  user?: string | null
}
export type AdminCreateInputInputObject =
  | Extract<keyof AdminCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'pass', alias?: string  } 
  | { name: 'superAdmin', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface AdminUpdateInput {
  email?: string | null
  pass?: string | null
  superAdmin?: number | null
  user?: string | null
}
export type AdminUpdateInputInputObject =
  | Extract<keyof AdminUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'pass', alias?: string  } 
  | { name: 'superAdmin', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface AdminUpdateManyMutationInput {
  email?: string | null
  pass?: string | null
  superAdmin?: number | null
  user?: string | null
}
export type AdminUpdateManyMutationInputInputObject =
  | Extract<keyof AdminUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'pass', alias?: string  } 
  | { name: 'superAdmin', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface AppointmentCreateInput {
  id?: number | null
  apointmentDate?: string
  apointmentFulldate?: number
  apointmentTime?: string
  diseaseId?: DiseaseCreateOneInput | null
  doctorArabic?: string
  doctorId?: DoctorCreateOneInput | null
  doctorName?: string
  dtId?: DoctorSheduleTimeCreateOneInput | null
  gender?: string
  hospitalId?: HospitalCreateOneInput | null
  isRead?: number | null
  optId?: OptTimeCreateOneInput | null
  patientId?: PatientCreateOneInput | null
  phone?: string
  phoneCode?: string | null
  scheduleTimeId?: SheduleTimeCreateOneInput | null
  status?: number | null
}
export type AppointmentCreateInputInputObject =
  | Extract<keyof AppointmentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DiseaseCreateOneInput {
  create?: DiseaseCreateInput | null
  connect?: DiseaseWhereUniqueInput | null
}
export type DiseaseCreateOneInputInputObject =
  | Extract<keyof DiseaseCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DiseaseCreateInput {
  id?: number | null
  disease?: string | null
  diseaseArabic?: string
}
export type DiseaseCreateInputInputObject =
  | Extract<keyof DiseaseCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'disease', alias?: string  } 
  | { name: 'diseaseArabic', alias?: string  } 
  
export interface DoctorCreateOneInput {
  create?: DoctorCreateInput | null
  connect?: DoctorWhereUniqueInput | null
}
export type DoctorCreateOneInputInputObject =
  | Extract<keyof DoctorCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorCreateInput {
  id?: number | null
  apiKey?: string
  designation?: string | null
  doctorCv?: string
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  specialities?: SpecialityCreateOneWithoutDoctorsInput | null
  hospital?: HospitalCreateManyWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string
}
export type DoctorCreateInputInputObject =
  | Extract<keyof DoctorCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface SpecialityCreateOneWithoutDoctorsInput {
  create?: SpecialityCreateWithoutDoctorsInput | null
  connect?: SpecialityWhereUniqueInput | null
}
export type SpecialityCreateOneWithoutDoctorsInputInputObject =
  | Extract<keyof SpecialityCreateOneWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SpecialityCreateWithoutDoctorsInput {
  id?: number | null
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityCreateWithoutDoctorsInputInputObject =
  | Extract<keyof SpecialityCreateWithoutDoctorsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface HospitalCreateManyWithoutDoctorsInput {
  create?: HospitalCreateWithoutDoctorsInput[]
  connect?: HospitalWhereUniqueInput[]
}
export type HospitalCreateManyWithoutDoctorsInputInputObject =
  | Extract<keyof HospitalCreateManyWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface HospitalCreateWithoutDoctorsInput {
  id?: number | null
  address?: string
  addressArabic?: string
  apiKey?: string
  city?: CityCreateOneWithoutHospitalInput | null
  countryId?: CountryCreateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string
  language?: string
  latitude?: string
  location?: string
  logo?: string | null
  longitude?: string
  password?: string | null
  phone?: string | null
  phone1?: string
  status?: number | null
  type?: string | null
  uniqeId?: string
  insurances?: InsuranceCreateManyWithoutHospitalsInput | null
  createdDate?: string
}
export type HospitalCreateWithoutDoctorsInputInputObject =
  | Extract<keyof HospitalCreateWithoutDoctorsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface CityCreateOneWithoutHospitalInput {
  create?: CityCreateWithoutHospitalInput | null
  connect?: CityWhereUniqueInput | null
}
export type CityCreateOneWithoutHospitalInputInputObject =
  | Extract<keyof CityCreateOneWithoutHospitalInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CityCreateWithoutHospitalInput {
  id?: number | null
  city?: string | null
  cityArabic?: string
  countryId?: number | null
}
export type CityCreateWithoutHospitalInputInputObject =
  | Extract<keyof CityCreateWithoutHospitalInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  
export interface CountryCreateOneInput {
  create?: CountryCreateInput | null
  connect?: CountryWhereUniqueInput | null
}
export type CountryCreateOneInputInputObject =
  | Extract<keyof CountryCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CountryCreateInput {
  id?: number | null
  country?: string | null
  countryArabic?: string
}
export type CountryCreateInputInputObject =
  | Extract<keyof CountryCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'countryArabic', alias?: string  } 
  
export interface InsuranceCreateManyWithoutHospitalsInput {
  create?: InsuranceCreateWithoutHospitalsInput[]
  connect?: InsuranceWhereUniqueInput[]
}
export type InsuranceCreateManyWithoutHospitalsInputInputObject =
  | Extract<keyof InsuranceCreateManyWithoutHospitalsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InsuranceCreateWithoutHospitalsInput {
  id?: number | null
  countryId?: number
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceCreateWithoutHospitalsInputInputObject =
  | Extract<keyof InsuranceCreateWithoutHospitalsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface DoctorSheduleTimeCreateOneInput {
  create?: DoctorSheduleTimeCreateInput | null
  connect?: DoctorSheduleTimeWhereUniqueInput | null
}
export type DoctorSheduleTimeCreateOneInputInputObject =
  | Extract<keyof DoctorSheduleTimeCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorSheduleTimeCreateInput {
  id?: number | null
  drSheduleId?: number | null
  scheduleTime?: number | null
  status?: number | null
}
export type DoctorSheduleTimeCreateInputInputObject =
  | Extract<keyof DoctorSheduleTimeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface HospitalCreateOneInput {
  create?: HospitalCreateInput | null
  connect?: HospitalWhereUniqueInput | null
}
export type HospitalCreateOneInputInputObject =
  | Extract<keyof HospitalCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface HospitalCreateInput {
  id?: number | null
  address?: string
  addressArabic?: string
  apiKey?: string
  city?: CityCreateOneWithoutHospitalInput | null
  countryId?: CountryCreateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string
  doctors?: DoctorCreateManyWithoutHospitalInput | null
  language?: string
  latitude?: string
  location?: string
  logo?: string | null
  longitude?: string
  password?: string | null
  phone?: string | null
  phone1?: string
  status?: number | null
  type?: string | null
  uniqeId?: string
  insurances?: InsuranceCreateManyWithoutHospitalsInput | null
  createdDate?: string
}
export type HospitalCreateInputInputObject =
  | Extract<keyof HospitalCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorCreateManyWithoutHospitalInput {
  create?: DoctorCreateWithoutHospitalInput[]
  connect?: DoctorWhereUniqueInput[]
}
export type DoctorCreateManyWithoutHospitalInputInputObject =
  | Extract<keyof DoctorCreateManyWithoutHospitalInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorCreateWithoutHospitalInput {
  id?: number | null
  apiKey?: string
  designation?: string | null
  doctorCv?: string
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  specialities?: SpecialityCreateOneWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string
}
export type DoctorCreateWithoutHospitalInputInputObject =
  | Extract<keyof DoctorCreateWithoutHospitalInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface OptTimeCreateOneInput {
  create?: OptTimeCreateInput | null
  connect?: OptTimeWhereUniqueInput | null
}
export type OptTimeCreateOneInputInputObject =
  | Extract<keyof OptTimeCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptTimeCreateInput {
  id?: number | null
  fifteenMins?: string | null
  thirtyMins?: string | null
  twentyMins?: string | null
}
export type OptTimeCreateInputInputObject =
  | Extract<keyof OptTimeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'fifteenMins', alias?: string  } 
  | { name: 'thirtyMins', alias?: string  } 
  | { name: 'twentyMins', alias?: string  } 
  
export interface PatientCreateOneInput {
  create?: PatientCreateInput | null
  connect?: PatientWhereUniqueInput | null
}
export type PatientCreateOneInputInputObject =
  | Extract<keyof PatientCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PatientCreateInput {
  id?: number | null
  age?: number
  apiKey?: string
  createdDate?: string
  dob?: string | null
  email?: string | null
  gender?: string | null
  lastAction?: string
  lastSeen?: string
  mailSubs?: number | null
  mobile?: string | null
  name?: string | null
  password?: string | null
  status?: number | null
  uniqeId?: string
}
export type PatientCreateInputInputObject =
  | Extract<keyof PatientCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'dob', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastAction', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mailSubs', alias?: string  } 
  | { name: 'mobile', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  
export interface SheduleTimeCreateOneInput {
  create?: SheduleTimeCreateInput | null
  connect?: SheduleTimeWhereUniqueInput | null
}
export type SheduleTimeCreateOneInputInputObject =
  | Extract<keyof SheduleTimeCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SheduleTimeCreateInput {
  id?: number | null
  drSheduleId?: number | null
  scheduleFullDate?: number
  sheduleTime?: string | null
  status?: number | null
}
export type SheduleTimeCreateInputInputObject =
  | Extract<keyof SheduleTimeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleFullDate', alias?: string  } 
  | { name: 'sheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface AppointmentUpdateInput {
  apointmentDate?: string | null
  apointmentFulldate?: number | null
  apointmentTime?: string | null
  diseaseId?: DiseaseUpdateOneInput | null
  doctorArabic?: string | null
  doctorId?: DoctorUpdateOneInput | null
  doctorName?: string | null
  dtId?: DoctorSheduleTimeUpdateOneInput | null
  gender?: string | null
  hospitalId?: HospitalUpdateOneInput | null
  isRead?: number | null
  optId?: OptTimeUpdateOneInput | null
  patientId?: PatientUpdateOneInput | null
  phone?: string | null
  phoneCode?: string | null
  scheduleTimeId?: SheduleTimeUpdateOneInput | null
  status?: number | null
}
export type AppointmentUpdateInputInputObject =
  | Extract<keyof AppointmentUpdateInput, string>
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DiseaseUpdateOneInput {
  create?: DiseaseCreateInput | null
  update?: DiseaseUpdateDataInput | null
  upsert?: DiseaseUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: DiseaseWhereUniqueInput | null
}
export type DiseaseUpdateOneInputInputObject =
  | Extract<keyof DiseaseUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DiseaseUpdateDataInput {
  disease?: string | null
  diseaseArabic?: string | null
}
export type DiseaseUpdateDataInputInputObject =
  | Extract<keyof DiseaseUpdateDataInput, string>
  | { name: 'disease', alias?: string  } 
  | { name: 'diseaseArabic', alias?: string  } 
  
export interface DiseaseUpsertNestedInput {
  update?: DiseaseUpdateDataInput
  create?: DiseaseCreateInput
}
export type DiseaseUpsertNestedInputInputObject =
  | Extract<keyof DiseaseUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorUpdateOneInput {
  create?: DoctorCreateInput | null
  update?: DoctorUpdateDataInput | null
  upsert?: DoctorUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: DoctorWhereUniqueInput | null
}
export type DoctorUpdateOneInputInputObject =
  | Extract<keyof DoctorUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorUpdateDataInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  specialities?: SpecialityUpdateOneWithoutDoctorsInput | null
  hospital?: HospitalUpdateManyWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateDataInputInputObject =
  | Extract<keyof DoctorUpdateDataInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface SpecialityUpdateOneWithoutDoctorsInput {
  create?: SpecialityCreateWithoutDoctorsInput | null
  update?: SpecialityUpdateWithoutDoctorsDataInput | null
  upsert?: SpecialityUpsertWithoutDoctorsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SpecialityWhereUniqueInput | null
}
export type SpecialityUpdateOneWithoutDoctorsInputInputObject =
  | Extract<keyof SpecialityUpdateOneWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SpecialityUpdateWithoutDoctorsDataInput {
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityUpdateWithoutDoctorsDataInputInputObject =
  | Extract<keyof SpecialityUpdateWithoutDoctorsDataInput, string>
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface SpecialityUpsertWithoutDoctorsInput {
  update?: SpecialityUpdateWithoutDoctorsDataInput
  create?: SpecialityCreateWithoutDoctorsInput
}
export type SpecialityUpsertWithoutDoctorsInputInputObject =
  | Extract<keyof SpecialityUpsertWithoutDoctorsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface HospitalUpdateManyWithoutDoctorsInput {
  create?: HospitalCreateWithoutDoctorsInput[]
  delete?: HospitalWhereUniqueInput[]
  connect?: HospitalWhereUniqueInput[]
  set?: HospitalWhereUniqueInput[]
  disconnect?: HospitalWhereUniqueInput[]
  update?: HospitalUpdateWithWhereUniqueWithoutDoctorsInput[]
  upsert?: HospitalUpsertWithWhereUniqueWithoutDoctorsInput[]
  deleteMany?: HospitalScalarWhereInput[]
  updateMany?: HospitalUpdateManyWithWhereNestedInput[]
}
export type HospitalUpdateManyWithoutDoctorsInputInputObject =
  | Extract<keyof HospitalUpdateManyWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface HospitalUpdateWithWhereUniqueWithoutDoctorsInput {
  where?: HospitalWhereUniqueInput
  data?: HospitalUpdateWithoutDoctorsDataInput
}
export type HospitalUpdateWithWhereUniqueWithoutDoctorsInputInputObject =
  | Extract<keyof HospitalUpdateWithWhereUniqueWithoutDoctorsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface HospitalUpdateWithoutDoctorsDataInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  city?: CityUpdateOneWithoutHospitalInput | null
  countryId?: CountryUpdateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  insurances?: InsuranceUpdateManyWithoutHospitalsInput | null
  createdDate?: string | null
}
export type HospitalUpdateWithoutDoctorsDataInputInputObject =
  | Extract<keyof HospitalUpdateWithoutDoctorsDataInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface CityUpdateOneWithoutHospitalInput {
  create?: CityCreateWithoutHospitalInput | null
  update?: CityUpdateWithoutHospitalDataInput | null
  upsert?: CityUpsertWithoutHospitalInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CityWhereUniqueInput | null
}
export type CityUpdateOneWithoutHospitalInputInputObject =
  | Extract<keyof CityUpdateOneWithoutHospitalInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CityUpdateWithoutHospitalDataInput {
  city?: string | null
  cityArabic?: string | null
  countryId?: number | null
}
export type CityUpdateWithoutHospitalDataInputInputObject =
  | Extract<keyof CityUpdateWithoutHospitalDataInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  
export interface CityUpsertWithoutHospitalInput {
  update?: CityUpdateWithoutHospitalDataInput
  create?: CityCreateWithoutHospitalInput
}
export type CityUpsertWithoutHospitalInputInputObject =
  | Extract<keyof CityUpsertWithoutHospitalInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CountryUpdateOneInput {
  create?: CountryCreateInput | null
  update?: CountryUpdateDataInput | null
  upsert?: CountryUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CountryWhereUniqueInput | null
}
export type CountryUpdateOneInputInputObject =
  | Extract<keyof CountryUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CountryUpdateDataInput {
  country?: string | null
  countryArabic?: string | null
}
export type CountryUpdateDataInputInputObject =
  | Extract<keyof CountryUpdateDataInput, string>
  | { name: 'country', alias?: string  } 
  | { name: 'countryArabic', alias?: string  } 
  
export interface CountryUpsertNestedInput {
  update?: CountryUpdateDataInput
  create?: CountryCreateInput
}
export type CountryUpsertNestedInputInputObject =
  | Extract<keyof CountryUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InsuranceUpdateManyWithoutHospitalsInput {
  create?: InsuranceCreateWithoutHospitalsInput[]
  delete?: InsuranceWhereUniqueInput[]
  connect?: InsuranceWhereUniqueInput[]
  set?: InsuranceWhereUniqueInput[]
  disconnect?: InsuranceWhereUniqueInput[]
  update?: InsuranceUpdateWithWhereUniqueWithoutHospitalsInput[]
  upsert?: InsuranceUpsertWithWhereUniqueWithoutHospitalsInput[]
  deleteMany?: InsuranceScalarWhereInput[]
  updateMany?: InsuranceUpdateManyWithWhereNestedInput[]
}
export type InsuranceUpdateManyWithoutHospitalsInputInputObject =
  | Extract<keyof InsuranceUpdateManyWithoutHospitalsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface InsuranceUpdateWithWhereUniqueWithoutHospitalsInput {
  where?: InsuranceWhereUniqueInput
  data?: InsuranceUpdateWithoutHospitalsDataInput
}
export type InsuranceUpdateWithWhereUniqueWithoutHospitalsInputInputObject =
  | Extract<keyof InsuranceUpdateWithWhereUniqueWithoutHospitalsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface InsuranceUpdateWithoutHospitalsDataInput {
  countryId?: number | null
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceUpdateWithoutHospitalsDataInputInputObject =
  | Extract<keyof InsuranceUpdateWithoutHospitalsDataInput, string>
  | { name: 'countryId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface InsuranceUpsertWithWhereUniqueWithoutHospitalsInput {
  where?: InsuranceWhereUniqueInput
  update?: InsuranceUpdateWithoutHospitalsDataInput
  create?: InsuranceCreateWithoutHospitalsInput
}
export type InsuranceUpsertWithWhereUniqueWithoutHospitalsInputInputObject =
  | Extract<keyof InsuranceUpsertWithWhereUniqueWithoutHospitalsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InsuranceScalarWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  countryId?: number | null
  countryId_not?: number | null
  countryId_in?: number[]
  countryId_not_in?: number[]
  countryId_lt?: number | null
  countryId_lte?: number | null
  countryId_gt?: number | null
  countryId_gte?: number | null
  insurance?: string | null
  insurance_not?: string | null
  insurance_in?: string[]
  insurance_not_in?: string[]
  insurance_lt?: string | null
  insurance_lte?: string | null
  insurance_gt?: string | null
  insurance_gte?: string | null
  insurance_contains?: string | null
  insurance_not_contains?: string | null
  insurance_starts_with?: string | null
  insurance_not_starts_with?: string | null
  insurance_ends_with?: string | null
  insurance_not_ends_with?: string | null
  insuranceArabic?: string | null
  insuranceArabic_not?: string | null
  insuranceArabic_in?: string[]
  insuranceArabic_not_in?: string[]
  insuranceArabic_lt?: string | null
  insuranceArabic_lte?: string | null
  insuranceArabic_gt?: string | null
  insuranceArabic_gte?: string | null
  insuranceArabic_contains?: string | null
  insuranceArabic_not_contains?: string | null
  insuranceArabic_starts_with?: string | null
  insuranceArabic_not_starts_with?: string | null
  insuranceArabic_ends_with?: string | null
  insuranceArabic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: InsuranceScalarWhereInput[]
  OR?: InsuranceScalarWhereInput[]
  NOT?: InsuranceScalarWhereInput[]
}
export type InsuranceScalarWhereInputInputObject =
  | Extract<keyof InsuranceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'countryId_not', alias?: string  } 
  | { name: 'countryId_in', alias?: string  } 
  | { name: 'countryId_not_in', alias?: string  } 
  | { name: 'countryId_lt', alias?: string  } 
  | { name: 'countryId_lte', alias?: string  } 
  | { name: 'countryId_gt', alias?: string  } 
  | { name: 'countryId_gte', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insurance_not', alias?: string  } 
  | { name: 'insurance_in', alias?: string  } 
  | { name: 'insurance_not_in', alias?: string  } 
  | { name: 'insurance_lt', alias?: string  } 
  | { name: 'insurance_lte', alias?: string  } 
  | { name: 'insurance_gt', alias?: string  } 
  | { name: 'insurance_gte', alias?: string  } 
  | { name: 'insurance_contains', alias?: string  } 
  | { name: 'insurance_not_contains', alias?: string  } 
  | { name: 'insurance_starts_with', alias?: string  } 
  | { name: 'insurance_not_starts_with', alias?: string  } 
  | { name: 'insurance_ends_with', alias?: string  } 
  | { name: 'insurance_not_ends_with', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  | { name: 'insuranceArabic_not', alias?: string  } 
  | { name: 'insuranceArabic_in', alias?: string  } 
  | { name: 'insuranceArabic_not_in', alias?: string  } 
  | { name: 'insuranceArabic_lt', alias?: string  } 
  | { name: 'insuranceArabic_lte', alias?: string  } 
  | { name: 'insuranceArabic_gt', alias?: string  } 
  | { name: 'insuranceArabic_gte', alias?: string  } 
  | { name: 'insuranceArabic_contains', alias?: string  } 
  | { name: 'insuranceArabic_not_contains', alias?: string  } 
  | { name: 'insuranceArabic_starts_with', alias?: string  } 
  | { name: 'insuranceArabic_not_starts_with', alias?: string  } 
  | { name: 'insuranceArabic_ends_with', alias?: string  } 
  | { name: 'insuranceArabic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InsuranceUpdateManyWithWhereNestedInput {
  where?: InsuranceScalarWhereInput
  data?: InsuranceUpdateManyDataInput
}
export type InsuranceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof InsuranceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface InsuranceUpdateManyDataInput {
  countryId?: number | null
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceUpdateManyDataInputInputObject =
  | Extract<keyof InsuranceUpdateManyDataInput, string>
  | { name: 'countryId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface HospitalUpsertWithWhereUniqueWithoutDoctorsInput {
  where?: HospitalWhereUniqueInput
  update?: HospitalUpdateWithoutDoctorsDataInput
  create?: HospitalCreateWithoutDoctorsInput
}
export type HospitalUpsertWithWhereUniqueWithoutDoctorsInputInputObject =
  | Extract<keyof HospitalUpsertWithWhereUniqueWithoutDoctorsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface HospitalScalarWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  addressArabic?: string | null
  addressArabic_not?: string | null
  addressArabic_in?: string[]
  addressArabic_not_in?: string[]
  addressArabic_lt?: string | null
  addressArabic_lte?: string | null
  addressArabic_gt?: string | null
  addressArabic_gte?: string | null
  addressArabic_contains?: string | null
  addressArabic_not_contains?: string | null
  addressArabic_starts_with?: string | null
  addressArabic_not_starts_with?: string | null
  addressArabic_ends_with?: string | null
  addressArabic_not_ends_with?: string | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  hospital?: string | null
  hospital_not?: string | null
  hospital_in?: string[]
  hospital_not_in?: string[]
  hospital_lt?: string | null
  hospital_lte?: string | null
  hospital_gt?: string | null
  hospital_gte?: string | null
  hospital_contains?: string | null
  hospital_not_contains?: string | null
  hospital_starts_with?: string | null
  hospital_not_starts_with?: string | null
  hospital_ends_with?: string | null
  hospital_not_ends_with?: string | null
  hospitalArabic?: string | null
  hospitalArabic_not?: string | null
  hospitalArabic_in?: string[]
  hospitalArabic_not_in?: string[]
  hospitalArabic_lt?: string | null
  hospitalArabic_lte?: string | null
  hospitalArabic_gt?: string | null
  hospitalArabic_gte?: string | null
  hospitalArabic_contains?: string | null
  hospitalArabic_not_contains?: string | null
  hospitalArabic_starts_with?: string | null
  hospitalArabic_not_starts_with?: string | null
  hospitalArabic_ends_with?: string | null
  hospitalArabic_not_ends_with?: string | null
  language?: string | null
  language_not?: string | null
  language_in?: string[]
  language_not_in?: string[]
  language_lt?: string | null
  language_lte?: string | null
  language_gt?: string | null
  language_gte?: string | null
  language_contains?: string | null
  language_not_contains?: string | null
  language_starts_with?: string | null
  language_not_starts_with?: string | null
  language_ends_with?: string | null
  language_not_ends_with?: string | null
  latitude?: string | null
  latitude_not?: string | null
  latitude_in?: string[]
  latitude_not_in?: string[]
  latitude_lt?: string | null
  latitude_lte?: string | null
  latitude_gt?: string | null
  latitude_gte?: string | null
  latitude_contains?: string | null
  latitude_not_contains?: string | null
  latitude_starts_with?: string | null
  latitude_not_starts_with?: string | null
  latitude_ends_with?: string | null
  latitude_not_ends_with?: string | null
  location?: string | null
  location_not?: string | null
  location_in?: string[]
  location_not_in?: string[]
  location_lt?: string | null
  location_lte?: string | null
  location_gt?: string | null
  location_gte?: string | null
  location_contains?: string | null
  location_not_contains?: string | null
  location_starts_with?: string | null
  location_not_starts_with?: string | null
  location_ends_with?: string | null
  location_not_ends_with?: string | null
  logo?: string | null
  logo_not?: string | null
  logo_in?: string[]
  logo_not_in?: string[]
  logo_lt?: string | null
  logo_lte?: string | null
  logo_gt?: string | null
  logo_gte?: string | null
  logo_contains?: string | null
  logo_not_contains?: string | null
  logo_starts_with?: string | null
  logo_not_starts_with?: string | null
  logo_ends_with?: string | null
  logo_not_ends_with?: string | null
  longitude?: string | null
  longitude_not?: string | null
  longitude_in?: string[]
  longitude_not_in?: string[]
  longitude_lt?: string | null
  longitude_lte?: string | null
  longitude_gt?: string | null
  longitude_gte?: string | null
  longitude_contains?: string | null
  longitude_not_contains?: string | null
  longitude_starts_with?: string | null
  longitude_not_starts_with?: string | null
  longitude_ends_with?: string | null
  longitude_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  phone1?: string | null
  phone1_not?: string | null
  phone1_in?: string[]
  phone1_not_in?: string[]
  phone1_lt?: string | null
  phone1_lte?: string | null
  phone1_gt?: string | null
  phone1_gte?: string | null
  phone1_contains?: string | null
  phone1_not_contains?: string | null
  phone1_starts_with?: string | null
  phone1_not_starts_with?: string | null
  phone1_ends_with?: string | null
  phone1_not_ends_with?: string | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  uniqeId?: string | null
  uniqeId_not?: string | null
  uniqeId_in?: string[]
  uniqeId_not_in?: string[]
  uniqeId_lt?: string | null
  uniqeId_lte?: string | null
  uniqeId_gt?: string | null
  uniqeId_gte?: string | null
  uniqeId_contains?: string | null
  uniqeId_not_contains?: string | null
  uniqeId_starts_with?: string | null
  uniqeId_not_starts_with?: string | null
  uniqeId_ends_with?: string | null
  uniqeId_not_ends_with?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  AND?: HospitalScalarWhereInput[]
  OR?: HospitalScalarWhereInput[]
  NOT?: HospitalScalarWhereInput[]
}
export type HospitalScalarWhereInputInputObject =
  | Extract<keyof HospitalScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'address_not', alias?: string  } 
  | { name: 'address_in', alias?: string  } 
  | { name: 'address_not_in', alias?: string  } 
  | { name: 'address_lt', alias?: string  } 
  | { name: 'address_lte', alias?: string  } 
  | { name: 'address_gt', alias?: string  } 
  | { name: 'address_gte', alias?: string  } 
  | { name: 'address_contains', alias?: string  } 
  | { name: 'address_not_contains', alias?: string  } 
  | { name: 'address_starts_with', alias?: string  } 
  | { name: 'address_not_starts_with', alias?: string  } 
  | { name: 'address_ends_with', alias?: string  } 
  | { name: 'address_not_ends_with', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'addressArabic_not', alias?: string  } 
  | { name: 'addressArabic_in', alias?: string  } 
  | { name: 'addressArabic_not_in', alias?: string  } 
  | { name: 'addressArabic_lt', alias?: string  } 
  | { name: 'addressArabic_lte', alias?: string  } 
  | { name: 'addressArabic_gt', alias?: string  } 
  | { name: 'addressArabic_gte', alias?: string  } 
  | { name: 'addressArabic_contains', alias?: string  } 
  | { name: 'addressArabic_not_contains', alias?: string  } 
  | { name: 'addressArabic_starts_with', alias?: string  } 
  | { name: 'addressArabic_not_starts_with', alias?: string  } 
  | { name: 'addressArabic_ends_with', alias?: string  } 
  | { name: 'addressArabic_not_ends_with', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospital_not', alias?: string  } 
  | { name: 'hospital_in', alias?: string  } 
  | { name: 'hospital_not_in', alias?: string  } 
  | { name: 'hospital_lt', alias?: string  } 
  | { name: 'hospital_lte', alias?: string  } 
  | { name: 'hospital_gt', alias?: string  } 
  | { name: 'hospital_gte', alias?: string  } 
  | { name: 'hospital_contains', alias?: string  } 
  | { name: 'hospital_not_contains', alias?: string  } 
  | { name: 'hospital_starts_with', alias?: string  } 
  | { name: 'hospital_not_starts_with', alias?: string  } 
  | { name: 'hospital_ends_with', alias?: string  } 
  | { name: 'hospital_not_ends_with', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'hospitalArabic_not', alias?: string  } 
  | { name: 'hospitalArabic_in', alias?: string  } 
  | { name: 'hospitalArabic_not_in', alias?: string  } 
  | { name: 'hospitalArabic_lt', alias?: string  } 
  | { name: 'hospitalArabic_lte', alias?: string  } 
  | { name: 'hospitalArabic_gt', alias?: string  } 
  | { name: 'hospitalArabic_gte', alias?: string  } 
  | { name: 'hospitalArabic_contains', alias?: string  } 
  | { name: 'hospitalArabic_not_contains', alias?: string  } 
  | { name: 'hospitalArabic_starts_with', alias?: string  } 
  | { name: 'hospitalArabic_not_starts_with', alias?: string  } 
  | { name: 'hospitalArabic_ends_with', alias?: string  } 
  | { name: 'hospitalArabic_not_ends_with', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'language_not', alias?: string  } 
  | { name: 'language_in', alias?: string  } 
  | { name: 'language_not_in', alias?: string  } 
  | { name: 'language_lt', alias?: string  } 
  | { name: 'language_lte', alias?: string  } 
  | { name: 'language_gt', alias?: string  } 
  | { name: 'language_gte', alias?: string  } 
  | { name: 'language_contains', alias?: string  } 
  | { name: 'language_not_contains', alias?: string  } 
  | { name: 'language_starts_with', alias?: string  } 
  | { name: 'language_not_starts_with', alias?: string  } 
  | { name: 'language_ends_with', alias?: string  } 
  | { name: 'language_not_ends_with', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'latitude_not', alias?: string  } 
  | { name: 'latitude_in', alias?: string  } 
  | { name: 'latitude_not_in', alias?: string  } 
  | { name: 'latitude_lt', alias?: string  } 
  | { name: 'latitude_lte', alias?: string  } 
  | { name: 'latitude_gt', alias?: string  } 
  | { name: 'latitude_gte', alias?: string  } 
  | { name: 'latitude_contains', alias?: string  } 
  | { name: 'latitude_not_contains', alias?: string  } 
  | { name: 'latitude_starts_with', alias?: string  } 
  | { name: 'latitude_not_starts_with', alias?: string  } 
  | { name: 'latitude_ends_with', alias?: string  } 
  | { name: 'latitude_not_ends_with', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'location_not', alias?: string  } 
  | { name: 'location_in', alias?: string  } 
  | { name: 'location_not_in', alias?: string  } 
  | { name: 'location_lt', alias?: string  } 
  | { name: 'location_lte', alias?: string  } 
  | { name: 'location_gt', alias?: string  } 
  | { name: 'location_gte', alias?: string  } 
  | { name: 'location_contains', alias?: string  } 
  | { name: 'location_not_contains', alias?: string  } 
  | { name: 'location_starts_with', alias?: string  } 
  | { name: 'location_not_starts_with', alias?: string  } 
  | { name: 'location_ends_with', alias?: string  } 
  | { name: 'location_not_ends_with', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'logo_not', alias?: string  } 
  | { name: 'logo_in', alias?: string  } 
  | { name: 'logo_not_in', alias?: string  } 
  | { name: 'logo_lt', alias?: string  } 
  | { name: 'logo_lte', alias?: string  } 
  | { name: 'logo_gt', alias?: string  } 
  | { name: 'logo_gte', alias?: string  } 
  | { name: 'logo_contains', alias?: string  } 
  | { name: 'logo_not_contains', alias?: string  } 
  | { name: 'logo_starts_with', alias?: string  } 
  | { name: 'logo_not_starts_with', alias?: string  } 
  | { name: 'logo_ends_with', alias?: string  } 
  | { name: 'logo_not_ends_with', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'longitude_not', alias?: string  } 
  | { name: 'longitude_in', alias?: string  } 
  | { name: 'longitude_not_in', alias?: string  } 
  | { name: 'longitude_lt', alias?: string  } 
  | { name: 'longitude_lte', alias?: string  } 
  | { name: 'longitude_gt', alias?: string  } 
  | { name: 'longitude_gte', alias?: string  } 
  | { name: 'longitude_contains', alias?: string  } 
  | { name: 'longitude_not_contains', alias?: string  } 
  | { name: 'longitude_starts_with', alias?: string  } 
  | { name: 'longitude_not_starts_with', alias?: string  } 
  | { name: 'longitude_ends_with', alias?: string  } 
  | { name: 'longitude_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'phone1_not', alias?: string  } 
  | { name: 'phone1_in', alias?: string  } 
  | { name: 'phone1_not_in', alias?: string  } 
  | { name: 'phone1_lt', alias?: string  } 
  | { name: 'phone1_lte', alias?: string  } 
  | { name: 'phone1_gt', alias?: string  } 
  | { name: 'phone1_gte', alias?: string  } 
  | { name: 'phone1_contains', alias?: string  } 
  | { name: 'phone1_not_contains', alias?: string  } 
  | { name: 'phone1_starts_with', alias?: string  } 
  | { name: 'phone1_not_starts_with', alias?: string  } 
  | { name: 'phone1_ends_with', alias?: string  } 
  | { name: 'phone1_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'uniqeId_not', alias?: string  } 
  | { name: 'uniqeId_in', alias?: string  } 
  | { name: 'uniqeId_not_in', alias?: string  } 
  | { name: 'uniqeId_lt', alias?: string  } 
  | { name: 'uniqeId_lte', alias?: string  } 
  | { name: 'uniqeId_gt', alias?: string  } 
  | { name: 'uniqeId_gte', alias?: string  } 
  | { name: 'uniqeId_contains', alias?: string  } 
  | { name: 'uniqeId_not_contains', alias?: string  } 
  | { name: 'uniqeId_starts_with', alias?: string  } 
  | { name: 'uniqeId_not_starts_with', alias?: string  } 
  | { name: 'uniqeId_ends_with', alias?: string  } 
  | { name: 'uniqeId_not_ends_with', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalUpdateManyWithWhereNestedInput {
  where?: HospitalScalarWhereInput
  data?: HospitalUpdateManyDataInput
}
export type HospitalUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof HospitalUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface HospitalUpdateManyDataInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  createdDate?: string | null
}
export type HospitalUpdateManyDataInputInputObject =
  | Extract<keyof HospitalUpdateManyDataInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorUpsertNestedInput {
  update?: DoctorUpdateDataInput
  create?: DoctorCreateInput
}
export type DoctorUpsertNestedInputInputObject =
  | Extract<keyof DoctorUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorSheduleTimeUpdateOneInput {
  create?: DoctorSheduleTimeCreateInput | null
  update?: DoctorSheduleTimeUpdateDataInput | null
  upsert?: DoctorSheduleTimeUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: DoctorSheduleTimeWhereUniqueInput | null
}
export type DoctorSheduleTimeUpdateOneInputInputObject =
  | Extract<keyof DoctorSheduleTimeUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorSheduleTimeUpdateDataInput {
  drSheduleId?: number | null
  scheduleTime?: number | null
  status?: number | null
}
export type DoctorSheduleTimeUpdateDataInputInputObject =
  | Extract<keyof DoctorSheduleTimeUpdateDataInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorSheduleTimeUpsertNestedInput {
  update?: DoctorSheduleTimeUpdateDataInput
  create?: DoctorSheduleTimeCreateInput
}
export type DoctorSheduleTimeUpsertNestedInputInputObject =
  | Extract<keyof DoctorSheduleTimeUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface HospitalUpdateOneInput {
  create?: HospitalCreateInput | null
  update?: HospitalUpdateDataInput | null
  upsert?: HospitalUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: HospitalWhereUniqueInput | null
}
export type HospitalUpdateOneInputInputObject =
  | Extract<keyof HospitalUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface HospitalUpdateDataInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  city?: CityUpdateOneWithoutHospitalInput | null
  countryId?: CountryUpdateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  doctors?: DoctorUpdateManyWithoutHospitalInput | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  insurances?: InsuranceUpdateManyWithoutHospitalsInput | null
  createdDate?: string | null
}
export type HospitalUpdateDataInputInputObject =
  | Extract<keyof HospitalUpdateDataInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorUpdateManyWithoutHospitalInput {
  create?: DoctorCreateWithoutHospitalInput[]
  delete?: DoctorWhereUniqueInput[]
  connect?: DoctorWhereUniqueInput[]
  set?: DoctorWhereUniqueInput[]
  disconnect?: DoctorWhereUniqueInput[]
  update?: DoctorUpdateWithWhereUniqueWithoutHospitalInput[]
  upsert?: DoctorUpsertWithWhereUniqueWithoutHospitalInput[]
  deleteMany?: DoctorScalarWhereInput[]
  updateMany?: DoctorUpdateManyWithWhereNestedInput[]
}
export type DoctorUpdateManyWithoutHospitalInputInputObject =
  | Extract<keyof DoctorUpdateManyWithoutHospitalInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DoctorUpdateWithWhereUniqueWithoutHospitalInput {
  where?: DoctorWhereUniqueInput
  data?: DoctorUpdateWithoutHospitalDataInput
}
export type DoctorUpdateWithWhereUniqueWithoutHospitalInputInputObject =
  | Extract<keyof DoctorUpdateWithWhereUniqueWithoutHospitalInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DoctorUpdateWithoutHospitalDataInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  specialities?: SpecialityUpdateOneWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateWithoutHospitalDataInputInputObject =
  | Extract<keyof DoctorUpdateWithoutHospitalDataInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorUpsertWithWhereUniqueWithoutHospitalInput {
  where?: DoctorWhereUniqueInput
  update?: DoctorUpdateWithoutHospitalDataInput
  create?: DoctorCreateWithoutHospitalInput
}
export type DoctorUpsertWithWhereUniqueWithoutHospitalInputInputObject =
  | Extract<keyof DoctorUpsertWithWhereUniqueWithoutHospitalInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorScalarWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  apiKey?: string | null
  apiKey_not?: string | null
  apiKey_in?: string[]
  apiKey_not_in?: string[]
  apiKey_lt?: string | null
  apiKey_lte?: string | null
  apiKey_gt?: string | null
  apiKey_gte?: string | null
  apiKey_contains?: string | null
  apiKey_not_contains?: string | null
  apiKey_starts_with?: string | null
  apiKey_not_starts_with?: string | null
  apiKey_ends_with?: string | null
  apiKey_not_ends_with?: string | null
  designation?: string | null
  designation_not?: string | null
  designation_in?: string[]
  designation_not_in?: string[]
  designation_lt?: string | null
  designation_lte?: string | null
  designation_gt?: string | null
  designation_gte?: string | null
  designation_contains?: string | null
  designation_not_contains?: string | null
  designation_starts_with?: string | null
  designation_not_starts_with?: string | null
  designation_ends_with?: string | null
  designation_not_ends_with?: string | null
  doctorCv?: string | null
  doctorCv_not?: string | null
  doctorCv_in?: string[]
  doctorCv_not_in?: string[]
  doctorCv_lt?: string | null
  doctorCv_lte?: string | null
  doctorCv_gt?: string | null
  doctorCv_gte?: string | null
  doctorCv_contains?: string | null
  doctorCv_not_contains?: string | null
  doctorCv_starts_with?: string | null
  doctorCv_not_starts_with?: string | null
  doctorCv_ends_with?: string | null
  doctorCv_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  mohcard?: string | null
  mohcard_not?: string | null
  mohcard_in?: string[]
  mohcard_not_in?: string[]
  mohcard_lt?: string | null
  mohcard_lte?: string | null
  mohcard_gt?: string | null
  mohcard_gte?: string | null
  mohcard_contains?: string | null
  mohcard_not_contains?: string | null
  mohcard_starts_with?: string | null
  mohcard_not_starts_with?: string | null
  mohcard_ends_with?: string | null
  mohcard_not_ends_with?: string | null
  mohId?: string | null
  mohId_not?: string | null
  mohId_in?: string[]
  mohId_not_in?: string[]
  mohId_lt?: string | null
  mohId_lte?: string | null
  mohId_gt?: string | null
  mohId_gte?: string | null
  mohId_contains?: string | null
  mohId_not_contains?: string | null
  mohId_starts_with?: string | null
  mohId_not_starts_with?: string | null
  mohId_ends_with?: string | null
  mohId_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  nameArabic?: string | null
  nameArabic_not?: string | null
  nameArabic_in?: string[]
  nameArabic_not_in?: string[]
  nameArabic_lt?: string | null
  nameArabic_lte?: string | null
  nameArabic_gt?: string | null
  nameArabic_gte?: string | null
  nameArabic_contains?: string | null
  nameArabic_not_contains?: string | null
  nameArabic_starts_with?: string | null
  nameArabic_not_starts_with?: string | null
  nameArabic_ends_with?: string | null
  nameArabic_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  fees?: string | null
  fees_not?: string | null
  fees_in?: string[]
  fees_not_in?: string[]
  fees_lt?: string | null
  fees_lte?: string | null
  fees_gt?: string | null
  fees_gte?: string | null
  fees_contains?: string | null
  fees_not_contains?: string | null
  fees_starts_with?: string | null
  fees_not_starts_with?: string | null
  fees_ends_with?: string | null
  fees_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  specialityId?: number | null
  specialityId_not?: number | null
  specialityId_in?: number[]
  specialityId_not_in?: number[]
  specialityId_lt?: number | null
  specialityId_lte?: number | null
  specialityId_gt?: number | null
  specialityId_gte?: number | null
  status?: number | null
  status_not?: number | null
  status_in?: number[]
  status_not_in?: number[]
  status_lt?: number | null
  status_lte?: number | null
  status_gt?: number | null
  status_gte?: number | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  createdDate?: string | null
  createdDate_not?: string | null
  createdDate_in?: string[]
  createdDate_not_in?: string[]
  createdDate_lt?: string | null
  createdDate_lte?: string | null
  createdDate_gt?: string | null
  createdDate_gte?: string | null
  AND?: DoctorScalarWhereInput[]
  OR?: DoctorScalarWhereInput[]
  NOT?: DoctorScalarWhereInput[]
}
export type DoctorScalarWhereInputInputObject =
  | Extract<keyof DoctorScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'apiKey_not', alias?: string  } 
  | { name: 'apiKey_in', alias?: string  } 
  | { name: 'apiKey_not_in', alias?: string  } 
  | { name: 'apiKey_lt', alias?: string  } 
  | { name: 'apiKey_lte', alias?: string  } 
  | { name: 'apiKey_gt', alias?: string  } 
  | { name: 'apiKey_gte', alias?: string  } 
  | { name: 'apiKey_contains', alias?: string  } 
  | { name: 'apiKey_not_contains', alias?: string  } 
  | { name: 'apiKey_starts_with', alias?: string  } 
  | { name: 'apiKey_not_starts_with', alias?: string  } 
  | { name: 'apiKey_ends_with', alias?: string  } 
  | { name: 'apiKey_not_ends_with', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'designation_not', alias?: string  } 
  | { name: 'designation_in', alias?: string  } 
  | { name: 'designation_not_in', alias?: string  } 
  | { name: 'designation_lt', alias?: string  } 
  | { name: 'designation_lte', alias?: string  } 
  | { name: 'designation_gt', alias?: string  } 
  | { name: 'designation_gte', alias?: string  } 
  | { name: 'designation_contains', alias?: string  } 
  | { name: 'designation_not_contains', alias?: string  } 
  | { name: 'designation_starts_with', alias?: string  } 
  | { name: 'designation_not_starts_with', alias?: string  } 
  | { name: 'designation_ends_with', alias?: string  } 
  | { name: 'designation_not_ends_with', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorCv_not', alias?: string  } 
  | { name: 'doctorCv_in', alias?: string  } 
  | { name: 'doctorCv_not_in', alias?: string  } 
  | { name: 'doctorCv_lt', alias?: string  } 
  | { name: 'doctorCv_lte', alias?: string  } 
  | { name: 'doctorCv_gt', alias?: string  } 
  | { name: 'doctorCv_gte', alias?: string  } 
  | { name: 'doctorCv_contains', alias?: string  } 
  | { name: 'doctorCv_not_contains', alias?: string  } 
  | { name: 'doctorCv_starts_with', alias?: string  } 
  | { name: 'doctorCv_not_starts_with', alias?: string  } 
  | { name: 'doctorCv_ends_with', alias?: string  } 
  | { name: 'doctorCv_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohcard_not', alias?: string  } 
  | { name: 'mohcard_in', alias?: string  } 
  | { name: 'mohcard_not_in', alias?: string  } 
  | { name: 'mohcard_lt', alias?: string  } 
  | { name: 'mohcard_lte', alias?: string  } 
  | { name: 'mohcard_gt', alias?: string  } 
  | { name: 'mohcard_gte', alias?: string  } 
  | { name: 'mohcard_contains', alias?: string  } 
  | { name: 'mohcard_not_contains', alias?: string  } 
  | { name: 'mohcard_starts_with', alias?: string  } 
  | { name: 'mohcard_not_starts_with', alias?: string  } 
  | { name: 'mohcard_ends_with', alias?: string  } 
  | { name: 'mohcard_not_ends_with', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'mohId_not', alias?: string  } 
  | { name: 'mohId_in', alias?: string  } 
  | { name: 'mohId_not_in', alias?: string  } 
  | { name: 'mohId_lt', alias?: string  } 
  | { name: 'mohId_lte', alias?: string  } 
  | { name: 'mohId_gt', alias?: string  } 
  | { name: 'mohId_gte', alias?: string  } 
  | { name: 'mohId_contains', alias?: string  } 
  | { name: 'mohId_not_contains', alias?: string  } 
  | { name: 'mohId_starts_with', alias?: string  } 
  | { name: 'mohId_not_starts_with', alias?: string  } 
  | { name: 'mohId_ends_with', alias?: string  } 
  | { name: 'mohId_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'nameArabic_not', alias?: string  } 
  | { name: 'nameArabic_in', alias?: string  } 
  | { name: 'nameArabic_not_in', alias?: string  } 
  | { name: 'nameArabic_lt', alias?: string  } 
  | { name: 'nameArabic_lte', alias?: string  } 
  | { name: 'nameArabic_gt', alias?: string  } 
  | { name: 'nameArabic_gte', alias?: string  } 
  | { name: 'nameArabic_contains', alias?: string  } 
  | { name: 'nameArabic_not_contains', alias?: string  } 
  | { name: 'nameArabic_starts_with', alias?: string  } 
  | { name: 'nameArabic_not_starts_with', alias?: string  } 
  | { name: 'nameArabic_ends_with', alias?: string  } 
  | { name: 'nameArabic_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'fees_not', alias?: string  } 
  | { name: 'fees_in', alias?: string  } 
  | { name: 'fees_not_in', alias?: string  } 
  | { name: 'fees_lt', alias?: string  } 
  | { name: 'fees_lte', alias?: string  } 
  | { name: 'fees_gt', alias?: string  } 
  | { name: 'fees_gte', alias?: string  } 
  | { name: 'fees_contains', alias?: string  } 
  | { name: 'fees_not_contains', alias?: string  } 
  | { name: 'fees_starts_with', alias?: string  } 
  | { name: 'fees_not_starts_with', alias?: string  } 
  | { name: 'fees_ends_with', alias?: string  } 
  | { name: 'fees_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialityId_not', alias?: string  } 
  | { name: 'specialityId_in', alias?: string  } 
  | { name: 'specialityId_not_in', alias?: string  } 
  | { name: 'specialityId_lt', alias?: string  } 
  | { name: 'specialityId_lte', alias?: string  } 
  | { name: 'specialityId_gt', alias?: string  } 
  | { name: 'specialityId_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'createdDate_not', alias?: string  } 
  | { name: 'createdDate_in', alias?: string  } 
  | { name: 'createdDate_not_in', alias?: string  } 
  | { name: 'createdDate_lt', alias?: string  } 
  | { name: 'createdDate_lte', alias?: string  } 
  | { name: 'createdDate_gt', alias?: string  } 
  | { name: 'createdDate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorUpdateManyWithWhereNestedInput {
  where?: DoctorScalarWhereInput
  data?: DoctorUpdateManyDataInput
}
export type DoctorUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof DoctorUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DoctorUpdateManyDataInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateManyDataInputInputObject =
  | Extract<keyof DoctorUpdateManyDataInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalUpsertNestedInput {
  update?: HospitalUpdateDataInput
  create?: HospitalCreateInput
}
export type HospitalUpsertNestedInputInputObject =
  | Extract<keyof HospitalUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptTimeUpdateOneInput {
  create?: OptTimeCreateInput | null
  update?: OptTimeUpdateDataInput | null
  upsert?: OptTimeUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OptTimeWhereUniqueInput | null
}
export type OptTimeUpdateOneInputInputObject =
  | Extract<keyof OptTimeUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptTimeUpdateDataInput {
  fifteenMins?: string | null
  thirtyMins?: string | null
  twentyMins?: string | null
}
export type OptTimeUpdateDataInputInputObject =
  | Extract<keyof OptTimeUpdateDataInput, string>
  | { name: 'fifteenMins', alias?: string  } 
  | { name: 'thirtyMins', alias?: string  } 
  | { name: 'twentyMins', alias?: string  } 
  
export interface OptTimeUpsertNestedInput {
  update?: OptTimeUpdateDataInput
  create?: OptTimeCreateInput
}
export type OptTimeUpsertNestedInputInputObject =
  | Extract<keyof OptTimeUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PatientUpdateOneInput {
  create?: PatientCreateInput | null
  update?: PatientUpdateDataInput | null
  upsert?: PatientUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PatientWhereUniqueInput | null
}
export type PatientUpdateOneInputInputObject =
  | Extract<keyof PatientUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PatientUpdateDataInput {
  age?: number | null
  apiKey?: string | null
  createdDate?: string | null
  dob?: string | null
  email?: string | null
  gender?: string | null
  lastAction?: string | null
  lastSeen?: string | null
  mailSubs?: number | null
  mobile?: string | null
  name?: string | null
  password?: string | null
  status?: number | null
  uniqeId?: string | null
}
export type PatientUpdateDataInputInputObject =
  | Extract<keyof PatientUpdateDataInput, string>
  | { name: 'age', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'dob', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastAction', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mailSubs', alias?: string  } 
  | { name: 'mobile', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  
export interface PatientUpsertNestedInput {
  update?: PatientUpdateDataInput
  create?: PatientCreateInput
}
export type PatientUpsertNestedInputInputObject =
  | Extract<keyof PatientUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SheduleTimeUpdateOneInput {
  create?: SheduleTimeCreateInput | null
  update?: SheduleTimeUpdateDataInput | null
  upsert?: SheduleTimeUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SheduleTimeWhereUniqueInput | null
}
export type SheduleTimeUpdateOneInputInputObject =
  | Extract<keyof SheduleTimeUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SheduleTimeUpdateDataInput {
  drSheduleId?: number | null
  scheduleFullDate?: number | null
  sheduleTime?: string | null
  status?: number | null
}
export type SheduleTimeUpdateDataInputInputObject =
  | Extract<keyof SheduleTimeUpdateDataInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleFullDate', alias?: string  } 
  | { name: 'sheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface SheduleTimeUpsertNestedInput {
  update?: SheduleTimeUpdateDataInput
  create?: SheduleTimeCreateInput
}
export type SheduleTimeUpsertNestedInputInputObject =
  | Extract<keyof SheduleTimeUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AppointmentUpdateManyMutationInput {
  apointmentDate?: string | null
  apointmentFulldate?: number | null
  apointmentTime?: string | null
  doctorArabic?: string | null
  doctorName?: string | null
  gender?: string | null
  isRead?: number | null
  phone?: string | null
  phoneCode?: string | null
  status?: number | null
}
export type AppointmentUpdateManyMutationInputInputObject =
  | Extract<keyof AppointmentUpdateManyMutationInput, string>
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface BlogCreateInput {
  id?: number | null
  bannerImage?: string
  createdDate?: string
  hospitalId?: HospitalCreateOneInput | null
  name?: string
  status?: number | null
}
export type BlogCreateInputInputObject =
  | Extract<keyof BlogCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'bannerImage', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface BlogUpdateInput {
  bannerImage?: string | null
  createdDate?: string | null
  hospitalId?: HospitalUpdateOneInput | null
  name?: string | null
  status?: number | null
}
export type BlogUpdateInputInputObject =
  | Extract<keyof BlogUpdateInput, string>
  | { name: 'bannerImage', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface BlogUpdateManyMutationInput {
  bannerImage?: string | null
  createdDate?: string | null
  name?: string | null
  status?: number | null
}
export type BlogUpdateManyMutationInputInputObject =
  | Extract<keyof BlogUpdateManyMutationInput, string>
  | { name: 'bannerImage', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface BlogCommentCreateInput {
  id?: number | null
  commentator?: number
  commentatorName?: string
  comments?: string
  logCreated?: string
  postId?: BlogPostCreateOneInput | null
}
export type BlogCommentCreateInputInputObject =
  | Extract<keyof BlogCommentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'commentator', alias?: string  } 
  | { name: 'commentatorName', alias?: string  } 
  | { name: 'comments', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  
export interface BlogPostCreateOneInput {
  create?: BlogPostCreateInput | null
  connect?: BlogPostWhereUniqueInput | null
}
export type BlogPostCreateOneInputInputObject =
  | Extract<keyof BlogPostCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BlogPostCreateInput {
  id?: number | null
  blogId?: BlogCreateOneInput | null
  hospitalId?: HospitalCreateOneInput | null
  logCreated?: string
  postContent?: string
  postTitle?: string
  status?: number | null
  totalViewers?: number | null
  images?: PostImageCreateManyWithoutPostIdInput | null
}
export type BlogPostCreateInputInputObject =
  | Extract<keyof BlogPostCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  | { name: 'images', alias?: string  } 
  
export interface BlogCreateOneInput {
  create?: BlogCreateInput | null
  connect?: BlogWhereUniqueInput | null
}
export type BlogCreateOneInputInputObject =
  | Extract<keyof BlogCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PostImageCreateManyWithoutPostIdInput {
  create?: PostImageCreateWithoutPostIdInput[]
  connect?: PostImageWhereUniqueInput[]
}
export type PostImageCreateManyWithoutPostIdInputInputObject =
  | Extract<keyof PostImageCreateManyWithoutPostIdInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PostImageCreateWithoutPostIdInput {
  id?: number | null
  isDefault?: number | null
  pic?: string
}
export type PostImageCreateWithoutPostIdInputInputObject =
  | Extract<keyof PostImageCreateWithoutPostIdInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  
export interface BlogCommentUpdateInput {
  commentator?: number | null
  commentatorName?: string | null
  comments?: string | null
  logCreated?: string | null
  postId?: BlogPostUpdateOneInput | null
}
export type BlogCommentUpdateInputInputObject =
  | Extract<keyof BlogCommentUpdateInput, string>
  | { name: 'commentator', alias?: string  } 
  | { name: 'commentatorName', alias?: string  } 
  | { name: 'comments', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  
export interface BlogPostUpdateOneInput {
  create?: BlogPostCreateInput | null
  update?: BlogPostUpdateDataInput | null
  upsert?: BlogPostUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BlogPostWhereUniqueInput | null
}
export type BlogPostUpdateOneInputInputObject =
  | Extract<keyof BlogPostUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BlogPostUpdateDataInput {
  blogId?: BlogUpdateOneInput | null
  hospitalId?: HospitalUpdateOneInput | null
  logCreated?: string | null
  postContent?: string | null
  postTitle?: string | null
  status?: number | null
  totalViewers?: number | null
  images?: PostImageUpdateManyWithoutPostIdInput | null
}
export type BlogPostUpdateDataInputInputObject =
  | Extract<keyof BlogPostUpdateDataInput, string>
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  | { name: 'images', alias?: string  } 
  
export interface BlogUpdateOneInput {
  create?: BlogCreateInput | null
  update?: BlogUpdateDataInput | null
  upsert?: BlogUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BlogWhereUniqueInput | null
}
export type BlogUpdateOneInputInputObject =
  | Extract<keyof BlogUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BlogUpdateDataInput {
  bannerImage?: string | null
  createdDate?: string | null
  hospitalId?: HospitalUpdateOneInput | null
  name?: string | null
  status?: number | null
}
export type BlogUpdateDataInputInputObject =
  | Extract<keyof BlogUpdateDataInput, string>
  | { name: 'bannerImage', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface BlogUpsertNestedInput {
  update?: BlogUpdateDataInput
  create?: BlogCreateInput
}
export type BlogUpsertNestedInputInputObject =
  | Extract<keyof BlogUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostImageUpdateManyWithoutPostIdInput {
  create?: PostImageCreateWithoutPostIdInput[]
  delete?: PostImageWhereUniqueInput[]
  connect?: PostImageWhereUniqueInput[]
  set?: PostImageWhereUniqueInput[]
  disconnect?: PostImageWhereUniqueInput[]
  update?: PostImageUpdateWithWhereUniqueWithoutPostIdInput[]
  upsert?: PostImageUpsertWithWhereUniqueWithoutPostIdInput[]
  deleteMany?: PostImageScalarWhereInput[]
  updateMany?: PostImageUpdateManyWithWhereNestedInput[]
}
export type PostImageUpdateManyWithoutPostIdInputInputObject =
  | Extract<keyof PostImageUpdateManyWithoutPostIdInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PostImageUpdateWithWhereUniqueWithoutPostIdInput {
  where?: PostImageWhereUniqueInput
  data?: PostImageUpdateWithoutPostIdDataInput
}
export type PostImageUpdateWithWhereUniqueWithoutPostIdInputInputObject =
  | Extract<keyof PostImageUpdateWithWhereUniqueWithoutPostIdInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PostImageUpdateWithoutPostIdDataInput {
  isDefault?: number | null
  pic?: string | null
}
export type PostImageUpdateWithoutPostIdDataInputInputObject =
  | Extract<keyof PostImageUpdateWithoutPostIdDataInput, string>
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  
export interface PostImageUpsertWithWhereUniqueWithoutPostIdInput {
  where?: PostImageWhereUniqueInput
  update?: PostImageUpdateWithoutPostIdDataInput
  create?: PostImageCreateWithoutPostIdInput
}
export type PostImageUpsertWithWhereUniqueWithoutPostIdInputInputObject =
  | Extract<keyof PostImageUpsertWithWhereUniqueWithoutPostIdInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostImageScalarWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  isDefault?: number | null
  isDefault_not?: number | null
  isDefault_in?: number[]
  isDefault_not_in?: number[]
  isDefault_lt?: number | null
  isDefault_lte?: number | null
  isDefault_gt?: number | null
  isDefault_gte?: number | null
  pic?: string | null
  pic_not?: string | null
  pic_in?: string[]
  pic_not_in?: string[]
  pic_lt?: string | null
  pic_lte?: string | null
  pic_gt?: string | null
  pic_gte?: string | null
  pic_contains?: string | null
  pic_not_contains?: string | null
  pic_starts_with?: string | null
  pic_not_starts_with?: string | null
  pic_ends_with?: string | null
  pic_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: PostImageScalarWhereInput[]
  OR?: PostImageScalarWhereInput[]
  NOT?: PostImageScalarWhereInput[]
}
export type PostImageScalarWhereInputInputObject =
  | Extract<keyof PostImageScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'isDefault', alias?: string  } 
  | { name: 'isDefault_not', alias?: string  } 
  | { name: 'isDefault_in', alias?: string  } 
  | { name: 'isDefault_not_in', alias?: string  } 
  | { name: 'isDefault_lt', alias?: string  } 
  | { name: 'isDefault_lte', alias?: string  } 
  | { name: 'isDefault_gt', alias?: string  } 
  | { name: 'isDefault_gte', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  | { name: 'pic_not', alias?: string  } 
  | { name: 'pic_in', alias?: string  } 
  | { name: 'pic_not_in', alias?: string  } 
  | { name: 'pic_lt', alias?: string  } 
  | { name: 'pic_lte', alias?: string  } 
  | { name: 'pic_gt', alias?: string  } 
  | { name: 'pic_gte', alias?: string  } 
  | { name: 'pic_contains', alias?: string  } 
  | { name: 'pic_not_contains', alias?: string  } 
  | { name: 'pic_starts_with', alias?: string  } 
  | { name: 'pic_not_starts_with', alias?: string  } 
  | { name: 'pic_ends_with', alias?: string  } 
  | { name: 'pic_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PostImageUpdateManyWithWhereNestedInput {
  where?: PostImageScalarWhereInput
  data?: PostImageUpdateManyDataInput
}
export type PostImageUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PostImageUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PostImageUpdateManyDataInput {
  isDefault?: number | null
  pic?: string | null
}
export type PostImageUpdateManyDataInputInputObject =
  | Extract<keyof PostImageUpdateManyDataInput, string>
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  
export interface BlogPostUpsertNestedInput {
  update?: BlogPostUpdateDataInput
  create?: BlogPostCreateInput
}
export type BlogPostUpsertNestedInputInputObject =
  | Extract<keyof BlogPostUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BlogCommentUpdateManyMutationInput {
  commentator?: number | null
  commentatorName?: string | null
  comments?: string | null
  logCreated?: string | null
}
export type BlogCommentUpdateManyMutationInputInputObject =
  | Extract<keyof BlogCommentUpdateManyMutationInput, string>
  | { name: 'commentator', alias?: string  } 
  | { name: 'commentatorName', alias?: string  } 
  | { name: 'comments', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  
export interface BlogPostUpdateInput {
  blogId?: BlogUpdateOneInput | null
  hospitalId?: HospitalUpdateOneInput | null
  logCreated?: string | null
  postContent?: string | null
  postTitle?: string | null
  status?: number | null
  totalViewers?: number | null
  images?: PostImageUpdateManyWithoutPostIdInput | null
}
export type BlogPostUpdateInputInputObject =
  | Extract<keyof BlogPostUpdateInput, string>
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  | { name: 'images', alias?: string  } 
  
export interface BlogPostUpdateManyMutationInput {
  logCreated?: string | null
  postContent?: string | null
  postTitle?: string | null
  status?: number | null
  totalViewers?: number | null
}
export type BlogPostUpdateManyMutationInputInputObject =
  | Extract<keyof BlogPostUpdateManyMutationInput, string>
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  
export interface PostImageCreateInput {
  id?: number | null
  isDefault?: number | null
  pic?: string
  postId?: BlogPostCreateOneWithoutImagesInput | null
}
export type PostImageCreateInputInputObject =
  | Extract<keyof PostImageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  
export interface BlogPostCreateOneWithoutImagesInput {
  create?: BlogPostCreateWithoutImagesInput | null
  connect?: BlogPostWhereUniqueInput | null
}
export type BlogPostCreateOneWithoutImagesInputInputObject =
  | Extract<keyof BlogPostCreateOneWithoutImagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BlogPostCreateWithoutImagesInput {
  id?: number | null
  blogId?: BlogCreateOneInput | null
  hospitalId?: HospitalCreateOneInput | null
  logCreated?: string
  postContent?: string
  postTitle?: string
  status?: number | null
  totalViewers?: number | null
}
export type BlogPostCreateWithoutImagesInputInputObject =
  | Extract<keyof BlogPostCreateWithoutImagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  
export interface PostImageUpdateInput {
  isDefault?: number | null
  pic?: string | null
  postId?: BlogPostUpdateOneWithoutImagesInput | null
}
export type PostImageUpdateInputInputObject =
  | Extract<keyof PostImageUpdateInput, string>
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  | { name: 'postId', alias?: string  } 
  
export interface BlogPostUpdateOneWithoutImagesInput {
  create?: BlogPostCreateWithoutImagesInput | null
  update?: BlogPostUpdateWithoutImagesDataInput | null
  upsert?: BlogPostUpsertWithoutImagesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BlogPostWhereUniqueInput | null
}
export type BlogPostUpdateOneWithoutImagesInputInputObject =
  | Extract<keyof BlogPostUpdateOneWithoutImagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BlogPostUpdateWithoutImagesDataInput {
  blogId?: BlogUpdateOneInput | null
  hospitalId?: HospitalUpdateOneInput | null
  logCreated?: string | null
  postContent?: string | null
  postTitle?: string | null
  status?: number | null
  totalViewers?: number | null
}
export type BlogPostUpdateWithoutImagesDataInputInputObject =
  | Extract<keyof BlogPostUpdateWithoutImagesDataInput, string>
  | { name: 'blogId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'logCreated', alias?: string  } 
  | { name: 'postContent', alias?: string  } 
  | { name: 'postTitle', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'totalViewers', alias?: string  } 
  
export interface BlogPostUpsertWithoutImagesInput {
  update?: BlogPostUpdateWithoutImagesDataInput
  create?: BlogPostCreateWithoutImagesInput
}
export type BlogPostUpsertWithoutImagesInputInputObject =
  | Extract<keyof BlogPostUpsertWithoutImagesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostImageUpdateManyMutationInput {
  isDefault?: number | null
  pic?: string | null
}
export type PostImageUpdateManyMutationInputInputObject =
  | Extract<keyof PostImageUpdateManyMutationInput, string>
  | { name: 'isDefault', alias?: string  } 
  | { name: 'pic', alias?: string  } 
  
export interface CityCreateInput {
  id?: number | null
  city?: string | null
  cityArabic?: string
  countryId?: number | null
  hospital?: HospitalCreateManyWithoutCityInput | null
}
export type CityCreateInputInputObject =
  | Extract<keyof CityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  
export interface HospitalCreateManyWithoutCityInput {
  create?: HospitalCreateWithoutCityInput[]
  connect?: HospitalWhereUniqueInput[]
}
export type HospitalCreateManyWithoutCityInputInputObject =
  | Extract<keyof HospitalCreateManyWithoutCityInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface HospitalCreateWithoutCityInput {
  id?: number | null
  address?: string
  addressArabic?: string
  apiKey?: string
  countryId?: CountryCreateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string
  doctors?: DoctorCreateManyWithoutHospitalInput | null
  language?: string
  latitude?: string
  location?: string
  logo?: string | null
  longitude?: string
  password?: string | null
  phone?: string | null
  phone1?: string
  status?: number | null
  type?: string | null
  uniqeId?: string
  insurances?: InsuranceCreateManyWithoutHospitalsInput | null
  createdDate?: string
}
export type HospitalCreateWithoutCityInputInputObject =
  | Extract<keyof HospitalCreateWithoutCityInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface CityUpdateInput {
  city?: string | null
  cityArabic?: string | null
  countryId?: number | null
  hospital?: HospitalUpdateManyWithoutCityInput | null
}
export type CityUpdateInputInputObject =
  | Extract<keyof CityUpdateInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  
export interface HospitalUpdateManyWithoutCityInput {
  create?: HospitalCreateWithoutCityInput[]
  delete?: HospitalWhereUniqueInput[]
  connect?: HospitalWhereUniqueInput[]
  set?: HospitalWhereUniqueInput[]
  disconnect?: HospitalWhereUniqueInput[]
  update?: HospitalUpdateWithWhereUniqueWithoutCityInput[]
  upsert?: HospitalUpsertWithWhereUniqueWithoutCityInput[]
  deleteMany?: HospitalScalarWhereInput[]
  updateMany?: HospitalUpdateManyWithWhereNestedInput[]
}
export type HospitalUpdateManyWithoutCityInputInputObject =
  | Extract<keyof HospitalUpdateManyWithoutCityInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface HospitalUpdateWithWhereUniqueWithoutCityInput {
  where?: HospitalWhereUniqueInput
  data?: HospitalUpdateWithoutCityDataInput
}
export type HospitalUpdateWithWhereUniqueWithoutCityInputInputObject =
  | Extract<keyof HospitalUpdateWithWhereUniqueWithoutCityInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface HospitalUpdateWithoutCityDataInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  countryId?: CountryUpdateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  doctors?: DoctorUpdateManyWithoutHospitalInput | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  insurances?: InsuranceUpdateManyWithoutHospitalsInput | null
  createdDate?: string | null
}
export type HospitalUpdateWithoutCityDataInputInputObject =
  | Extract<keyof HospitalUpdateWithoutCityDataInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalUpsertWithWhereUniqueWithoutCityInput {
  where?: HospitalWhereUniqueInput
  update?: HospitalUpdateWithoutCityDataInput
  create?: HospitalCreateWithoutCityInput
}
export type HospitalUpsertWithWhereUniqueWithoutCityInputInputObject =
  | Extract<keyof HospitalUpsertWithWhereUniqueWithoutCityInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CityUpdateManyMutationInput {
  city?: string | null
  cityArabic?: string | null
  countryId?: number | null
}
export type CityUpdateManyMutationInputInputObject =
  | Extract<keyof CityUpdateManyMutationInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'cityArabic', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  
export interface ContactUsCreateInput {
  id?: number | null
  address?: string
  email?: string
  lat?: string
  lon?: string
  phone?: string
  pobox?: string
}
export type ContactUsCreateInputInputObject =
  | Extract<keyof ContactUsCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lon', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'pobox', alias?: string  } 
  
export interface ContactUsUpdateInput {
  address?: string | null
  email?: string | null
  lat?: string | null
  lon?: string | null
  phone?: string | null
  pobox?: string | null
}
export type ContactUsUpdateInputInputObject =
  | Extract<keyof ContactUsUpdateInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lon', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'pobox', alias?: string  } 
  
export interface ContactUsUpdateManyMutationInput {
  address?: string | null
  email?: string | null
  lat?: string | null
  lon?: string | null
  phone?: string | null
  pobox?: string | null
}
export type ContactUsUpdateManyMutationInputInputObject =
  | Extract<keyof ContactUsUpdateManyMutationInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lon', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'pobox', alias?: string  } 
  
export interface CountryUpdateInput {
  country?: string | null
  countryArabic?: string | null
}
export type CountryUpdateInputInputObject =
  | Extract<keyof CountryUpdateInput, string>
  | { name: 'country', alias?: string  } 
  | { name: 'countryArabic', alias?: string  } 
  
export interface CountryUpdateManyMutationInput {
  country?: string | null
  countryArabic?: string | null
}
export type CountryUpdateManyMutationInputInputObject =
  | Extract<keyof CountryUpdateManyMutationInput, string>
  | { name: 'country', alias?: string  } 
  | { name: 'countryArabic', alias?: string  } 
  
export interface DiseaseUpdateInput {
  disease?: string | null
  diseaseArabic?: string | null
}
export type DiseaseUpdateInputInputObject =
  | Extract<keyof DiseaseUpdateInput, string>
  | { name: 'disease', alias?: string  } 
  | { name: 'diseaseArabic', alias?: string  } 
  
export interface DiseaseUpdateManyMutationInput {
  disease?: string | null
  diseaseArabic?: string | null
}
export type DiseaseUpdateManyMutationInputInputObject =
  | Extract<keyof DiseaseUpdateManyMutationInput, string>
  | { name: 'disease', alias?: string  } 
  | { name: 'diseaseArabic', alias?: string  } 
  
export interface DiseaseCoveredCreateInput {
  id?: number | null
  diseaseId?: number | null
  insuranceCatId?: number | null
}
export type DiseaseCoveredCreateInputInputObject =
  | Extract<keyof DiseaseCoveredCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'insuranceCatId', alias?: string  } 
  
export interface DiseaseCoveredUpdateInput {
  diseaseId?: number | null
  insuranceCatId?: number | null
}
export type DiseaseCoveredUpdateInputInputObject =
  | Extract<keyof DiseaseCoveredUpdateInput, string>
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'insuranceCatId', alias?: string  } 
  
export interface DiseaseCoveredUpdateManyMutationInput {
  diseaseId?: number | null
  insuranceCatId?: number | null
}
export type DiseaseCoveredUpdateManyMutationInputInputObject =
  | Extract<keyof DiseaseCoveredUpdateManyMutationInput, string>
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'insuranceCatId', alias?: string  } 
  
export interface DoctorUpdateInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  specialities?: SpecialityUpdateOneWithoutDoctorsInput | null
  hospital?: HospitalUpdateManyWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateInputInputObject =
  | Extract<keyof DoctorUpdateInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'specialities', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorUpdateManyMutationInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateManyMutationInputInputObject =
  | Extract<keyof DoctorUpdateManyMutationInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorOldCreateInput {
  id?: number | null
  apiKey?: string
  createdDate?: string
  designation?: string
  doctorCv?: string
  doctorsRating?: DoctorsRatingCreateManyWithoutDoctorsInput | null
  email?: string | null
  gender?: string
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  speciality?: SpecialityCreateOneInput | null
  status?: number | null
}
export type DoctorOldCreateInputInputObject =
  | Extract<keyof DoctorOldCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorsRating', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorsRatingCreateManyWithoutDoctorsInput {
  create?: DoctorsRatingCreateWithoutDoctorsInput[]
  connect?: DoctorsRatingWhereUniqueInput[]
}
export type DoctorsRatingCreateManyWithoutDoctorsInputInputObject =
  | Extract<keyof DoctorsRatingCreateManyWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorsRatingCreateWithoutDoctorsInput {
  id?: number | null
  rating?: string | null
  systemIp?: string
}
export type DoctorsRatingCreateWithoutDoctorsInputInputObject =
  | Extract<keyof DoctorsRatingCreateWithoutDoctorsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface SpecialityCreateOneInput {
  create?: SpecialityCreateInput | null
  connect?: SpecialityWhereUniqueInput | null
}
export type SpecialityCreateOneInputInputObject =
  | Extract<keyof SpecialityCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SpecialityCreateInput {
  id?: number | null
  doctors?: DoctorCreateManyWithoutSpecialitiesInput | null
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityCreateInputInputObject =
  | Extract<keyof SpecialityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface DoctorCreateManyWithoutSpecialitiesInput {
  create?: DoctorCreateWithoutSpecialitiesInput[]
  connect?: DoctorWhereUniqueInput[]
}
export type DoctorCreateManyWithoutSpecialitiesInputInputObject =
  | Extract<keyof DoctorCreateManyWithoutSpecialitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorCreateWithoutSpecialitiesInput {
  id?: number | null
  apiKey?: string
  designation?: string | null
  doctorCv?: string
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  hospital?: HospitalCreateManyWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string
}
export type DoctorCreateWithoutSpecialitiesInputInputObject =
  | Extract<keyof DoctorCreateWithoutSpecialitiesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorOldUpdateInput {
  apiKey?: string | null
  createdDate?: string | null
  designation?: string | null
  doctorCv?: string | null
  doctorsRating?: DoctorsRatingUpdateManyWithoutDoctorsInput | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  speciality?: SpecialityUpdateOneInput | null
  status?: number | null
}
export type DoctorOldUpdateInputInputObject =
  | Extract<keyof DoctorOldUpdateInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'doctorsRating', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorsRatingUpdateManyWithoutDoctorsInput {
  create?: DoctorsRatingCreateWithoutDoctorsInput[]
  delete?: DoctorsRatingWhereUniqueInput[]
  connect?: DoctorsRatingWhereUniqueInput[]
  set?: DoctorsRatingWhereUniqueInput[]
  disconnect?: DoctorsRatingWhereUniqueInput[]
  update?: DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInput[]
  upsert?: DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInput[]
  deleteMany?: DoctorsRatingScalarWhereInput[]
  updateMany?: DoctorsRatingUpdateManyWithWhereNestedInput[]
}
export type DoctorsRatingUpdateManyWithoutDoctorsInputInputObject =
  | Extract<keyof DoctorsRatingUpdateManyWithoutDoctorsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInput {
  where?: DoctorsRatingWhereUniqueInput
  data?: DoctorsRatingUpdateWithoutDoctorsDataInput
}
export type DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInputInputObject =
  | Extract<keyof DoctorsRatingUpdateWithWhereUniqueWithoutDoctorsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DoctorsRatingUpdateWithoutDoctorsDataInput {
  rating?: string | null
  systemIp?: string | null
}
export type DoctorsRatingUpdateWithoutDoctorsDataInputInputObject =
  | Extract<keyof DoctorsRatingUpdateWithoutDoctorsDataInput, string>
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInput {
  where?: DoctorsRatingWhereUniqueInput
  update?: DoctorsRatingUpdateWithoutDoctorsDataInput
  create?: DoctorsRatingCreateWithoutDoctorsInput
}
export type DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInputInputObject =
  | Extract<keyof DoctorsRatingUpsertWithWhereUniqueWithoutDoctorsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorsRatingScalarWhereInput {
  id?: number | null
  id_not?: number | null
  id_in?: number[]
  id_not_in?: number[]
  id_lt?: number | null
  id_lte?: number | null
  id_gt?: number | null
  id_gte?: number | null
  rating?: string | null
  rating_not?: string | null
  rating_in?: string[]
  rating_not_in?: string[]
  rating_lt?: string | null
  rating_lte?: string | null
  rating_gt?: string | null
  rating_gte?: string | null
  rating_contains?: string | null
  rating_not_contains?: string | null
  rating_starts_with?: string | null
  rating_not_starts_with?: string | null
  rating_ends_with?: string | null
  rating_not_ends_with?: string | null
  systemIp?: string | null
  systemIp_not?: string | null
  systemIp_in?: string[]
  systemIp_not_in?: string[]
  systemIp_lt?: string | null
  systemIp_lte?: string | null
  systemIp_gt?: string | null
  systemIp_gte?: string | null
  systemIp_contains?: string | null
  systemIp_not_contains?: string | null
  systemIp_starts_with?: string | null
  systemIp_not_starts_with?: string | null
  systemIp_ends_with?: string | null
  systemIp_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DoctorsRatingScalarWhereInput[]
  OR?: DoctorsRatingScalarWhereInput[]
  NOT?: DoctorsRatingScalarWhereInput[]
}
export type DoctorsRatingScalarWhereInputInputObject =
  | Extract<keyof DoctorsRatingScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'rating_not', alias?: string  } 
  | { name: 'rating_in', alias?: string  } 
  | { name: 'rating_not_in', alias?: string  } 
  | { name: 'rating_lt', alias?: string  } 
  | { name: 'rating_lte', alias?: string  } 
  | { name: 'rating_gt', alias?: string  } 
  | { name: 'rating_gte', alias?: string  } 
  | { name: 'rating_contains', alias?: string  } 
  | { name: 'rating_not_contains', alias?: string  } 
  | { name: 'rating_starts_with', alias?: string  } 
  | { name: 'rating_not_starts_with', alias?: string  } 
  | { name: 'rating_ends_with', alias?: string  } 
  | { name: 'rating_not_ends_with', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  | { name: 'systemIp_not', alias?: string  } 
  | { name: 'systemIp_in', alias?: string  } 
  | { name: 'systemIp_not_in', alias?: string  } 
  | { name: 'systemIp_lt', alias?: string  } 
  | { name: 'systemIp_lte', alias?: string  } 
  | { name: 'systemIp_gt', alias?: string  } 
  | { name: 'systemIp_gte', alias?: string  } 
  | { name: 'systemIp_contains', alias?: string  } 
  | { name: 'systemIp_not_contains', alias?: string  } 
  | { name: 'systemIp_starts_with', alias?: string  } 
  | { name: 'systemIp_not_starts_with', alias?: string  } 
  | { name: 'systemIp_ends_with', alias?: string  } 
  | { name: 'systemIp_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorsRatingUpdateManyWithWhereNestedInput {
  where?: DoctorsRatingScalarWhereInput
  data?: DoctorsRatingUpdateManyDataInput
}
export type DoctorsRatingUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof DoctorsRatingUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DoctorsRatingUpdateManyDataInput {
  rating?: string | null
  systemIp?: string | null
}
export type DoctorsRatingUpdateManyDataInputInputObject =
  | Extract<keyof DoctorsRatingUpdateManyDataInput, string>
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface SpecialityUpdateOneInput {
  create?: SpecialityCreateInput | null
  update?: SpecialityUpdateDataInput | null
  upsert?: SpecialityUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SpecialityWhereUniqueInput | null
}
export type SpecialityUpdateOneInputInputObject =
  | Extract<keyof SpecialityUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SpecialityUpdateDataInput {
  doctors?: DoctorUpdateManyWithoutSpecialitiesInput | null
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityUpdateDataInputInputObject =
  | Extract<keyof SpecialityUpdateDataInput, string>
  | { name: 'doctors', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface DoctorUpdateManyWithoutSpecialitiesInput {
  create?: DoctorCreateWithoutSpecialitiesInput[]
  delete?: DoctorWhereUniqueInput[]
  connect?: DoctorWhereUniqueInput[]
  set?: DoctorWhereUniqueInput[]
  disconnect?: DoctorWhereUniqueInput[]
  update?: DoctorUpdateWithWhereUniqueWithoutSpecialitiesInput[]
  upsert?: DoctorUpsertWithWhereUniqueWithoutSpecialitiesInput[]
  deleteMany?: DoctorScalarWhereInput[]
  updateMany?: DoctorUpdateManyWithWhereNestedInput[]
}
export type DoctorUpdateManyWithoutSpecialitiesInputInputObject =
  | Extract<keyof DoctorUpdateManyWithoutSpecialitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DoctorUpdateWithWhereUniqueWithoutSpecialitiesInput {
  where?: DoctorWhereUniqueInput
  data?: DoctorUpdateWithoutSpecialitiesDataInput
}
export type DoctorUpdateWithWhereUniqueWithoutSpecialitiesInputInputObject =
  | Extract<keyof DoctorUpdateWithWhereUniqueWithoutSpecialitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DoctorUpdateWithoutSpecialitiesDataInput {
  apiKey?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  specialityId?: number | null
  hospital?: HospitalUpdateManyWithoutDoctorsInput | null
  status?: number | null
  createdDate?: string | null
}
export type DoctorUpdateWithoutSpecialitiesDataInputInputObject =
  | Extract<keyof DoctorUpdateWithoutSpecialitiesDataInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface DoctorUpsertWithWhereUniqueWithoutSpecialitiesInput {
  where?: DoctorWhereUniqueInput
  update?: DoctorUpdateWithoutSpecialitiesDataInput
  create?: DoctorCreateWithoutSpecialitiesInput
}
export type DoctorUpsertWithWhereUniqueWithoutSpecialitiesInputInputObject =
  | Extract<keyof DoctorUpsertWithWhereUniqueWithoutSpecialitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SpecialityUpsertNestedInput {
  update?: SpecialityUpdateDataInput
  create?: SpecialityCreateInput
}
export type SpecialityUpsertNestedInputInputObject =
  | Extract<keyof SpecialityUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorOldUpdateManyMutationInput {
  apiKey?: string | null
  createdDate?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  status?: number | null
}
export type DoctorOldUpdateManyMutationInputInputObject =
  | Extract<keyof DoctorOldUpdateManyMutationInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorSheduleCreateInput {
  id?: number | null
  date?: number | null
  doctorId?: number | null
}
export type DoctorSheduleCreateInputInputObject =
  | Extract<keyof DoctorSheduleCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  
export interface DoctorSheduleUpdateInput {
  date?: number | null
  doctorId?: number | null
}
export type DoctorSheduleUpdateInputInputObject =
  | Extract<keyof DoctorSheduleUpdateInput, string>
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  
export interface DoctorSheduleUpdateManyMutationInput {
  date?: number | null
  doctorId?: number | null
}
export type DoctorSheduleUpdateManyMutationInputInputObject =
  | Extract<keyof DoctorSheduleUpdateManyMutationInput, string>
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  
export interface DoctorSheduleTimeUpdateInput {
  drSheduleId?: number | null
  scheduleTime?: number | null
  status?: number | null
}
export type DoctorSheduleTimeUpdateInputInputObject =
  | Extract<keyof DoctorSheduleTimeUpdateInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorSheduleTimeUpdateManyMutationInput {
  drSheduleId?: number | null
  scheduleTime?: number | null
  status?: number | null
}
export type DoctorSheduleTimeUpdateManyMutationInputInputObject =
  | Extract<keyof DoctorSheduleTimeUpdateManyMutationInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorSpecialityCreateInput {
  doctorId?: DoctorCreateOneInput | null
  specialityId?: SpecialityCreateOneInput | null
}
export type DoctorSpecialityCreateInputInputObject =
  | Extract<keyof DoctorSpecialityCreateInput, string>
  | { name: 'doctorId', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  
export interface DoctorsRatingCreateInput {
  id?: number | null
  doctors?: DoctorOldCreateOneWithoutDoctorsRatingInput | null
  rating?: string | null
  systemIp?: string
}
export type DoctorsRatingCreateInputInputObject =
  | Extract<keyof DoctorsRatingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface DoctorOldCreateOneWithoutDoctorsRatingInput {
  create?: DoctorOldCreateWithoutDoctorsRatingInput | null
  connect?: DoctorOldWhereUniqueInput | null
}
export type DoctorOldCreateOneWithoutDoctorsRatingInputInputObject =
  | Extract<keyof DoctorOldCreateOneWithoutDoctorsRatingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorOldCreateWithoutDoctorsRatingInput {
  id?: number | null
  apiKey?: string
  createdDate?: string
  designation?: string
  doctorCv?: string
  email?: string | null
  gender?: string
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  speciality?: SpecialityCreateOneInput | null
  status?: number | null
}
export type DoctorOldCreateWithoutDoctorsRatingInputInputObject =
  | Extract<keyof DoctorOldCreateWithoutDoctorsRatingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorsRatingUpdateInput {
  doctors?: DoctorOldUpdateOneWithoutDoctorsRatingInput | null
  rating?: string | null
  systemIp?: string | null
}
export type DoctorsRatingUpdateInputInputObject =
  | Extract<keyof DoctorsRatingUpdateInput, string>
  | { name: 'doctors', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface DoctorOldUpdateOneWithoutDoctorsRatingInput {
  create?: DoctorOldCreateWithoutDoctorsRatingInput | null
  update?: DoctorOldUpdateWithoutDoctorsRatingDataInput | null
  upsert?: DoctorOldUpsertWithoutDoctorsRatingInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: DoctorOldWhereUniqueInput | null
}
export type DoctorOldUpdateOneWithoutDoctorsRatingInputInputObject =
  | Extract<keyof DoctorOldUpdateOneWithoutDoctorsRatingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DoctorOldUpdateWithoutDoctorsRatingDataInput {
  apiKey?: string | null
  createdDate?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  fees?: string | null
  picture?: string | null
  speciality?: SpecialityUpdateOneInput | null
  status?: number | null
}
export type DoctorOldUpdateWithoutDoctorsRatingDataInputInputObject =
  | Extract<keyof DoctorOldUpdateWithoutDoctorsRatingDataInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'fees', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface DoctorOldUpsertWithoutDoctorsRatingInput {
  update?: DoctorOldUpdateWithoutDoctorsRatingDataInput
  create?: DoctorOldCreateWithoutDoctorsRatingInput
}
export type DoctorOldUpsertWithoutDoctorsRatingInputInputObject =
  | Extract<keyof DoctorOldUpsertWithoutDoctorsRatingInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DoctorsRatingUpdateManyMutationInput {
  rating?: string | null
  systemIp?: string | null
}
export type DoctorsRatingUpdateManyMutationInputInputObject =
  | Extract<keyof DoctorsRatingUpdateManyMutationInput, string>
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface DrSheduleCreateInput {
  id?: number | null
  date?: string | null
  doctorId?: number | null
  hospitalId?: number | null
}
export type DrSheduleCreateInputInputObject =
  | Extract<keyof DrSheduleCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface DrSheduleUpdateInput {
  date?: string | null
  doctorId?: number | null
  hospitalId?: number | null
}
export type DrSheduleUpdateInputInputObject =
  | Extract<keyof DrSheduleUpdateInput, string>
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface DrSheduleUpdateManyMutationInput {
  date?: string | null
  doctorId?: number | null
  hospitalId?: number | null
}
export type DrSheduleUpdateManyMutationInputInputObject =
  | Extract<keyof DrSheduleUpdateManyMutationInput, string>
  | { name: 'date', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface FacilityCreateInput {
  id?: number | null
  facility?: string | null
}
export type FacilityCreateInputInputObject =
  | Extract<keyof FacilityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'facility', alias?: string  } 
  
export interface FacilityUpdateInput {
  facility?: string | null
}
export type FacilityUpdateInputInputObject =
  | Extract<keyof FacilityUpdateInput, string>
  | { name: 'facility', alias?: string  } 
  
export interface FacilityUpdateManyMutationInput {
  facility?: string | null
}
export type FacilityUpdateManyMutationInputInputObject =
  | Extract<keyof FacilityUpdateManyMutationInput, string>
  | { name: 'facility', alias?: string  } 
  
export interface HospitalUpdateInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  city?: CityUpdateOneWithoutHospitalInput | null
  countryId?: CountryUpdateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  doctors?: DoctorUpdateManyWithoutHospitalInput | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  insurances?: InsuranceUpdateManyWithoutHospitalsInput | null
  createdDate?: string | null
}
export type HospitalUpdateInputInputObject =
  | Extract<keyof HospitalUpdateInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'insurances', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalUpdateManyMutationInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  createdDate?: string | null
}
export type HospitalUpdateManyMutationInputInputObject =
  | Extract<keyof HospitalUpdateManyMutationInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalDoctorCreateInput {
  dr?: DoctorCreateOneInput | null
  hospital?: HospitalCreateOneInput | null
}
export type HospitalDoctorCreateInputInputObject =
  | Extract<keyof HospitalDoctorCreateInput, string>
  | { name: 'dr', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  
export interface HospitalFacilityCreateInput {
  id?: number | null
  facilityId?: number | null
  hospitalId?: number | null
}
export type HospitalFacilityCreateInputInputObject =
  | Extract<keyof HospitalFacilityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'facilityId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface HospitalFacilityUpdateInput {
  facilityId?: number | null
  hospitalId?: number | null
}
export type HospitalFacilityUpdateInputInputObject =
  | Extract<keyof HospitalFacilityUpdateInput, string>
  | { name: 'facilityId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface HospitalFacilityUpdateManyMutationInput {
  facilityId?: number | null
  hospitalId?: number | null
}
export type HospitalFacilityUpdateManyMutationInputInputObject =
  | Extract<keyof HospitalFacilityUpdateManyMutationInput, string>
  | { name: 'facilityId', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  
export interface HospitalInsuranceCreateInput {
  hospitalId?: HospitalCreateOneInput | null
  insurance?: InsuranceCreateOneInput | null
}
export type HospitalInsuranceCreateInputInputObject =
  | Extract<keyof HospitalInsuranceCreateInput, string>
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  
export interface InsuranceCreateOneInput {
  create?: InsuranceCreateInput | null
  connect?: InsuranceWhereUniqueInput | null
}
export type InsuranceCreateOneInputInputObject =
  | Extract<keyof InsuranceCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InsuranceCreateInput {
  id?: number | null
  countryId?: number
  hospitals?: HospitalCreateManyWithoutInsurancesInput | null
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceCreateInputInputObject =
  | Extract<keyof InsuranceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'hospitals', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface HospitalCreateManyWithoutInsurancesInput {
  create?: HospitalCreateWithoutInsurancesInput[]
  connect?: HospitalWhereUniqueInput[]
}
export type HospitalCreateManyWithoutInsurancesInputInputObject =
  | Extract<keyof HospitalCreateManyWithoutInsurancesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface HospitalCreateWithoutInsurancesInput {
  id?: number | null
  address?: string
  addressArabic?: string
  apiKey?: string
  city?: CityCreateOneWithoutHospitalInput | null
  countryId?: CountryCreateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string
  doctors?: DoctorCreateManyWithoutHospitalInput | null
  language?: string
  latitude?: string
  location?: string
  logo?: string | null
  longitude?: string
  password?: string | null
  phone?: string | null
  phone1?: string
  status?: number | null
  type?: string | null
  uniqeId?: string
  createdDate?: string
}
export type HospitalCreateWithoutInsurancesInputInputObject =
  | Extract<keyof HospitalCreateWithoutInsurancesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalRatingCreateInput {
  id?: number | null
  hospitalId?: number | null
  rating?: string | null
}
export type HospitalRatingCreateInputInputObject =
  | Extract<keyof HospitalRatingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  
export interface HospitalRatingUpdateInput {
  hospitalId?: number | null
  rating?: string | null
}
export type HospitalRatingUpdateInputInputObject =
  | Extract<keyof HospitalRatingUpdateInput, string>
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  
export interface HospitalRatingUpdateManyMutationInput {
  hospitalId?: number | null
  rating?: string | null
}
export type HospitalRatingUpdateManyMutationInputInputObject =
  | Extract<keyof HospitalRatingUpdateManyMutationInput, string>
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  
export interface IllnessCreateInput {
  id?: number | null
  illness?: string | null
  illnessArabic?: string | null
}
export type IllnessCreateInputInputObject =
  | Extract<keyof IllnessCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'illness', alias?: string  } 
  | { name: 'illnessArabic', alias?: string  } 
  
export interface IllnessUpdateInput {
  illness?: string | null
  illnessArabic?: string | null
}
export type IllnessUpdateInputInputObject =
  | Extract<keyof IllnessUpdateInput, string>
  | { name: 'illness', alias?: string  } 
  | { name: 'illnessArabic', alias?: string  } 
  
export interface IllnessUpdateManyMutationInput {
  illness?: string | null
  illnessArabic?: string | null
}
export type IllnessUpdateManyMutationInputInputObject =
  | Extract<keyof IllnessUpdateManyMutationInput, string>
  | { name: 'illness', alias?: string  } 
  | { name: 'illnessArabic', alias?: string  } 
  
export interface InsuranceUpdateInput {
  countryId?: number | null
  hospitals?: HospitalUpdateManyWithoutInsurancesInput | null
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceUpdateInputInputObject =
  | Extract<keyof InsuranceUpdateInput, string>
  | { name: 'countryId', alias?: string  } 
  | { name: 'hospitals', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface HospitalUpdateManyWithoutInsurancesInput {
  create?: HospitalCreateWithoutInsurancesInput[]
  delete?: HospitalWhereUniqueInput[]
  connect?: HospitalWhereUniqueInput[]
  set?: HospitalWhereUniqueInput[]
  disconnect?: HospitalWhereUniqueInput[]
  update?: HospitalUpdateWithWhereUniqueWithoutInsurancesInput[]
  upsert?: HospitalUpsertWithWhereUniqueWithoutInsurancesInput[]
  deleteMany?: HospitalScalarWhereInput[]
  updateMany?: HospitalUpdateManyWithWhereNestedInput[]
}
export type HospitalUpdateManyWithoutInsurancesInputInputObject =
  | Extract<keyof HospitalUpdateManyWithoutInsurancesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface HospitalUpdateWithWhereUniqueWithoutInsurancesInput {
  where?: HospitalWhereUniqueInput
  data?: HospitalUpdateWithoutInsurancesDataInput
}
export type HospitalUpdateWithWhereUniqueWithoutInsurancesInputInputObject =
  | Extract<keyof HospitalUpdateWithWhereUniqueWithoutInsurancesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface HospitalUpdateWithoutInsurancesDataInput {
  address?: string | null
  addressArabic?: string | null
  apiKey?: string | null
  city?: CityUpdateOneWithoutHospitalInput | null
  countryId?: CountryUpdateOneInput | null
  email?: string | null
  hospital?: string | null
  hospitalArabic?: string | null
  doctors?: DoctorUpdateManyWithoutHospitalInput | null
  language?: string | null
  latitude?: string | null
  location?: string | null
  logo?: string | null
  longitude?: string | null
  password?: string | null
  phone?: string | null
  phone1?: string | null
  status?: number | null
  type?: string | null
  uniqeId?: string | null
  createdDate?: string | null
}
export type HospitalUpdateWithoutInsurancesDataInputInputObject =
  | Extract<keyof HospitalUpdateWithoutInsurancesDataInput, string>
  | { name: 'address', alias?: string  } 
  | { name: 'addressArabic', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'countryId', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'hospital', alias?: string  } 
  | { name: 'hospitalArabic', alias?: string  } 
  | { name: 'doctors', alias?: string  } 
  | { name: 'language', alias?: string  } 
  | { name: 'latitude', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'longitude', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone1', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  
export interface HospitalUpsertWithWhereUniqueWithoutInsurancesInput {
  where?: HospitalWhereUniqueInput
  update?: HospitalUpdateWithoutInsurancesDataInput
  create?: HospitalCreateWithoutInsurancesInput
}
export type HospitalUpsertWithWhereUniqueWithoutInsurancesInputInputObject =
  | Extract<keyof HospitalUpsertWithWhereUniqueWithoutInsurancesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InsuranceUpdateManyMutationInput {
  countryId?: number | null
  insurance?: string | null
  insuranceArabic?: string | null
}
export type InsuranceUpdateManyMutationInputInputObject =
  | Extract<keyof InsuranceUpdateManyMutationInput, string>
  | { name: 'countryId', alias?: string  } 
  | { name: 'insurance', alias?: string  } 
  | { name: 'insuranceArabic', alias?: string  } 
  
export interface InsuranceCategoryCreateInput {
  id?: number | null
  category?: string | null
  insuranceId?: number | null
}
export type InsuranceCategoryCreateInputInputObject =
  | Extract<keyof InsuranceCategoryCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'insuranceId', alias?: string  } 
  
export interface InsuranceCategoryUpdateInput {
  category?: string | null
  insuranceId?: number | null
}
export type InsuranceCategoryUpdateInputInputObject =
  | Extract<keyof InsuranceCategoryUpdateInput, string>
  | { name: 'category', alias?: string  } 
  | { name: 'insuranceId', alias?: string  } 
  
export interface InsuranceCategoryUpdateManyMutationInput {
  category?: string | null
  insuranceId?: number | null
}
export type InsuranceCategoryUpdateManyMutationInputInputObject =
  | Extract<keyof InsuranceCategoryUpdateManyMutationInput, string>
  | { name: 'category', alias?: string  } 
  | { name: 'insuranceId', alias?: string  } 
  
export interface JobCreateInput {
  id?: number | null
  position?: string
  positionArabic?: string
}
export type JobCreateInputInputObject =
  | Extract<keyof JobCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'positionArabic', alias?: string  } 
  
export interface JobUpdateInput {
  position?: string | null
  positionArabic?: string | null
}
export type JobUpdateInputInputObject =
  | Extract<keyof JobUpdateInput, string>
  | { name: 'position', alias?: string  } 
  | { name: 'positionArabic', alias?: string  } 
  
export interface JobUpdateManyMutationInput {
  position?: string | null
  positionArabic?: string | null
}
export type JobUpdateManyMutationInputInputObject =
  | Extract<keyof JobUpdateManyMutationInput, string>
  | { name: 'position', alias?: string  } 
  | { name: 'positionArabic', alias?: string  } 
  
export interface LanguageCreateInput {
  id?: number | null
  language?: string | null
}
export type LanguageCreateInputInputObject =
  | Extract<keyof LanguageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'language', alias?: string  } 
  
export interface LanguageUpdateInput {
  language?: string | null
}
export type LanguageUpdateInputInputObject =
  | Extract<keyof LanguageUpdateInput, string>
  | { name: 'language', alias?: string  } 
  
export interface LanguageUpdateManyMutationInput {
  language?: string | null
}
export type LanguageUpdateManyMutationInputInputObject =
  | Extract<keyof LanguageUpdateManyMutationInput, string>
  | { name: 'language', alias?: string  } 
  
export interface MessageCreateInput {
  id?: number | null
  fromUser?: number
  isDelete?: number | null
  isRead?: number | null
  logCreate?: string
  message?: string
  sentBy?: number
  toUser?: number
}
export type MessageCreateInputInputObject =
  | Extract<keyof MessageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'fromUser', alias?: string  } 
  | { name: 'isDelete', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'logCreate', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'sentBy', alias?: string  } 
  | { name: 'toUser', alias?: string  } 
  
export interface MessageUpdateInput {
  fromUser?: number | null
  isDelete?: number | null
  isRead?: number | null
  logCreate?: string | null
  message?: string | null
  sentBy?: number | null
  toUser?: number | null
}
export type MessageUpdateInputInputObject =
  | Extract<keyof MessageUpdateInput, string>
  | { name: 'fromUser', alias?: string  } 
  | { name: 'isDelete', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'logCreate', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'sentBy', alias?: string  } 
  | { name: 'toUser', alias?: string  } 
  
export interface MessageUpdateManyMutationInput {
  fromUser?: number | null
  isDelete?: number | null
  isRead?: number | null
  logCreate?: string | null
  message?: string | null
  sentBy?: number | null
  toUser?: number | null
}
export type MessageUpdateManyMutationInputInputObject =
  | Extract<keyof MessageUpdateManyMutationInput, string>
  | { name: 'fromUser', alias?: string  } 
  | { name: 'isDelete', alias?: string  } 
  | { name: 'isRead', alias?: string  } 
  | { name: 'logCreate', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'sentBy', alias?: string  } 
  | { name: 'toUser', alias?: string  } 
  
export interface MigrationCreateInput {
  id?: number | null
  batch?: number
  migration?: string
}
export type MigrationCreateInputInputObject =
  | Extract<keyof MigrationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  | { name: 'migration', alias?: string  } 
  
export interface MigrationUpdateInput {
  batch?: number | null
  migration?: string | null
}
export type MigrationUpdateInputInputObject =
  | Extract<keyof MigrationUpdateInput, string>
  | { name: 'batch', alias?: string  } 
  | { name: 'migration', alias?: string  } 
  
export interface MigrationUpdateManyMutationInput {
  batch?: number | null
  migration?: string | null
}
export type MigrationUpdateManyMutationInputInputObject =
  | Extract<keyof MigrationUpdateManyMutationInput, string>
  | { name: 'batch', alias?: string  } 
  | { name: 'migration', alias?: string  } 
  
export interface OfferCreateInput {
  id?: number | null
  description?: string
  descriptionArabic?: string
  endDate?: string
  heading?: string
  headingArabic?: string
  hospitalId?: number
  offerImage?: string
  position?: number
  startDate?: string
  status?: number | null
  type?: number
}
export type OfferCreateInputInputObject =
  | Extract<keyof OfferCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'descriptionArabic', alias?: string  } 
  | { name: 'endDate', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  | { name: 'headingArabic', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'offerImage', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'startDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  
export interface OfferUpdateInput {
  description?: string | null
  descriptionArabic?: string | null
  endDate?: string | null
  heading?: string | null
  headingArabic?: string | null
  hospitalId?: number | null
  offerImage?: string | null
  position?: number | null
  startDate?: string | null
  status?: number | null
  type?: number | null
}
export type OfferUpdateInputInputObject =
  | Extract<keyof OfferUpdateInput, string>
  | { name: 'description', alias?: string  } 
  | { name: 'descriptionArabic', alias?: string  } 
  | { name: 'endDate', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  | { name: 'headingArabic', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'offerImage', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'startDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  
export interface OfferUpdateManyMutationInput {
  description?: string | null
  descriptionArabic?: string | null
  endDate?: string | null
  heading?: string | null
  headingArabic?: string | null
  hospitalId?: number | null
  offerImage?: string | null
  position?: number | null
  startDate?: string | null
  status?: number | null
  type?: number | null
}
export type OfferUpdateManyMutationInputInputObject =
  | Extract<keyof OfferUpdateManyMutationInput, string>
  | { name: 'description', alias?: string  } 
  | { name: 'descriptionArabic', alias?: string  } 
  | { name: 'endDate', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  | { name: 'headingArabic', alias?: string  } 
  | { name: 'hospitalId', alias?: string  } 
  | { name: 'offerImage', alias?: string  } 
  | { name: 'position', alias?: string  } 
  | { name: 'startDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'type', alias?: string  } 
  
export interface OnlineAppointmentCreateInput {
  id?: number | null
  apointmentDate?: string
  apointmentFulldate?: number
  apointmentTime?: string
  diseaseId?: number | null
  doctorArabic?: string
  doctorId?: number | null
  doctorName?: string
  dtId?: number | null
  gender?: string
  optId?: number | null
  patientId?: number | null
  phone?: string
  phoneCode?: string | null
  scheduleTimeId?: number
  status?: number | null
}
export type OnlineAppointmentCreateInputInputObject =
  | Extract<keyof OnlineAppointmentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineAppointmentUpdateInput {
  apointmentDate?: string | null
  apointmentFulldate?: number | null
  apointmentTime?: string | null
  diseaseId?: number | null
  doctorArabic?: string | null
  doctorId?: number | null
  doctorName?: string | null
  dtId?: number | null
  gender?: string | null
  optId?: number | null
  patientId?: number | null
  phone?: string | null
  phoneCode?: string | null
  scheduleTimeId?: number | null
  status?: number | null
}
export type OnlineAppointmentUpdateInputInputObject =
  | Extract<keyof OnlineAppointmentUpdateInput, string>
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineAppointmentUpdateManyMutationInput {
  apointmentDate?: string | null
  apointmentFulldate?: number | null
  apointmentTime?: string | null
  diseaseId?: number | null
  doctorArabic?: string | null
  doctorId?: number | null
  doctorName?: string | null
  dtId?: number | null
  gender?: string | null
  optId?: number | null
  patientId?: number | null
  phone?: string | null
  phoneCode?: string | null
  scheduleTimeId?: number | null
  status?: number | null
}
export type OnlineAppointmentUpdateManyMutationInputInputObject =
  | Extract<keyof OnlineAppointmentUpdateManyMutationInput, string>
  | { name: 'apointmentDate', alias?: string  } 
  | { name: 'apointmentFulldate', alias?: string  } 
  | { name: 'apointmentTime', alias?: string  } 
  | { name: 'diseaseId', alias?: string  } 
  | { name: 'doctorArabic', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'doctorName', alias?: string  } 
  | { name: 'dtId', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'optId', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phoneCode', alias?: string  } 
  | { name: 'scheduleTimeId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineDoctorCreateInput {
  id?: number | null
  apiKey?: string
  createdDate?: string
  designation?: string
  doctorCv?: string
  email?: string | null
  gender?: string
  lastSeen?: string
  mohcard?: string | null
  mohId?: string
  name?: string | null
  nameArabic?: string
  password?: string | null
  phone?: string | null
  picture?: string | null
  specialityId?: number | null
  status?: number | null
}
export type OnlineDoctorCreateInputInputObject =
  | Extract<keyof OnlineDoctorCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineDoctorUpdateInput {
  apiKey?: string | null
  createdDate?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  lastSeen?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  picture?: string | null
  specialityId?: number | null
  status?: number | null
}
export type OnlineDoctorUpdateInputInputObject =
  | Extract<keyof OnlineDoctorUpdateInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineDoctorUpdateManyMutationInput {
  apiKey?: string | null
  createdDate?: string | null
  designation?: string | null
  doctorCv?: string | null
  email?: string | null
  gender?: string | null
  lastSeen?: string | null
  mohcard?: string | null
  mohId?: string | null
  name?: string | null
  nameArabic?: string | null
  password?: string | null
  phone?: string | null
  picture?: string | null
  specialityId?: number | null
  status?: number | null
}
export type OnlineDoctorUpdateManyMutationInputInputObject =
  | Extract<keyof OnlineDoctorUpdateManyMutationInput, string>
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'designation', alias?: string  } 
  | { name: 'doctorCv', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mohcard', alias?: string  } 
  | { name: 'mohId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'nameArabic', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'specialityId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OnlineRatingCreateInput {
  id?: number | null
  doctorsId?: number | null
  rating?: string | null
  systemIp?: string
}
export type OnlineRatingCreateInputInputObject =
  | Extract<keyof OnlineRatingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'doctorsId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface OnlineRatingUpdateInput {
  doctorsId?: number | null
  rating?: string | null
  systemIp?: string | null
}
export type OnlineRatingUpdateInputInputObject =
  | Extract<keyof OnlineRatingUpdateInput, string>
  | { name: 'doctorsId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface OnlineRatingUpdateManyMutationInput {
  doctorsId?: number | null
  rating?: string | null
  systemIp?: string | null
}
export type OnlineRatingUpdateManyMutationInputInputObject =
  | Extract<keyof OnlineRatingUpdateManyMutationInput, string>
  | { name: 'doctorsId', alias?: string  } 
  | { name: 'rating', alias?: string  } 
  | { name: 'systemIp', alias?: string  } 
  
export interface OptTimeUpdateInput {
  fifteenMins?: string | null
  thirtyMins?: string | null
  twentyMins?: string | null
}
export type OptTimeUpdateInputInputObject =
  | Extract<keyof OptTimeUpdateInput, string>
  | { name: 'fifteenMins', alias?: string  } 
  | { name: 'thirtyMins', alias?: string  } 
  | { name: 'twentyMins', alias?: string  } 
  
export interface OptTimeUpdateManyMutationInput {
  fifteenMins?: string | null
  thirtyMins?: string | null
  twentyMins?: string | null
}
export type OptTimeUpdateManyMutationInputInputObject =
  | Extract<keyof OptTimeUpdateManyMutationInput, string>
  | { name: 'fifteenMins', alias?: string  } 
  | { name: 'thirtyMins', alias?: string  } 
  | { name: 'twentyMins', alias?: string  } 
  
export interface PasswordResetCreateInput {
  id?: number | null
  email?: string
  token?: string
}
export type PasswordResetCreateInputInputObject =
  | Extract<keyof PasswordResetCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  
export interface PasswordResetUpdateInput {
  email?: string | null
  token?: string | null
}
export type PasswordResetUpdateInputInputObject =
  | Extract<keyof PasswordResetUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  
export interface PasswordResetUpdateManyMutationInput {
  email?: string | null
  token?: string | null
}
export type PasswordResetUpdateManyMutationInputInputObject =
  | Extract<keyof PasswordResetUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  
export interface PatientUpdateInput {
  age?: number | null
  apiKey?: string | null
  createdDate?: string | null
  dob?: string | null
  email?: string | null
  gender?: string | null
  lastAction?: string | null
  lastSeen?: string | null
  mailSubs?: number | null
  mobile?: string | null
  name?: string | null
  password?: string | null
  status?: number | null
  uniqeId?: string | null
}
export type PatientUpdateInputInputObject =
  | Extract<keyof PatientUpdateInput, string>
  | { name: 'age', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'dob', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastAction', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mailSubs', alias?: string  } 
  | { name: 'mobile', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  
export interface PatientUpdateManyMutationInput {
  age?: number | null
  apiKey?: string | null
  createdDate?: string | null
  dob?: string | null
  email?: string | null
  gender?: string | null
  lastAction?: string | null
  lastSeen?: string | null
  mailSubs?: number | null
  mobile?: string | null
  name?: string | null
  password?: string | null
  status?: number | null
  uniqeId?: string | null
}
export type PatientUpdateManyMutationInputInputObject =
  | Extract<keyof PatientUpdateManyMutationInput, string>
  | { name: 'age', alias?: string  } 
  | { name: 'apiKey', alias?: string  } 
  | { name: 'createdDate', alias?: string  } 
  | { name: 'dob', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'lastAction', alias?: string  } 
  | { name: 'lastSeen', alias?: string  } 
  | { name: 'mailSubs', alias?: string  } 
  | { name: 'mobile', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'uniqeId', alias?: string  } 
  
export interface SearchDesignCreateInput {
  id?: number | null
  addressColor?: string
  addressFamily?: string
  addressStyle?: string
  designationColor?: string
  designationFamily?: string
  designationStyle?: string
  doctorColor?: string
  doctorFamily?: string
  doctorStyle?: string
  emailColor?: string
  emailFamily?: string
  emailStyle?: string
  nameColor?: string
  nameFamily?: string
  nameStyle?: string
  phoneColor?: string
  phoneFamily?: string
  phoneStyle?: string
  ratingColor?: string
  ratingFamily?: string
  ratingStyle?: string
  specialityColor?: string
  specialityFamily?: string
  specialityStyle?: string
}
export type SearchDesignCreateInputInputObject =
  | Extract<keyof SearchDesignCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'addressColor', alias?: string  } 
  | { name: 'addressFamily', alias?: string  } 
  | { name: 'addressStyle', alias?: string  } 
  | { name: 'designationColor', alias?: string  } 
  | { name: 'designationFamily', alias?: string  } 
  | { name: 'designationStyle', alias?: string  } 
  | { name: 'doctorColor', alias?: string  } 
  | { name: 'doctorFamily', alias?: string  } 
  | { name: 'doctorStyle', alias?: string  } 
  | { name: 'emailColor', alias?: string  } 
  | { name: 'emailFamily', alias?: string  } 
  | { name: 'emailStyle', alias?: string  } 
  | { name: 'nameColor', alias?: string  } 
  | { name: 'nameFamily', alias?: string  } 
  | { name: 'nameStyle', alias?: string  } 
  | { name: 'phoneColor', alias?: string  } 
  | { name: 'phoneFamily', alias?: string  } 
  | { name: 'phoneStyle', alias?: string  } 
  | { name: 'ratingColor', alias?: string  } 
  | { name: 'ratingFamily', alias?: string  } 
  | { name: 'ratingStyle', alias?: string  } 
  | { name: 'specialityColor', alias?: string  } 
  | { name: 'specialityFamily', alias?: string  } 
  | { name: 'specialityStyle', alias?: string  } 
  
export interface SearchDesignUpdateInput {
  addressColor?: string | null
  addressFamily?: string | null
  addressStyle?: string | null
  designationColor?: string | null
  designationFamily?: string | null
  designationStyle?: string | null
  doctorColor?: string | null
  doctorFamily?: string | null
  doctorStyle?: string | null
  emailColor?: string | null
  emailFamily?: string | null
  emailStyle?: string | null
  nameColor?: string | null
  nameFamily?: string | null
  nameStyle?: string | null
  phoneColor?: string | null
  phoneFamily?: string | null
  phoneStyle?: string | null
  ratingColor?: string | null
  ratingFamily?: string | null
  ratingStyle?: string | null
  specialityColor?: string | null
  specialityFamily?: string | null
  specialityStyle?: string | null
}
export type SearchDesignUpdateInputInputObject =
  | Extract<keyof SearchDesignUpdateInput, string>
  | { name: 'addressColor', alias?: string  } 
  | { name: 'addressFamily', alias?: string  } 
  | { name: 'addressStyle', alias?: string  } 
  | { name: 'designationColor', alias?: string  } 
  | { name: 'designationFamily', alias?: string  } 
  | { name: 'designationStyle', alias?: string  } 
  | { name: 'doctorColor', alias?: string  } 
  | { name: 'doctorFamily', alias?: string  } 
  | { name: 'doctorStyle', alias?: string  } 
  | { name: 'emailColor', alias?: string  } 
  | { name: 'emailFamily', alias?: string  } 
  | { name: 'emailStyle', alias?: string  } 
  | { name: 'nameColor', alias?: string  } 
  | { name: 'nameFamily', alias?: string  } 
  | { name: 'nameStyle', alias?: string  } 
  | { name: 'phoneColor', alias?: string  } 
  | { name: 'phoneFamily', alias?: string  } 
  | { name: 'phoneStyle', alias?: string  } 
  | { name: 'ratingColor', alias?: string  } 
  | { name: 'ratingFamily', alias?: string  } 
  | { name: 'ratingStyle', alias?: string  } 
  | { name: 'specialityColor', alias?: string  } 
  | { name: 'specialityFamily', alias?: string  } 
  | { name: 'specialityStyle', alias?: string  } 
  
export interface SearchDesignUpdateManyMutationInput {
  addressColor?: string | null
  addressFamily?: string | null
  addressStyle?: string | null
  designationColor?: string | null
  designationFamily?: string | null
  designationStyle?: string | null
  doctorColor?: string | null
  doctorFamily?: string | null
  doctorStyle?: string | null
  emailColor?: string | null
  emailFamily?: string | null
  emailStyle?: string | null
  nameColor?: string | null
  nameFamily?: string | null
  nameStyle?: string | null
  phoneColor?: string | null
  phoneFamily?: string | null
  phoneStyle?: string | null
  ratingColor?: string | null
  ratingFamily?: string | null
  ratingStyle?: string | null
  specialityColor?: string | null
  specialityFamily?: string | null
  specialityStyle?: string | null
}
export type SearchDesignUpdateManyMutationInputInputObject =
  | Extract<keyof SearchDesignUpdateManyMutationInput, string>
  | { name: 'addressColor', alias?: string  } 
  | { name: 'addressFamily', alias?: string  } 
  | { name: 'addressStyle', alias?: string  } 
  | { name: 'designationColor', alias?: string  } 
  | { name: 'designationFamily', alias?: string  } 
  | { name: 'designationStyle', alias?: string  } 
  | { name: 'doctorColor', alias?: string  } 
  | { name: 'doctorFamily', alias?: string  } 
  | { name: 'doctorStyle', alias?: string  } 
  | { name: 'emailColor', alias?: string  } 
  | { name: 'emailFamily', alias?: string  } 
  | { name: 'emailStyle', alias?: string  } 
  | { name: 'nameColor', alias?: string  } 
  | { name: 'nameFamily', alias?: string  } 
  | { name: 'nameStyle', alias?: string  } 
  | { name: 'phoneColor', alias?: string  } 
  | { name: 'phoneFamily', alias?: string  } 
  | { name: 'phoneStyle', alias?: string  } 
  | { name: 'ratingColor', alias?: string  } 
  | { name: 'ratingFamily', alias?: string  } 
  | { name: 'ratingStyle', alias?: string  } 
  | { name: 'specialityColor', alias?: string  } 
  | { name: 'specialityFamily', alias?: string  } 
  | { name: 'specialityStyle', alias?: string  } 
  
export interface SheduleTimeUpdateInput {
  drSheduleId?: number | null
  scheduleFullDate?: number | null
  sheduleTime?: string | null
  status?: number | null
}
export type SheduleTimeUpdateInputInputObject =
  | Extract<keyof SheduleTimeUpdateInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleFullDate', alias?: string  } 
  | { name: 'sheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface SheduleTimeUpdateManyMutationInput {
  drSheduleId?: number | null
  scheduleFullDate?: number | null
  sheduleTime?: string | null
  status?: number | null
}
export type SheduleTimeUpdateManyMutationInputInputObject =
  | Extract<keyof SheduleTimeUpdateManyMutationInput, string>
  | { name: 'drSheduleId', alias?: string  } 
  | { name: 'scheduleFullDate', alias?: string  } 
  | { name: 'sheduleTime', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface SliderCreateInput {
  id?: number | null
  arabicHeading?: string
  banner?: string
  heading?: string
}
export type SliderCreateInputInputObject =
  | Extract<keyof SliderCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'arabicHeading', alias?: string  } 
  | { name: 'banner', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  
export interface SliderUpdateInput {
  arabicHeading?: string | null
  banner?: string | null
  heading?: string | null
}
export type SliderUpdateInputInputObject =
  | Extract<keyof SliderUpdateInput, string>
  | { name: 'arabicHeading', alias?: string  } 
  | { name: 'banner', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  
export interface SliderUpdateManyMutationInput {
  arabicHeading?: string | null
  banner?: string | null
  heading?: string | null
}
export type SliderUpdateManyMutationInputInputObject =
  | Extract<keyof SliderUpdateManyMutationInput, string>
  | { name: 'arabicHeading', alias?: string  } 
  | { name: 'banner', alias?: string  } 
  | { name: 'heading', alias?: string  } 
  
export interface SpecialityUpdateInput {
  doctors?: DoctorUpdateManyWithoutSpecialitiesInput | null
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityUpdateInputInputObject =
  | Extract<keyof SpecialityUpdateInput, string>
  | { name: 'doctors', alias?: string  } 
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface SpecialityUpdateManyMutationInput {
  speciality?: string | null
  specialityArabic?: string | null
}
export type SpecialityUpdateManyMutationInputInputObject =
  | Extract<keyof SpecialityUpdateManyMutationInput, string>
  | { name: 'speciality', alias?: string  } 
  | { name: 'specialityArabic', alias?: string  } 
  
export interface EmailSubscriptionCreateInput {
  id?: number | null
  email?: string
}
export type EmailSubscriptionCreateInputInputObject =
  | Extract<keyof EmailSubscriptionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface EmailSubscriptionUpdateInput {
  email?: string | null
}
export type EmailSubscriptionUpdateInputInputObject =
  | Extract<keyof EmailSubscriptionUpdateInput, string>
  | { name: 'email', alias?: string  } 
  
export interface EmailSubscriptionUpdateManyMutationInput {
  email?: string | null
}
export type EmailSubscriptionUpdateManyMutationInputInputObject =
  | Extract<keyof EmailSubscriptionUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  
export interface UserCreateInput {
  id?: number | null
  email?: string
  name?: string
  password?: string
  rememberToken?: string | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'rememberToken', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  name?: string | null
  password?: string | null
  rememberToken?: string | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'rememberToken', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  name?: string | null
  password?: string | null
  rememberToken?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'rememberToken', alias?: string  } 
  
export interface VideoRequestCreateInput {
  id?: number | null
  doctorId?: number
  joinCall?: number | null
  patientId?: number
  requestDate?: number
  videoCode?: number | null
}
export type VideoRequestCreateInputInputObject =
  | Extract<keyof VideoRequestCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'doctorId', alias?: string  } 
  | { name: 'joinCall', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'requestDate', alias?: string  } 
  | { name: 'videoCode', alias?: string  } 
  
export interface VideoRequestUpdateInput {
  doctorId?: number | null
  joinCall?: number | null
  patientId?: number | null
  requestDate?: number | null
  videoCode?: number | null
}
export type VideoRequestUpdateInputInputObject =
  | Extract<keyof VideoRequestUpdateInput, string>
  | { name: 'doctorId', alias?: string  } 
  | { name: 'joinCall', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'requestDate', alias?: string  } 
  | { name: 'videoCode', alias?: string  } 
  
export interface VideoRequestUpdateManyMutationInput {
  doctorId?: number | null
  joinCall?: number | null
  patientId?: number | null
  requestDate?: number | null
  videoCode?: number | null
}
export type VideoRequestUpdateManyMutationInputInputObject =
  | Extract<keyof VideoRequestUpdateManyMutationInput, string>
  | { name: 'doctorId', alias?: string  } 
  | { name: 'joinCall', alias?: string  } 
  | { name: 'patientId', alias?: string  } 
  | { name: 'requestDate', alias?: string  } 
  | { name: 'videoCode', alias?: string  } 
  
export interface VisitorCreateInput {
  id?: number | null
  country?: string | null
  hits?: number
  ipAddress?: string
  visitDate?: string
}
export type VisitorCreateInputInputObject =
  | Extract<keyof VisitorCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'hits', alias?: string  } 
  | { name: 'ipAddress', alias?: string  } 
  | { name: 'visitDate', alias?: string  } 
  
export interface VisitorUpdateInput {
  country?: string | null
  hits?: number | null
  ipAddress?: string | null
  visitDate?: string | null
}
export type VisitorUpdateInputInputObject =
  | Extract<keyof VisitorUpdateInput, string>
  | { name: 'country', alias?: string  } 
  | { name: 'hits', alias?: string  } 
  | { name: 'ipAddress', alias?: string  } 
  | { name: 'visitDate', alias?: string  } 
  
export interface VisitorUpdateManyMutationInput {
  country?: string | null
  hits?: number | null
  ipAddress?: string | null
  visitDate?: string | null
}
export type VisitorUpdateManyMutationInputInputObject =
  | Extract<keyof VisitorUpdateManyMutationInput, string>
  | { name: 'country', alias?: string  } 
  | { name: 'hits', alias?: string  } 
  | { name: 'ipAddress', alias?: string  } 
  | { name: 'visitDate', alias?: string  } 
  
export interface TranslationCreateInput {
  id?: number | null
  arabi?: string
  english?: string
  index?: string
}
export type TranslationCreateInputInputObject =
  | Extract<keyof TranslationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'arabi', alias?: string  } 
  | { name: 'english', alias?: string  } 
  | { name: 'index', alias?: string  } 
  
export interface TranslationUpdateInput {
  arabi?: string | null
  english?: string | null
  index?: string | null
}
export type TranslationUpdateInputInputObject =
  | Extract<keyof TranslationUpdateInput, string>
  | { name: 'arabi', alias?: string  } 
  | { name: 'english', alias?: string  } 
  | { name: 'index', alias?: string  } 
  
export interface TranslationUpdateManyMutationInput {
  arabi?: string | null
  english?: string | null
  index?: string | null
}
export type TranslationUpdateManyMutationInputInputObject =
  | Extract<keyof TranslationUpdateManyMutationInput, string>
  | { name: 'arabi', alias?: string  } 
  | { name: 'english', alias?: string  } 
  | { name: 'index', alias?: string  } 
  
export interface PageCreateInput {
  id?: number | null
  slug?: string | null
  slug_ar?: string | null
  title?: string | null
  title_ar?: string | null
  content?: string | null
  content_ar?: string | null
}
export type PageCreateInputInputObject =
  | Extract<keyof PageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_ar', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_ar', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_ar', alias?: string  } 
  
export interface PageUpdateInput {
  slug?: string | null
  slug_ar?: string | null
  title?: string | null
  title_ar?: string | null
  content?: string | null
  content_ar?: string | null
}
export type PageUpdateInputInputObject =
  | Extract<keyof PageUpdateInput, string>
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_ar', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_ar', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_ar', alias?: string  } 
  
export interface PageUpdateManyMutationInput {
  slug?: string | null
  slug_ar?: string | null
  title?: string | null
  title_ar?: string | null
  content?: string | null
  content_ar?: string | null
}
export type PageUpdateManyMutationInputInputObject =
  | Extract<keyof PageUpdateManyMutationInput, string>
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_ar', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_ar', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_ar', alias?: string  } 
  
export interface AboutUsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AboutUsWhereInput | null
  AND?: AboutUsSubscriptionWhereInput[]
  OR?: AboutUsSubscriptionWhereInput[]
  NOT?: AboutUsSubscriptionWhereInput[]
}
export type AboutUsSubscriptionWhereInputInputObject =
  | Extract<keyof AboutUsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AdminSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AdminWhereInput | null
  AND?: AdminSubscriptionWhereInput[]
  OR?: AdminSubscriptionWhereInput[]
  NOT?: AdminSubscriptionWhereInput[]
}
export type AdminSubscriptionWhereInputInputObject =
  | Extract<keyof AdminSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AppointmentWhereInput | null
  AND?: AppointmentSubscriptionWhereInput[]
  OR?: AppointmentSubscriptionWhereInput[]
  NOT?: AppointmentSubscriptionWhereInput[]
}
export type AppointmentSubscriptionWhereInputInputObject =
  | Extract<keyof AppointmentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BlogWhereInput | null
  AND?: BlogSubscriptionWhereInput[]
  OR?: BlogSubscriptionWhereInput[]
  NOT?: BlogSubscriptionWhereInput[]
}
export type BlogSubscriptionWhereInputInputObject =
  | Extract<keyof BlogSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogCommentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BlogCommentWhereInput | null
  AND?: BlogCommentSubscriptionWhereInput[]
  OR?: BlogCommentSubscriptionWhereInput[]
  NOT?: BlogCommentSubscriptionWhereInput[]
}
export type BlogCommentSubscriptionWhereInputInputObject =
  | Extract<keyof BlogCommentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BlogPostSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BlogPostWhereInput | null
  AND?: BlogPostSubscriptionWhereInput[]
  OR?: BlogPostSubscriptionWhereInput[]
  NOT?: BlogPostSubscriptionWhereInput[]
}
export type BlogPostSubscriptionWhereInputInputObject =
  | Extract<keyof BlogPostSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PostImageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PostImageWhereInput | null
  AND?: PostImageSubscriptionWhereInput[]
  OR?: PostImageSubscriptionWhereInput[]
  NOT?: PostImageSubscriptionWhereInput[]
}
export type PostImageSubscriptionWhereInputInputObject =
  | Extract<keyof PostImageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CityWhereInput | null
  AND?: CitySubscriptionWhereInput[]
  OR?: CitySubscriptionWhereInput[]
  NOT?: CitySubscriptionWhereInput[]
}
export type CitySubscriptionWhereInputInputObject =
  | Extract<keyof CitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ContactUsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ContactUsWhereInput | null
  AND?: ContactUsSubscriptionWhereInput[]
  OR?: ContactUsSubscriptionWhereInput[]
  NOT?: ContactUsSubscriptionWhereInput[]
}
export type ContactUsSubscriptionWhereInputInputObject =
  | Extract<keyof ContactUsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CountrySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CountryWhereInput | null
  AND?: CountrySubscriptionWhereInput[]
  OR?: CountrySubscriptionWhereInput[]
  NOT?: CountrySubscriptionWhereInput[]
}
export type CountrySubscriptionWhereInputInputObject =
  | Extract<keyof CountrySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DiseaseSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DiseaseWhereInput | null
  AND?: DiseaseSubscriptionWhereInput[]
  OR?: DiseaseSubscriptionWhereInput[]
  NOT?: DiseaseSubscriptionWhereInput[]
}
export type DiseaseSubscriptionWhereInputInputObject =
  | Extract<keyof DiseaseSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DiseaseCoveredSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DiseaseCoveredWhereInput | null
  AND?: DiseaseCoveredSubscriptionWhereInput[]
  OR?: DiseaseCoveredSubscriptionWhereInput[]
  NOT?: DiseaseCoveredSubscriptionWhereInput[]
}
export type DiseaseCoveredSubscriptionWhereInputInputObject =
  | Extract<keyof DiseaseCoveredSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorWhereInput | null
  AND?: DoctorSubscriptionWhereInput[]
  OR?: DoctorSubscriptionWhereInput[]
  NOT?: DoctorSubscriptionWhereInput[]
}
export type DoctorSubscriptionWhereInputInputObject =
  | Extract<keyof DoctorSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorOldSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorOldWhereInput | null
  AND?: DoctorOldSubscriptionWhereInput[]
  OR?: DoctorOldSubscriptionWhereInput[]
  NOT?: DoctorOldSubscriptionWhereInput[]
}
export type DoctorOldSubscriptionWhereInputInputObject =
  | Extract<keyof DoctorOldSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSheduleSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorSheduleWhereInput | null
  AND?: DoctorSheduleSubscriptionWhereInput[]
  OR?: DoctorSheduleSubscriptionWhereInput[]
  NOT?: DoctorSheduleSubscriptionWhereInput[]
}
export type DoctorSheduleSubscriptionWhereInputInputObject =
  | Extract<keyof DoctorSheduleSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSheduleTimeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorSheduleTimeWhereInput | null
  AND?: DoctorSheduleTimeSubscriptionWhereInput[]
  OR?: DoctorSheduleTimeSubscriptionWhereInput[]
  NOT?: DoctorSheduleTimeSubscriptionWhereInput[]
}
export type DoctorSheduleTimeSubscriptionWhereInputInputObject =
  | Extract<keyof DoctorSheduleTimeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorSpecialitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorSpecialityWhereInput | null
  AND?: DoctorSpecialitySubscriptionWhereInput[]
  OR?: DoctorSpecialitySubscriptionWhereInput[]
  NOT?: DoctorSpecialitySubscriptionWhereInput[]
}
export type DoctorSpecialitySubscriptionWhereInputInputObject =
  | Extract<keyof DoctorSpecialitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DoctorsRatingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DoctorsRatingWhereInput | null
  AND?: DoctorsRatingSubscriptionWhereInput[]
  OR?: DoctorsRatingSubscriptionWhereInput[]
  NOT?: DoctorsRatingSubscriptionWhereInput[]
}
export type DoctorsRatingSubscriptionWhereInputInputObject =
  | Extract<keyof DoctorsRatingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DrSheduleSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DrSheduleWhereInput | null
  AND?: DrSheduleSubscriptionWhereInput[]
  OR?: DrSheduleSubscriptionWhereInput[]
  NOT?: DrSheduleSubscriptionWhereInput[]
}
export type DrSheduleSubscriptionWhereInputInputObject =
  | Extract<keyof DrSheduleSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FacilitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: FacilityWhereInput | null
  AND?: FacilitySubscriptionWhereInput[]
  OR?: FacilitySubscriptionWhereInput[]
  NOT?: FacilitySubscriptionWhereInput[]
}
export type FacilitySubscriptionWhereInputInputObject =
  | Extract<keyof FacilitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: HospitalWhereInput | null
  AND?: HospitalSubscriptionWhereInput[]
  OR?: HospitalSubscriptionWhereInput[]
  NOT?: HospitalSubscriptionWhereInput[]
}
export type HospitalSubscriptionWhereInputInputObject =
  | Extract<keyof HospitalSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalDoctorSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: HospitalDoctorWhereInput | null
  AND?: HospitalDoctorSubscriptionWhereInput[]
  OR?: HospitalDoctorSubscriptionWhereInput[]
  NOT?: HospitalDoctorSubscriptionWhereInput[]
}
export type HospitalDoctorSubscriptionWhereInputInputObject =
  | Extract<keyof HospitalDoctorSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalFacilitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: HospitalFacilityWhereInput | null
  AND?: HospitalFacilitySubscriptionWhereInput[]
  OR?: HospitalFacilitySubscriptionWhereInput[]
  NOT?: HospitalFacilitySubscriptionWhereInput[]
}
export type HospitalFacilitySubscriptionWhereInputInputObject =
  | Extract<keyof HospitalFacilitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalInsuranceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: HospitalInsuranceWhereInput | null
  AND?: HospitalInsuranceSubscriptionWhereInput[]
  OR?: HospitalInsuranceSubscriptionWhereInput[]
  NOT?: HospitalInsuranceSubscriptionWhereInput[]
}
export type HospitalInsuranceSubscriptionWhereInputInputObject =
  | Extract<keyof HospitalInsuranceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface HospitalRatingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: HospitalRatingWhereInput | null
  AND?: HospitalRatingSubscriptionWhereInput[]
  OR?: HospitalRatingSubscriptionWhereInput[]
  NOT?: HospitalRatingSubscriptionWhereInput[]
}
export type HospitalRatingSubscriptionWhereInputInputObject =
  | Extract<keyof HospitalRatingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface IllnessSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: IllnessWhereInput | null
  AND?: IllnessSubscriptionWhereInput[]
  OR?: IllnessSubscriptionWhereInput[]
  NOT?: IllnessSubscriptionWhereInput[]
}
export type IllnessSubscriptionWhereInputInputObject =
  | Extract<keyof IllnessSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InsuranceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: InsuranceWhereInput | null
  AND?: InsuranceSubscriptionWhereInput[]
  OR?: InsuranceSubscriptionWhereInput[]
  NOT?: InsuranceSubscriptionWhereInput[]
}
export type InsuranceSubscriptionWhereInputInputObject =
  | Extract<keyof InsuranceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InsuranceCategorySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: InsuranceCategoryWhereInput | null
  AND?: InsuranceCategorySubscriptionWhereInput[]
  OR?: InsuranceCategorySubscriptionWhereInput[]
  NOT?: InsuranceCategorySubscriptionWhereInput[]
}
export type InsuranceCategorySubscriptionWhereInputInputObject =
  | Extract<keyof InsuranceCategorySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface JobSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: JobWhereInput | null
  AND?: JobSubscriptionWhereInput[]
  OR?: JobSubscriptionWhereInput[]
  NOT?: JobSubscriptionWhereInput[]
}
export type JobSubscriptionWhereInputInputObject =
  | Extract<keyof JobSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LanguageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: LanguageWhereInput | null
  AND?: LanguageSubscriptionWhereInput[]
  OR?: LanguageSubscriptionWhereInput[]
  NOT?: LanguageSubscriptionWhereInput[]
}
export type LanguageSubscriptionWhereInputInputObject =
  | Extract<keyof LanguageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MessageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MessageWhereInput | null
  AND?: MessageSubscriptionWhereInput[]
  OR?: MessageSubscriptionWhereInput[]
  NOT?: MessageSubscriptionWhereInput[]
}
export type MessageSubscriptionWhereInputInputObject =
  | Extract<keyof MessageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MigrationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MigrationWhereInput | null
  AND?: MigrationSubscriptionWhereInput[]
  OR?: MigrationSubscriptionWhereInput[]
  NOT?: MigrationSubscriptionWhereInput[]
}
export type MigrationSubscriptionWhereInputInputObject =
  | Extract<keyof MigrationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OfferSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OfferWhereInput | null
  AND?: OfferSubscriptionWhereInput[]
  OR?: OfferSubscriptionWhereInput[]
  NOT?: OfferSubscriptionWhereInput[]
}
export type OfferSubscriptionWhereInputInputObject =
  | Extract<keyof OfferSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineAppointmentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OnlineAppointmentWhereInput | null
  AND?: OnlineAppointmentSubscriptionWhereInput[]
  OR?: OnlineAppointmentSubscriptionWhereInput[]
  NOT?: OnlineAppointmentSubscriptionWhereInput[]
}
export type OnlineAppointmentSubscriptionWhereInputInputObject =
  | Extract<keyof OnlineAppointmentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineDoctorSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OnlineDoctorWhereInput | null
  AND?: OnlineDoctorSubscriptionWhereInput[]
  OR?: OnlineDoctorSubscriptionWhereInput[]
  NOT?: OnlineDoctorSubscriptionWhereInput[]
}
export type OnlineDoctorSubscriptionWhereInputInputObject =
  | Extract<keyof OnlineDoctorSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OnlineRatingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OnlineRatingWhereInput | null
  AND?: OnlineRatingSubscriptionWhereInput[]
  OR?: OnlineRatingSubscriptionWhereInput[]
  NOT?: OnlineRatingSubscriptionWhereInput[]
}
export type OnlineRatingSubscriptionWhereInputInputObject =
  | Extract<keyof OnlineRatingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptTimeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OptTimeWhereInput | null
  AND?: OptTimeSubscriptionWhereInput[]
  OR?: OptTimeSubscriptionWhereInput[]
  NOT?: OptTimeSubscriptionWhereInput[]
}
export type OptTimeSubscriptionWhereInputInputObject =
  | Extract<keyof OptTimeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PasswordResetSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PasswordResetWhereInput | null
  AND?: PasswordResetSubscriptionWhereInput[]
  OR?: PasswordResetSubscriptionWhereInput[]
  NOT?: PasswordResetSubscriptionWhereInput[]
}
export type PasswordResetSubscriptionWhereInputInputObject =
  | Extract<keyof PasswordResetSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PatientSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PatientWhereInput | null
  AND?: PatientSubscriptionWhereInput[]
  OR?: PatientSubscriptionWhereInput[]
  NOT?: PatientSubscriptionWhereInput[]
}
export type PatientSubscriptionWhereInputInputObject =
  | Extract<keyof PatientSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SearchDesignSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SearchDesignWhereInput | null
  AND?: SearchDesignSubscriptionWhereInput[]
  OR?: SearchDesignSubscriptionWhereInput[]
  NOT?: SearchDesignSubscriptionWhereInput[]
}
export type SearchDesignSubscriptionWhereInputInputObject =
  | Extract<keyof SearchDesignSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SheduleTimeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SheduleTimeWhereInput | null
  AND?: SheduleTimeSubscriptionWhereInput[]
  OR?: SheduleTimeSubscriptionWhereInput[]
  NOT?: SheduleTimeSubscriptionWhereInput[]
}
export type SheduleTimeSubscriptionWhereInputInputObject =
  | Extract<keyof SheduleTimeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SliderSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SliderWhereInput | null
  AND?: SliderSubscriptionWhereInput[]
  OR?: SliderSubscriptionWhereInput[]
  NOT?: SliderSubscriptionWhereInput[]
}
export type SliderSubscriptionWhereInputInputObject =
  | Extract<keyof SliderSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SpecialitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SpecialityWhereInput | null
  AND?: SpecialitySubscriptionWhereInput[]
  OR?: SpecialitySubscriptionWhereInput[]
  NOT?: SpecialitySubscriptionWhereInput[]
}
export type SpecialitySubscriptionWhereInputInputObject =
  | Extract<keyof SpecialitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface EmailSubscriptionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: EmailSubscriptionWhereInput | null
  AND?: EmailSubscriptionSubscriptionWhereInput[]
  OR?: EmailSubscriptionSubscriptionWhereInput[]
  NOT?: EmailSubscriptionSubscriptionWhereInput[]
}
export type EmailSubscriptionSubscriptionWhereInputInputObject =
  | Extract<keyof EmailSubscriptionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VideoRequestSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: VideoRequestWhereInput | null
  AND?: VideoRequestSubscriptionWhereInput[]
  OR?: VideoRequestSubscriptionWhereInput[]
  NOT?: VideoRequestSubscriptionWhereInput[]
}
export type VideoRequestSubscriptionWhereInputInputObject =
  | Extract<keyof VideoRequestSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VisitorSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: VisitorWhereInput | null
  AND?: VisitorSubscriptionWhereInput[]
  OR?: VisitorSubscriptionWhereInput[]
  NOT?: VisitorSubscriptionWhereInput[]
}
export type VisitorSubscriptionWhereInputInputObject =
  | Extract<keyof VisitorSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TranslationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TranslationWhereInput | null
  AND?: TranslationSubscriptionWhereInput[]
  OR?: TranslationSubscriptionWhereInput[]
  NOT?: TranslationSubscriptionWhereInput[]
}
export type TranslationSubscriptionWhereInputInputObject =
  | Extract<keyof TranslationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PageWhereInput | null
  AND?: PageSubscriptionWhereInput[]
  OR?: PageSubscriptionWhereInput[]
  NOT?: PageSubscriptionWhereInput[]
}
export type PageSubscriptionWhereInputInputObject =
  | Extract<keyof PageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type AboutUsOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'arabicContent_ASC'
  | 'arabicContent_DESC'
  | 'englishContent_ASC'
  | 'englishContent_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type AdminOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'pass_ASC'
  | 'pass_DESC'
  | 'superAdmin_ASC'
  | 'superAdmin_DESC'
  | 'user_ASC'
  | 'user_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DoctorOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apiKey_ASC'
  | 'apiKey_DESC'
  | 'designation_ASC'
  | 'designation_DESC'
  | 'doctorCv_ASC'
  | 'doctorCv_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'mohcard_ASC'
  | 'mohcard_DESC'
  | 'mohId_ASC'
  | 'mohId_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'nameArabic_ASC'
  | 'nameArabic_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'fees_ASC'
  | 'fees_DESC'
  | 'picture_ASC'
  | 'picture_DESC'
  | 'specialityId_ASC'
  | 'specialityId_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type HospitalOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'address_ASC'
  | 'address_DESC'
  | 'addressArabic_ASC'
  | 'addressArabic_DESC'
  | 'apiKey_ASC'
  | 'apiKey_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'hospital_ASC'
  | 'hospital_DESC'
  | 'hospitalArabic_ASC'
  | 'hospitalArabic_DESC'
  | 'language_ASC'
  | 'language_DESC'
  | 'latitude_ASC'
  | 'latitude_DESC'
  | 'location_ASC'
  | 'location_DESC'
  | 'logo_ASC'
  | 'logo_DESC'
  | 'longitude_ASC'
  | 'longitude_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'phone1_ASC'
  | 'phone1_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'uniqeId_ASC'
  | 'uniqeId_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  
export type InsuranceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'countryId_ASC'
  | 'countryId_DESC'
  | 'insurance_ASC'
  | 'insurance_DESC'
  | 'insuranceArabic_ASC'
  | 'insuranceArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type AppointmentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apointmentDate_ASC'
  | 'apointmentDate_DESC'
  | 'apointmentFulldate_ASC'
  | 'apointmentFulldate_DESC'
  | 'apointmentTime_ASC'
  | 'apointmentTime_DESC'
  | 'doctorArabic_ASC'
  | 'doctorArabic_DESC'
  | 'doctorName_ASC'
  | 'doctorName_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'isRead_ASC'
  | 'isRead_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'phoneCode_ASC'
  | 'phoneCode_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type BlogOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'bannerImage_ASC'
  | 'bannerImage_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type PostImageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'isDefault_ASC'
  | 'isDefault_DESC'
  | 'pic_ASC'
  | 'pic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type BlogCommentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'commentator_ASC'
  | 'commentator_DESC'
  | 'commentatorName_ASC'
  | 'commentatorName_DESC'
  | 'comments_ASC'
  | 'comments_DESC'
  | 'logCreated_ASC'
  | 'logCreated_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type BlogPostOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'logCreated_ASC'
  | 'logCreated_DESC'
  | 'postContent_ASC'
  | 'postContent_DESC'
  | 'postTitle_ASC'
  | 'postTitle_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'totalViewers_ASC'
  | 'totalViewers_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type CityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'city_ASC'
  | 'city_DESC'
  | 'cityArabic_ASC'
  | 'cityArabic_DESC'
  | 'countryId_ASC'
  | 'countryId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ContactUsOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'address_ASC'
  | 'address_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'lat_ASC'
  | 'lat_DESC'
  | 'lon_ASC'
  | 'lon_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'pobox_ASC'
  | 'pobox_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CountryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'country_ASC'
  | 'country_DESC'
  | 'countryArabic_ASC'
  | 'countryArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DiseaseOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'disease_ASC'
  | 'disease_DESC'
  | 'diseaseArabic_ASC'
  | 'diseaseArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DiseaseCoveredOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'diseaseId_ASC'
  | 'diseaseId_DESC'
  | 'insuranceCatId_ASC'
  | 'insuranceCatId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DoctorsRatingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'rating_ASC'
  | 'rating_DESC'
  | 'systemIp_ASC'
  | 'systemIp_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DoctorOldOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apiKey_ASC'
  | 'apiKey_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  | 'designation_ASC'
  | 'designation_DESC'
  | 'doctorCv_ASC'
  | 'doctorCv_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'mohcard_ASC'
  | 'mohcard_DESC'
  | 'mohId_ASC'
  | 'mohId_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'nameArabic_ASC'
  | 'nameArabic_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'fees_ASC'
  | 'fees_DESC'
  | 'picture_ASC'
  | 'picture_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type DoctorSheduleOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'date_ASC'
  | 'date_DESC'
  | 'doctorId_ASC'
  | 'doctorId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DoctorSheduleTimeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'drSheduleId_ASC'
  | 'drSheduleId_DESC'
  | 'scheduleTime_ASC'
  | 'scheduleTime_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DoctorSpecialityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DrSheduleOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'date_ASC'
  | 'date_DESC'
  | 'doctorId_ASC'
  | 'doctorId_DESC'
  | 'hospitalId_ASC'
  | 'hospitalId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type FacilityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'facility_ASC'
  | 'facility_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type HospitalDoctorOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type HospitalFacilityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'facilityId_ASC'
  | 'facilityId_DESC'
  | 'hospitalId_ASC'
  | 'hospitalId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type HospitalInsuranceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type HospitalRatingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'hospitalId_ASC'
  | 'hospitalId_DESC'
  | 'rating_ASC'
  | 'rating_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type IllnessOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'illness_ASC'
  | 'illness_DESC'
  | 'illnessArabic_ASC'
  | 'illnessArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type InsuranceCategoryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'category_ASC'
  | 'category_DESC'
  | 'insuranceId_ASC'
  | 'insuranceId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type JobOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'position_ASC'
  | 'position_DESC'
  | 'positionArabic_ASC'
  | 'positionArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type LanguageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'language_ASC'
  | 'language_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MessageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'fromUser_ASC'
  | 'fromUser_DESC'
  | 'isDelete_ASC'
  | 'isDelete_DESC'
  | 'isRead_ASC'
  | 'isRead_DESC'
  | 'logCreate_ASC'
  | 'logCreate_DESC'
  | 'message_ASC'
  | 'message_DESC'
  | 'sentBy_ASC'
  | 'sentBy_DESC'
  | 'toUser_ASC'
  | 'toUser_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  
export type MigrationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'batch_ASC'
  | 'batch_DESC'
  | 'migration_ASC'
  | 'migration_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OfferOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'descriptionArabic_ASC'
  | 'descriptionArabic_DESC'
  | 'endDate_ASC'
  | 'endDate_DESC'
  | 'heading_ASC'
  | 'heading_DESC'
  | 'headingArabic_ASC'
  | 'headingArabic_DESC'
  | 'hospitalId_ASC'
  | 'hospitalId_DESC'
  | 'offerImage_ASC'
  | 'offerImage_DESC'
  | 'position_ASC'
  | 'position_DESC'
  | 'startDate_ASC'
  | 'startDate_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OnlineAppointmentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apointmentDate_ASC'
  | 'apointmentDate_DESC'
  | 'apointmentFulldate_ASC'
  | 'apointmentFulldate_DESC'
  | 'apointmentTime_ASC'
  | 'apointmentTime_DESC'
  | 'diseaseId_ASC'
  | 'diseaseId_DESC'
  | 'doctorArabic_ASC'
  | 'doctorArabic_DESC'
  | 'doctorId_ASC'
  | 'doctorId_DESC'
  | 'doctorName_ASC'
  | 'doctorName_DESC'
  | 'dtId_ASC'
  | 'dtId_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'optId_ASC'
  | 'optId_DESC'
  | 'patientId_ASC'
  | 'patientId_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'phoneCode_ASC'
  | 'phoneCode_DESC'
  | 'scheduleTimeId_ASC'
  | 'scheduleTimeId_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OnlineDoctorOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apiKey_ASC'
  | 'apiKey_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  | 'designation_ASC'
  | 'designation_DESC'
  | 'doctorCv_ASC'
  | 'doctorCv_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'lastSeen_ASC'
  | 'lastSeen_DESC'
  | 'mohcard_ASC'
  | 'mohcard_DESC'
  | 'mohId_ASC'
  | 'mohId_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'nameArabic_ASC'
  | 'nameArabic_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'picture_ASC'
  | 'picture_DESC'
  | 'specialityId_ASC'
  | 'specialityId_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OnlineRatingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'doctorsId_ASC'
  | 'doctorsId_DESC'
  | 'rating_ASC'
  | 'rating_DESC'
  | 'systemIp_ASC'
  | 'systemIp_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OptTimeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'fifteenMins_ASC'
  | 'fifteenMins_DESC'
  | 'thirtyMins_ASC'
  | 'thirtyMins_DESC'
  | 'twentyMins_ASC'
  | 'twentyMins_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PasswordResetOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'token_ASC'
  | 'token_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PatientOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'age_ASC'
  | 'age_DESC'
  | 'apiKey_ASC'
  | 'apiKey_DESC'
  | 'createdDate_ASC'
  | 'createdDate_DESC'
  | 'dob_ASC'
  | 'dob_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'lastAction_ASC'
  | 'lastAction_DESC'
  | 'lastSeen_ASC'
  | 'lastSeen_DESC'
  | 'mailSubs_ASC'
  | 'mailSubs_DESC'
  | 'mobile_ASC'
  | 'mobile_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'uniqeId_ASC'
  | 'uniqeId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SearchDesignOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'addressColor_ASC'
  | 'addressColor_DESC'
  | 'addressFamily_ASC'
  | 'addressFamily_DESC'
  | 'addressStyle_ASC'
  | 'addressStyle_DESC'
  | 'designationColor_ASC'
  | 'designationColor_DESC'
  | 'designationFamily_ASC'
  | 'designationFamily_DESC'
  | 'designationStyle_ASC'
  | 'designationStyle_DESC'
  | 'doctorColor_ASC'
  | 'doctorColor_DESC'
  | 'doctorFamily_ASC'
  | 'doctorFamily_DESC'
  | 'doctorStyle_ASC'
  | 'doctorStyle_DESC'
  | 'emailColor_ASC'
  | 'emailColor_DESC'
  | 'emailFamily_ASC'
  | 'emailFamily_DESC'
  | 'emailStyle_ASC'
  | 'emailStyle_DESC'
  | 'nameColor_ASC'
  | 'nameColor_DESC'
  | 'nameFamily_ASC'
  | 'nameFamily_DESC'
  | 'nameStyle_ASC'
  | 'nameStyle_DESC'
  | 'phoneColor_ASC'
  | 'phoneColor_DESC'
  | 'phoneFamily_ASC'
  | 'phoneFamily_DESC'
  | 'phoneStyle_ASC'
  | 'phoneStyle_DESC'
  | 'ratingColor_ASC'
  | 'ratingColor_DESC'
  | 'ratingFamily_ASC'
  | 'ratingFamily_DESC'
  | 'ratingStyle_ASC'
  | 'ratingStyle_DESC'
  | 'specialityColor_ASC'
  | 'specialityColor_DESC'
  | 'specialityFamily_ASC'
  | 'specialityFamily_DESC'
  | 'specialityStyle_ASC'
  | 'specialityStyle_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SheduleTimeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'drSheduleId_ASC'
  | 'drSheduleId_DESC'
  | 'scheduleFullDate_ASC'
  | 'scheduleFullDate_DESC'
  | 'sheduleTime_ASC'
  | 'sheduleTime_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SliderOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'arabicHeading_ASC'
  | 'arabicHeading_DESC'
  | 'banner_ASC'
  | 'banner_DESC'
  | 'heading_ASC'
  | 'heading_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SpecialityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'speciality_ASC'
  | 'speciality_DESC'
  | 'specialityArabic_ASC'
  | 'specialityArabic_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type EmailSubscriptionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'rememberToken_ASC'
  | 'rememberToken_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type VideoRequestOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'doctorId_ASC'
  | 'doctorId_DESC'
  | 'joinCall_ASC'
  | 'joinCall_DESC'
  | 'patientId_ASC'
  | 'patientId_DESC'
  | 'requestDate_ASC'
  | 'requestDate_DESC'
  | 'videoCode_ASC'
  | 'videoCode_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type VisitorOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'country_ASC'
  | 'country_DESC'
  | 'hits_ASC'
  | 'hits_DESC'
  | 'ipAddress_ASC'
  | 'ipAddress_DESC'
  | 'visitDate_ASC'
  | 'visitDate_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TranslationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'arabi_ASC'
  | 'arabi_DESC'
  | 'english_ASC'
  | 'english_DESC'
  | 'index_ASC'
  | 'index_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'slug_ar_ASC'
  | 'slug_ar_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'title_ar_ASC'
  | 'title_ar_DESC'
  | 'content_ASC'
  | 'content_DESC'
  | 'content_ar_ASC'
  | 'content_ar_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  